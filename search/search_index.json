{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"VAST: MLIR for Program Analysis","text":"<p>VAST is a library for program analysis and instrumentation of C/C++ and related languages. VAST provides a foundation for customizable program representation for a broad spectrum of analyses. Using the MLIR infrastructure, VAST provides a toolset to represent C/C++ program at various stages of the compilation and to transform the representation to the best-fit program abstraction.</p> <p>Whether static or dynamic, program analysis often requires a specific view of the source code. The usual requirements for a representation is to be easily analyzable, i.e., have a reasonably small set of operations, be truthful to the semantics of the analyzed program, and the analysis must be relatable to the source. It is also beneficial to access the source at various abstraction levels.</p> <p>The current state-of-the-art tools leverage compiler infrastructures to perform program analysis. This approach is beneficial because it remains truthful to the executed program semantics, whether AST or LLVM IR. However, these representations come at a cost as they are designed for optimization and code generation, rather than for program analysis.</p> <p>The Clang AST is unoptimized and too complex for interpretation-based analysis. Also, it lacks program features that Clang inserts during its LLVM code generation process. On the other hand, LLVM is often too low-level and hard to relate to high-level program constructs.</p> <p>VAST is a new compiler front/middle-end designed for program analysis. It transforms parsed C and C++ code, in the form of Clang ASTs, into a high-level MLIR dialect. The high level dialect is then progressively lowered all the way down to LLVM IR. This progression enables VAST to represent the code as a tower of IRs in multiple MLIR dialects. The MLIR allows us to capture high-level features from AST and interleave them with low-level dialects.</p>"},{"location":"#try-vast","title":"Try VAST","text":"<p>You can experiment with VAST on compiler explorer. Feel free to use VAST and produce MLIR dialects. To specify the desired MLIR output, utilize the <code>-vast-emit-mlir=&lt;dialect&gt;</code> option. Currently, the supported options are:</p> <ul> <li><code>-vast-emit-mlir=hl</code> to generate high-level dialect.  - <code>-vast-emit-mlir=llvm</code> to generate LLVM MLIR dialect.</li> </ul> <p>Refer to the vast-front documentation for additional details.</p>"},{"location":"#a-tower-of-irs","title":"A Tower of IRs","text":"<p>The feature that differentiates our approach is that the program representation can hold multiple representations simultaneously, the so-called <code>tower of IRs</code>. One can imagine the tower as multiple MLIR modules side-by-side in various dialects. Each layer of the tower represents a specific stage of compilation. At the top is a high-level dialect relatable to AST, and at the bottom is a low-level LLVM-like dialect. Layers are interlinked with location information. Higher layers can also be seen as metadata for lower layers.</p> <p>This feature simplifies analysis built on top of VAST IR in multiple ways. It naturally provides provenance to higher levels dialects (and source code) from the low levels. Similarly, one can reach for low-level representation from the high-level source view. This can have multiple utilizations.  One of them is relating analysis results to the source. For a user, it is invaluable to represent results in the language of what they see, that is, the high-level representation of the source. For example, using provenance, one can link the values in low-level registers to variable names in the source.  Furthermore, this streamlines communication from the user to the analysis backend and back in the interactive tools and also allows the automatic analysis to query the best-fit representation at any time.</p> <p>The provenance is invaluable for static analysis too. It is often advantageous to perform analysis as an abstract interpretation of the low-level representation and relate it to high-level constructs. For example, when trying to infer properties about control flow, like loop invariants, one can examine high-level operations and relate the results to low-level analysis using provenance links.</p> <p>We expect to provide a DSL library for design of custom program representation abstraction on top of our tower of IRs. The library will provide utilities to link other dialects to the rest of the tower so that the provenance is usable outside the main pipeline.</p>"},{"location":"#dialects","title":"Dialects","text":"<p>As a foundation, VAST provides backbone dialects for the tower of IRs. A high-level dialect <code>hl</code> is a faithful representation of Clang AST. While intermediate dialects represent compilation artifacts like ABI lowering of macro expansions. Whenever it is possible, we try to utilize standard dialects. At the bottom of the tower, we have the <code>llvm</code> dialect. For features that are not present in the <code>llvm</code> dialect, we utilize our low-level dialect <code>ll</code>. We leverage a <code>meta</code> dialect to provide provenance utilities. The currently supported features are documented in automatically generated dialect docs.</p> <p>For types, we provide high-level types from Clang AST enriched by value categories. This allows referencing types as presented in the source. In the rest of the tower, we utilize standard or llvm types, respectively.</p> <p>One does not need to utilize the tower of IRs but can craft a specific representation that interleaves multiple abstractions simultaneously.</p>"},{"location":"CONTRIBUTING/","title":"Contributing to VAST","text":"<p>First, thanks for your interest in contributing to VAST! We welcome and appreciate all contributions, including bug reports, feature suggestions, tutorials/blog posts, and code improvements.</p> <p>If you're unsure where to start, we recommend our <code>good first issue</code> issue label.</p>"},{"location":"CONTRIBUTING/#bug-reports-and-feature-suggestions","title":"Bug reports and feature suggestions","text":"<p>Bug reports and feature suggestions can be submitted to our issue tracker.</p> <p>When reporting a bug please provide a minimal example with steps to reproduce the issue if possible. It helps us a lot, as we can get to the bottom of the issue much faster and can even use it as a test case to catch future regressions.</p>"},{"location":"CONTRIBUTING/#questions","title":"Questions","text":"<p>Questions can be submitted to the discussion page.</p>"},{"location":"CONTRIBUTING/#legal","title":"Legal","text":"<p>For legal reasons, we require contributors to sign our Contributor License Agreement.  This will be automatically checked as part of our CI.</p>"},{"location":"CONTRIBUTING/#git-pull-requests","title":"Git &amp; Pull Requests","text":"<p>VAST uses the pull request contribution model. Please make an account on Github, fork this repo, and submit code contributions via pull request. For more documentation, look here.</p> <p>Since VAST does not squash commits in a pull request, it is important to uphold some culture when it comes to commits.</p> <ul> <li>Commit should ideally be one simple change.</li> <li>Commit messages follow a simple format:   <code>component: Simple sentence with a dot.</code> with maximum of 80 chars and optional longer   message.</li> <li>When unsure what component commit modifies, run <code>git log</code> on the modified file(s).</li> <li>Commits should modify only one component (as a result the project does not have   to build with each separate commit)</li> <li>If you are having troubles coming up with a simple sentence as a commit message,   that is short enough, it may be a good indicator that the commit should be split.</li> </ul> <p>Some pull request guidelines:</p> <ul> <li>Minimize irrelevant changes (formatting, whitespace, etc) to code that would   otherwise not be touched by this patch. Save formatting or style corrections   for a separate pull request that does not make any semantic changes.</li> <li>When possible, large changes should be split up into smaller focused pull   requests.</li> <li>Fill out the pull request description with a summary of what your patch does,   key changes that have been made, and any further points of discussion, if   applicable.</li> <li>Title your pull request with a brief description of what it's changing.   \"Fixes #123\" is a good comment to add to the description, but makes for an   unclear title on its own.</li> <li>CI must pass for the PR to be merged.</li> <li>There must be a review from some maintainer that accepts changes for the PR to be merged.</li> </ul>"},{"location":"statement/","title":"License","text":"<p>VAST is licensed according to the Apache 2.0 license. VAST links against and uses Clang and LLVM APIs. Clang is also licensed under Apache 2.0, with LLVM exceptions.</p> <p>This research was developed with funding from the Defense Advanced Research Projects Agency (DARPA). The views, opinions and/or findings expressed are those of the author and should not be interpreted as representing the official views or policies of the Department of Defense or the U.S. Government.</p> <p>Distribution Statement A \u2013 Approved for Public Release, Distribution Unlimited</p>"},{"location":"Benchmarks/linux_kernel_times/","title":"Linux Kernel","text":"Compilation unit HighLevel with unsupported HighLevel Total passing 15/3023 1746/3023 ./.tmp_vmlinux0.kallsyms.S FAIL FAIL ./.tmp_vmlinux0.kallsyms.S FAIL FAIL ./.tmp_vmlinux1.kallsyms.S FAIL FAIL ./.tmp_vmlinux1.kallsyms.S FAIL FAIL ./.tmp_vmlinux2.kallsyms.S FAIL FAIL ./.tmp_vmlinux2.kallsyms.S FAIL FAIL ./.vmlinux.export.c FAIL 0.32 ./arch/x86/boot/a20.c FAIL 0.12 ./arch/x86/boot/bioscall.S FAIL FAIL ./arch/x86/boot/cmdline.c FAIL 0.95 ./arch/x86/boot/compressed/acpi.c FAIL 2.64 ./arch/x86/boot/compressed/cmdline.c FAIL 2.67 ./arch/x86/boot/compressed/cpuflags.c FAIL 0.73 ./arch/x86/boot/compressed/early_serial_console.c FAIL 2.71 ./arch/x86/boot/compressed/efi.c FAIL 1.71 ./arch/x86/boot/compressed/efi_mixed.S FAIL FAIL ./arch/x86/boot/compressed/error.c FAIL 2.58 ./arch/x86/boot/compressed/head_64.S FAIL FAIL ./arch/x86/boot/compressed/ident_map_64.c FAIL 2.70 ./arch/x86/boot/compressed/idt_64.c FAIL 2.61 ./arch/x86/boot/compressed/idt_handlers_64.S FAIL FAIL ./arch/x86/boot/compressed/kaslr.c FAIL 2.68 ./arch/x86/boot/compressed/kernel_info.S FAIL FAIL ./arch/x86/boot/compressed/misc.c FAIL 1.74 ./arch/x86/boot/compressed/mkpiggy.c FAIL 0.82 ./arch/x86/boot/compressed/mkpiggy.c FAIL FAIL ./arch/x86/boot/compressed/pgtable_64.c FAIL 2.67 ./arch/x86/boot/compressed/piggy.S FAIL FAIL ./arch/x86/boot/compressed/string.c FAIL 0.64 ./arch/x86/boot/copy.S FAIL FAIL ./arch/x86/boot/cpu.c FAIL 0.10 ./arch/x86/boot/cpucheck.c FAIL 0.10 ./arch/x86/boot/cpuflags.c FAIL 0.61 ./arch/x86/boot/early_serial_console.c FAIL 0.94 ./arch/x86/boot/edd.c FAIL 0.95 ./arch/x86/boot/header.S FAIL FAIL ./arch/x86/boot/main.c FAIL 0.89 ./arch/x86/boot/memory.c FAIL 0.95 ./arch/x86/boot/mkcpustr.c FAIL FAIL ./arch/x86/boot/mkcpustr.c FAIL 0.64 ./arch/x86/boot/pm.c FAIL 0.97 ./arch/x86/boot/pmjump.S FAIL FAIL ./arch/x86/boot/printf.c FAIL 0.95 ./arch/x86/boot/regs.c FAIL 0.85 ./arch/x86/boot/string.c FAIL 0.61 ./arch/x86/boot/tools/build.c FAIL 0.10 ./arch/x86/boot/tools/build.c FAIL FAIL ./arch/x86/boot/tty.c FAIL 0.91 ./arch/x86/boot/version.c FAIL 0.90 ./arch/x86/boot/video-bios.c FAIL 0.90 ./arch/x86/boot/video-mode.c FAIL 0.92 ./arch/x86/boot/video-vesa.c FAIL 0.98 ./arch/x86/boot/video-vga.c FAIL 0.11 ./arch/x86/boot/video.c FAIL 0.96 ./arch/x86/entry/common.c FAIL 3.98 ./arch/x86/entry/entry.S FAIL FAIL ./arch/x86/entry/entry_64.S FAIL FAIL ./arch/x86/entry/entry_64_compat.S FAIL FAIL ./arch/x86/entry/syscall_32.c FAIL 3.58 ./arch/x86/entry/syscall_64.c FAIL 4.49 ./arch/x86/entry/thunk.S FAIL FAIL ./arch/x86/entry/vdso/extable.c FAIL 4.19 ./arch/x86/entry/vdso/vclock_gettime.c FAIL 1.58 ./arch/x86/entry/vdso/vdso-image-32.c FAIL 1.13 ./arch/x86/entry/vdso/vdso-image-64.c FAIL 1.14 ./arch/x86/entry/vdso/vdso-note.S FAIL FAIL ./arch/x86/entry/vdso/vdso2c.c FAIL FAIL ./arch/x86/entry/vdso/vdso2c.c FAIL 0.21 ./arch/x86/entry/vdso/vdso32-setup.c FAIL 2.58 ./arch/x86/entry/vdso/vdso32/note.S FAIL FAIL ./arch/x86/entry/vdso/vdso32/sigreturn.S FAIL FAIL ./arch/x86/entry/vdso/vdso32/system_call.S FAIL FAIL ./arch/x86/entry/vdso/vdso32/vclock_gettime.c FAIL 1.52 ./arch/x86/entry/vdso/vdso32/vgetcpu.c FAIL 0.15 ./arch/x86/entry/vdso/vgetcpu.c FAIL 0.16 ./arch/x86/entry/vdso/vgetrandom-chacha.S FAIL FAIL ./arch/x86/entry/vdso/vgetrandom.c FAIL 1.72 ./arch/x86/entry/vdso/vma.c FAIL 3.42 ./arch/x86/entry/vsyscall/vsyscall_64.c FAIL 3.66 ./arch/x86/entry/vsyscall/vsyscall_emu_64.S FAIL FAIL ./arch/x86/events/amd/core.c FAIL FAIL ./arch/x86/events/amd/ibs.c FAIL 3.98 ./arch/x86/events/amd/iommu.c FAIL 3.58 ./arch/x86/events/amd/lbr.c FAIL 3.45 ./arch/x86/events/amd/uncore.c FAIL FAIL ./arch/x86/events/core.c FAIL FAIL ./arch/x86/events/intel/bts.c FAIL FAIL ./arch/x86/events/intel/core.c FAIL FAIL ./arch/x86/events/intel/cstate.c FAIL FAIL ./arch/x86/events/intel/ds.c FAIL 5.19 ./arch/x86/events/intel/knc.c FAIL 3.82 ./arch/x86/events/intel/lbr.c FAIL 3.99 ./arch/x86/events/intel/p4.c FAIL 3.83 ./arch/x86/events/intel/p6.c FAIL 3.64 ./arch/x86/events/intel/pt.c FAIL FAIL ./arch/x86/events/intel/uncore.c FAIL FAIL ./arch/x86/events/intel/uncore_discovery.c FAIL FAIL ./arch/x86/events/intel/uncore_nhmex.c FAIL 3.97 ./arch/x86/events/intel/uncore_snb.c FAIL 3.86 ./arch/x86/events/intel/uncore_snbep.c FAIL FAIL ./arch/x86/events/msr.c FAIL 3.54 ./arch/x86/events/probe.c FAIL 1.51 ./arch/x86/events/rapl.c FAIL FAIL ./arch/x86/events/utils.c FAIL 3.68 ./arch/x86/events/zhaoxin/core.c FAIL FAIL ./arch/x86/ia32/audit.c 0.45 0.52 ./arch/x86/kernel/acpi/boot.c FAIL 3.78 ./arch/x86/kernel/acpi/cppc.c FAIL 3.64 ./arch/x86/kernel/acpi/cstate.c FAIL 3.82 ./arch/x86/kernel/acpi/madt_playdead.S FAIL FAIL ./arch/x86/kernel/acpi/madt_wakeup.c FAIL 3.37 ./arch/x86/kernel/acpi/sleep.c FAIL 3.34 ./arch/x86/kernel/acpi/wakeup_64.S FAIL FAIL ./arch/x86/kernel/alternative.c FAIL 4.26 ./arch/x86/kernel/amd_nb.c FAIL FAIL ./arch/x86/kernel/apic/apic.c FAIL 5.49 ./arch/x86/kernel/apic/apic_common.c FAIL 2.73 ./arch/x86/kernel/apic/apic_flat_64.c FAIL 3.10 ./arch/x86/kernel/apic/apic_noop.c FAIL 2.73 ./arch/x86/kernel/apic/hw_nmi.c FAIL 3.88 ./arch/x86/kernel/apic/init.c FAIL 2.75 ./arch/x86/kernel/apic/io_apic.c FAIL 3.56 ./arch/x86/kernel/apic/ipi.c FAIL 2.80 ./arch/x86/kernel/apic/msi.c FAIL 3.47 ./arch/x86/kernel/apic/probe_64.c FAIL 2.73 ./arch/x86/kernel/apic/vector.c FAIL 4.63 ./arch/x86/kernel/asm-offsets.c FAIL 3.23 ./arch/x86/kernel/audit_64.c FAIL 2.79 ./arch/x86/kernel/bootflag.c FAIL 2.95 ./arch/x86/kernel/callthunks.c FAIL 3.52 ./arch/x86/kernel/cet.c FAIL 3.76 ./arch/x86/kernel/check.c FAIL FAIL ./arch/x86/kernel/cpu/amd.c FAIL 3.45 ./arch/x86/kernel/cpu/aperfmperf.c FAIL 3.50 ./arch/x86/kernel/cpu/bugs.c FAIL 4.76 ./arch/x86/kernel/cpu/cacheinfo.c FAIL 3.73 ./arch/x86/kernel/cpu/capflags.c 0.55 0.62 ./arch/x86/kernel/cpu/centaur.c FAIL 2.64 ./arch/x86/kernel/cpu/common.c FAIL 5.14 ./arch/x86/kernel/cpu/cpuid-deps.c FAIL 2.55 ./arch/x86/kernel/cpu/debugfs.c FAIL 2.74 ./arch/x86/kernel/cpu/feat_ctl.c FAIL 2.50 ./arch/x86/kernel/cpu/hygon.c FAIL 2.87 ./arch/x86/kernel/cpu/hypervisor.c FAIL 1.21 ./arch/x86/kernel/cpu/intel.c FAIL 4.12 ./arch/x86/kernel/cpu/intel_epb.c FAIL 2.60 ./arch/x86/kernel/cpu/match.c FAIL 2.49 ./arch/x86/kernel/cpu/mce/amd.c FAIL 4.99 ./arch/x86/kernel/cpu/mce/core.c FAIL 4.25 ./arch/x86/kernel/cpu/mce/genpool.c FAIL 2.82 ./arch/x86/kernel/cpu/mce/intel.c FAIL 2.81 ./arch/x86/kernel/cpu/mce/severity.c FAIL 3.56 ./arch/x86/kernel/cpu/mce/threshold.c FAIL 4.47 ./arch/x86/kernel/cpu/microcode/amd.c FAIL 3.12 ./arch/x86/kernel/cpu/microcode/core.c FAIL FAIL ./arch/x86/kernel/cpu/microcode/intel.c FAIL 3.15 ./arch/x86/kernel/cpu/mshyperv.c FAIL 4.10 ./arch/x86/kernel/cpu/mtrr/cleanup.c FAIL 3.20 ./arch/x86/kernel/cpu/mtrr/generic.c FAIL 3.10 ./arch/x86/kernel/cpu/mtrr/if.c FAIL 2.39 ./arch/x86/kernel/cpu/mtrr/mtrr.c FAIL 3.26 ./arch/x86/kernel/cpu/perfctr-watchdog.c FAIL 3.11 ./arch/x86/kernel/cpu/powerflags.c FAIL 0.23 ./arch/x86/kernel/cpu/proc.c FAIL 2.81 ./arch/x86/kernel/cpu/rdrand.c FAIL 0.28 ./arch/x86/kernel/cpu/scattered.c FAIL 2.80 ./arch/x86/kernel/cpu/topology.c FAIL 2.70 ./arch/x86/kernel/cpu/topology_amd.c FAIL 2.74 ./arch/x86/kernel/cpu/topology_common.c FAIL 2.83 ./arch/x86/kernel/cpu/topology_ext.c FAIL 2.70 ./arch/x86/kernel/cpu/tsx.c FAIL 2.58 ./arch/x86/kernel/cpu/umwait.c FAIL 3.90 ./arch/x86/kernel/cpu/vmware.c FAIL 3.12 ./arch/x86/kernel/cpu/zhaoxin.c FAIL 2.53 ./arch/x86/kernel/cpuid.c FAIL FAIL ./arch/x86/kernel/crash.c FAIL FAIL ./arch/x86/kernel/crash_dump_64.c FAIL 3.70 ./arch/x86/kernel/dumpstack.c FAIL 3.18 ./arch/x86/kernel/dumpstack_64.c FAIL 3.18 ./arch/x86/kernel/e820.c FAIL 3.33 ./arch/x86/kernel/early-quirks.c FAIL 3.73 ./arch/x86/kernel/early_printk.c FAIL 1.60 ./arch/x86/kernel/ebda.c FAIL 2.80 ./arch/x86/kernel/espfix_64.c FAIL FAIL ./arch/x86/kernel/fpu/bugs.c FAIL 0.39 ./arch/x86/kernel/fpu/core.c FAIL 4.60 ./arch/x86/kernel/fpu/init.c FAIL 1.63 ./arch/x86/kernel/fpu/regset.c FAIL 3.14 ./arch/x86/kernel/fpu/signal.c FAIL 3.44 ./arch/x86/kernel/fpu/xstate.c FAIL 4.28 ./arch/x86/kernel/head64.c FAIL 2.61 ./arch/x86/kernel/head_64.S FAIL FAIL ./arch/x86/kernel/hpet.c FAIL 2.96 ./arch/x86/kernel/hw_breakpoint.c FAIL 3.70 ./arch/x86/kernel/i8237.c FAIL 1.51 ./arch/x86/kernel/i8253.c FAIL 2.81 ./arch/x86/kernel/i8259.c FAIL 3.75 ./arch/x86/kernel/ibt_selftest.S FAIL FAIL ./arch/x86/kernel/idt.c FAIL 3.88 ./arch/x86/kernel/io_delay.c FAIL 1.64 ./arch/x86/kernel/ioport.c FAIL 3.54 ./arch/x86/kernel/irq.c FAIL 4.83 ./arch/x86/kernel/irq_64.c FAIL 3.27 ./arch/x86/kernel/irq_work.c FAIL 4.16 ./arch/x86/kernel/irqflags.S FAIL FAIL ./arch/x86/kernel/irqinit.c FAIL 4.27 ./arch/x86/kernel/itmt.c FAIL 3.30 ./arch/x86/kernel/jump_label.c FAIL 2.99 ./arch/x86/kernel/kdebugfs.c FAIL 2.79 ./arch/x86/kernel/kprobes/core.c FAIL 3.78 ./arch/x86/kernel/kprobes/opt.c FAIL 3.81 ./arch/x86/kernel/ksysfs.c FAIL 2.72 ./arch/x86/kernel/kvm.c FAIL 4.48 ./arch/x86/kernel/kvmclock.c FAIL 3.15 ./arch/x86/kernel/ldt.c FAIL 3.99 ./arch/x86/kernel/machine_kexec_64.c FAIL 3.53 ./arch/x86/kernel/mmconf-fam10h_64.c FAIL 3.55 ./arch/x86/kernel/module.c FAIL FAIL ./arch/x86/kernel/mpparse.c FAIL 3.52 ./arch/x86/kernel/msr.c FAIL FAIL ./arch/x86/kernel/nmi.c FAIL 3.76 ./arch/x86/kernel/paravirt.c FAIL 3.89 ./arch/x86/kernel/pci-dma.c FAIL 3.28 ./arch/x86/kernel/pcspeaker.c FAIL 2.55 ./arch/x86/kernel/perf_regs.c FAIL 3.28 ./arch/x86/kernel/platform-quirks.c FAIL 2.79 ./arch/x86/kernel/probe_roms.c FAIL 3.21 ./arch/x86/kernel/process.c FAIL FAIL ./arch/x86/kernel/process_64.c FAIL 4.18 ./arch/x86/kernel/ptrace.c FAIL 3.74 ./arch/x86/kernel/pvclock.c FAIL 2.65 ./arch/x86/kernel/quirks.c FAIL 3.28 ./arch/x86/kernel/reboot.c FAIL FAIL ./arch/x86/kernel/relocate_kernel_64.S FAIL FAIL ./arch/x86/kernel/resource.c FAIL 0.64 ./arch/x86/kernel/rethook.c FAIL 2.86 ./arch/x86/kernel/rtc.c FAIL 3.15 ./arch/x86/kernel/setup.c FAIL 4.75 ./arch/x86/kernel/setup_percpu.c FAIL FAIL ./arch/x86/kernel/signal.c FAIL FAIL ./arch/x86/kernel/signal_32.c FAIL 3.65 ./arch/x86/kernel/signal_64.c FAIL FAIL ./arch/x86/kernel/smp.c FAIL 4.39 ./arch/x86/kernel/smpboot.c FAIL FAIL ./arch/x86/kernel/stacktrace.c FAIL 3.25 ./arch/x86/kernel/static_call.c FAIL 2.72 ./arch/x86/kernel/step.c FAIL 2.93 ./arch/x86/kernel/sys_ia32.c FAIL 3.77 ./arch/x86/kernel/sys_x86_64.c FAIL 3.48 ./arch/x86/kernel/time.c FAIL 1.75 ./arch/x86/kernel/tls.c FAIL 3.54 ./arch/x86/kernel/trace.c FAIL 3.40 ./arch/x86/kernel/trace_clock.c FAIL 0.61 ./arch/x86/kernel/tracepoint.c FAIL 2.66 ./arch/x86/kernel/traps.c FAIL FAIL ./arch/x86/kernel/tsc.c FAIL FAIL ./arch/x86/kernel/tsc_msr.c FAIL 2.70 ./arch/x86/kernel/tsc_sync.c FAIL 2.14 ./arch/x86/kernel/umip.c FAIL 3.77 ./arch/x86/kernel/unwind_orc.c FAIL 2.97 ./arch/x86/kernel/uprobes.c FAIL 3.86 ./arch/x86/kernel/vmcore_info_64.c FAIL 2.87 ./arch/x86/kernel/vsmp_64.c FAIL 2.77 ./arch/x86/kernel/x86_init.c FAIL 3.46 ./arch/x86/lib/cache-smp.c FAIL 0.61 ./arch/x86/lib/clear_page_64.S FAIL FAIL ./arch/x86/lib/cmdline.c FAIL 0.19 ./arch/x86/lib/cmpxchg16b_emu.S FAIL FAIL ./arch/x86/lib/copy_mc.c FAIL 1.38 ./arch/x86/lib/copy_mc_64.S FAIL FAIL ./arch/x86/lib/copy_page_64.S FAIL FAIL ./arch/x86/lib/copy_user_64.S FAIL FAIL ./arch/x86/lib/copy_user_uncached_64.S FAIL FAIL ./arch/x86/lib/cpu.c FAIL 2.64 ./arch/x86/lib/csum-copy_64.S FAIL FAIL ./arch/x86/lib/csum-partial_64.c FAIL 0.14 ./arch/x86/lib/csum-wrappers_64.c FAIL 1.47 ./arch/x86/lib/delay.c FAIL 1.80 ./arch/x86/lib/getuser.S FAIL FAIL ./arch/x86/lib/hweight.S FAIL FAIL ./arch/x86/lib/inat.c FAIL 0.56 ./arch/x86/lib/insn-eval.c FAIL 3.20 ./arch/x86/lib/insn.c FAIL 0.29 ./arch/x86/lib/iomem.c FAIL 2.69 ./arch/x86/lib/kaslr.c FAIL 0.74 ./arch/x86/lib/memcpy_64.S FAIL FAIL ./arch/x86/lib/memmove_64.S FAIL FAIL ./arch/x86/lib/memset_64.S FAIL FAIL ./arch/x86/lib/misc.c 0.60 0.52 ./arch/x86/lib/msr-reg-export.c FAIL 0.63 ./arch/x86/lib/msr-reg.S FAIL FAIL ./arch/x86/lib/msr-smp.c FAIL 0.73 ./arch/x86/lib/msr.c FAIL 3.54 ./arch/x86/lib/pc-conf-reg.c FAIL 0.67 ./arch/x86/lib/putuser.S FAIL FAIL ./arch/x86/lib/retpoline.S FAIL FAIL ./arch/x86/lib/usercopy.c FAIL 1.30 ./arch/x86/lib/usercopy_64.c FAIL 3.10 ./arch/x86/mm/amdtopology.c FAIL 3.13 ./arch/x86/mm/cpu_entry_area.c FAIL 2.96 ./arch/x86/mm/dump_pagetables.c FAIL 3.29 ./arch/x86/mm/extable.c FAIL 3.93 ./arch/x86/mm/fault.c FAIL 4.58 ./arch/x86/mm/hugetlbpage.c FAIL 3.44 ./arch/x86/mm/init.c FAIL 3.79 ./arch/x86/mm/init_64.c FAIL 3.95 ./arch/x86/mm/ioremap.c FAIL 3.59 ./arch/x86/mm/kaslr.c FAIL 2.91 ./arch/x86/mm/maccess.c FAIL 1.40 ./arch/x86/mm/mmap.c FAIL 2.70 ./arch/x86/mm/numa.c FAIL 4.19 ./arch/x86/mm/numa_64.c FAIL 2.86 ./arch/x86/mm/pat/memtype.c FAIL 2.81 ./arch/x86/mm/pat/memtype_interval.c FAIL 2.56 ./arch/x86/mm/pat/set_memory.c FAIL 3.44 ./arch/x86/mm/pgprot.c FAIL 2.59 ./arch/x86/mm/pgtable.c FAIL 3.43 ./arch/x86/mm/physaddr.c FAIL 2.72 ./arch/x86/mm/pkeys.c FAIL 3.17 ./arch/x86/mm/pti.c FAIL 3.16 ./arch/x86/mm/srat.c FAIL 3.30 ./arch/x86/mm/tlb.c FAIL 3.77 ./arch/x86/pci/acpi.c FAIL 3.36 ./arch/x86/pci/amd_bus.c FAIL 3.93 ./arch/x86/pci/bus_numa.c FAIL 2.76 ./arch/x86/pci/common.c FAIL 3.83 ./arch/x86/pci/direct.c FAIL 2.96 ./arch/x86/pci/early.c FAIL 2.88 ./arch/x86/pci/fixup.c FAIL 3.25 ./arch/x86/pci/i386.c FAIL 3.12 ./arch/x86/pci/init.c FAIL 2.99 ./arch/x86/pci/irq.c FAIL 3.27 ./arch/x86/pci/legacy.c FAIL 2.89 ./arch/x86/pci/mmconfig-shared.c FAIL 3.28 ./arch/x86/pci/mmconfig_64.c FAIL 3.24 ./arch/x86/platform/efi/efi.c FAIL FAIL ./arch/x86/platform/efi/efi_64.c FAIL 3.86 ./arch/x86/platform/efi/efi_stub_64.S FAIL FAIL ./arch/x86/platform/efi/efi_thunk_64.S FAIL FAIL ./arch/x86/platform/efi/memmap.c FAIL 3.65 ./arch/x86/platform/efi/quirks.c FAIL 3.86 ./arch/x86/platform/efi/runtime-map.c FAIL 3.48 ./arch/x86/platform/intel/iosf_mbi.c FAIL FAIL ./arch/x86/power/cpu.c FAIL 3.62 ./arch/x86/power/hibernate.c FAIL 3.32 ./arch/x86/power/hibernate_64.c FAIL 3.18 ./arch/x86/power/hibernate_asm_64.S FAIL FAIL ./arch/x86/realmode/init.c FAIL 2.80 ./arch/x86/realmode/rm/bioscall.S FAIL FAIL ./arch/x86/realmode/rm/copy.S FAIL FAIL ./arch/x86/realmode/rm/header.S FAIL FAIL ./arch/x86/realmode/rm/reboot.S FAIL FAIL ./arch/x86/realmode/rm/regs.c FAIL 0.11 ./arch/x86/realmode/rm/stack.S FAIL FAIL ./arch/x86/realmode/rm/trampoline_64.S FAIL FAIL ./arch/x86/realmode/rm/video-bios.c FAIL 0.10 ./arch/x86/realmode/rm/video-mode.c FAIL 0.11 ./arch/x86/realmode/rm/video-vesa.c FAIL 0.10 ./arch/x86/realmode/rm/video-vga.c FAIL 0.15 ./arch/x86/realmode/rm/wakemain.c FAIL 0.99 ./arch/x86/realmode/rm/wakeup_asm.S FAIL FAIL ./arch/x86/realmode/rmpiggy.S FAIL FAIL ./arch/x86/tools/relocs_32.c FAIL 0.12 ./arch/x86/tools/relocs_64.c FAIL 0.13 ./arch/x86/tools/relocs_common.c FAIL 0.13 ./arch/x86/video/video-common.c FAIL FAIL ./block/badblocks.c FAIL 2.69 ./block/bdev.c FAIL 3.77 ./block/bio.c FAIL 4.42 ./block/blk-cgroup.c FAIL FAIL ./block/blk-core.c FAIL 5.61 ./block/blk-flush.c FAIL 3.34 ./block/blk-ia-ranges.c FAIL 3.41 ./block/blk-ioc.c FAIL 3.68 ./block/blk-iocost.c FAIL FAIL ./block/blk-iolatency.c FAIL FAIL ./block/blk-ioprio.c FAIL 3.53 ./block/blk-lib.c FAIL 3.34 ./block/blk-map.c FAIL 3.32 ./block/blk-merge.c FAIL 4.35 ./block/blk-mq-cpumap.c FAIL 3.45 ./block/blk-mq-debugfs.c FAIL 3.60 ./block/blk-mq-pci.c FAIL 3.60 ./block/blk-mq-sched.c FAIL 4.11 ./block/blk-mq-sysfs.c FAIL 3.32 ./block/blk-mq-tag.c FAIL 3.51 ./block/blk-mq-virtio.c FAIL 3.18 ./block/blk-mq.c FAIL FAIL ./block/blk-pm.c FAIL 3.13 ./block/blk-rq-qos.c FAIL 3.40 ./block/blk-settings.c FAIL 3.51 ./block/blk-stat.c FAIL 3.46 ./block/blk-sysfs.c FAIL 3.68 ./block/blk-timeout.c FAIL 3.38 ./block/bsg.c FAIL FAIL ./block/disk-events.c FAIL 3.41 ./block/early-lookup.c FAIL 3.17 ./block/elevator.c FAIL 4.77 ./block/fops.c FAIL 3.68 ./block/genhd.c FAIL 3.67 ./block/holder.c FAIL 3.16 ./block/ioctl.c FAIL 3.55 ./block/ioprio.c FAIL 3.82 ./block/kyber-iosched.c FAIL FAIL ./block/mq-deadline.c FAIL FAIL ./block/partitions/core.c FAIL 3.49 ./block/partitions/efi.c FAIL 3.39 ./block/partitions/msdos.c FAIL 3.35 ./certs/extract-cert.c FAIL FAIL ./certs/extract-cert.c FAIL 0.48 ./certs/system_certificates.S FAIL FAIL ./certs/system_keyring.c FAIL 1.53 ./crypto/acompress.c FAIL FAIL ./crypto/aead.c FAIL FAIL ./crypto/aes_generic.c FAIL FAIL ./crypto/ahash.c FAIL FAIL ./crypto/akcipher.c FAIL FAIL ./crypto/algapi.c FAIL FAIL ./crypto/algboss.c FAIL FAIL ./crypto/api.c FAIL FAIL ./crypto/asymmetric_keys/asymmetric_type.c FAIL 2.42 ./crypto/asymmetric_keys/pkcs7.asn1.c 0.62 0.72 ./crypto/asymmetric_keys/pkcs7_parser.c FAIL FAIL ./crypto/asymmetric_keys/pkcs7_trust.c FAIL 1.38 ./crypto/asymmetric_keys/pkcs7_verify.c FAIL 1.45 ./crypto/asymmetric_keys/public_key.c FAIL FAIL ./crypto/asymmetric_keys/restrict.c FAIL 2.51 ./crypto/asymmetric_keys/signature.c FAIL 2.44 ./crypto/asymmetric_keys/x509.asn1.c 0.60 0.10 ./crypto/asymmetric_keys/x509_akid.asn1.c 0.53 0.79 ./crypto/asymmetric_keys/x509_cert_parser.c FAIL FAIL ./crypto/asymmetric_keys/x509_loader.c FAIL 0.74 ./crypto/asymmetric_keys/x509_public_key.c FAIL FAIL ./crypto/authenc.c FAIL FAIL ./crypto/authencesn.c FAIL FAIL ./crypto/cbc.c FAIL FAIL ./crypto/ccm.c FAIL FAIL ./crypto/cipher.c FAIL 2.88 ./crypto/cmac.c FAIL FAIL ./crypto/compress.c FAIL 2.82 ./crypto/crc32c_generic.c FAIL FAIL ./crypto/crypto_null.c FAIL FAIL ./crypto/ctr.c FAIL FAIL ./crypto/drbg.c FAIL FAIL ./crypto/ecb.c FAIL FAIL ./crypto/echainiv.c FAIL FAIL ./crypto/gcm.c FAIL FAIL ./crypto/geniv.c FAIL FAIL ./crypto/ghash-generic.c FAIL FAIL ./crypto/hash_info.c FAIL 0.72 ./crypto/hmac.c FAIL FAIL ./crypto/jitterentropy-kcapi.c FAIL FAIL ./crypto/jitterentropy.c FAIL 0.65 ./crypto/kpp.c FAIL FAIL ./crypto/lskcipher.c FAIL FAIL ./crypto/lzo-rle.c FAIL FAIL ./crypto/lzo.c FAIL FAIL ./crypto/md5.c FAIL FAIL ./crypto/proc.c FAIL 2.94 ./crypto/rng.c FAIL FAIL ./crypto/rsa-pkcs1pad.c FAIL FAIL ./crypto/rsa.c FAIL FAIL ./crypto/rsa_helper.c FAIL 0.17 ./crypto/rsaprivkey.asn1.c 0.76 0.64 ./crypto/rsapubkey.asn1.c 0.55 0.61 ./crypto/scatterwalk.c FAIL 2.98 ./crypto/scompress.c FAIL FAIL ./crypto/seqiv.c FAIL FAIL ./crypto/sha256_generic.c FAIL FAIL ./crypto/sha3_generic.c FAIL FAIL ./crypto/sha512_generic.c FAIL FAIL ./crypto/shash.c FAIL FAIL ./crypto/sig.c FAIL FAIL ./crypto/skcipher.c FAIL FAIL ./crypto/testmgr.c FAIL FAIL ./drivers/acpi/ac.c FAIL FAIL ./drivers/acpi/acpi_apd.c FAIL 2.99 ./drivers/acpi/acpi_lpat.c FAIL 2.75 ./drivers/acpi/acpi_lpit.c FAIL 2.73 ./drivers/acpi/acpi_memhotplug.c FAIL 2.87 ./drivers/acpi/acpi_pcc.c FAIL 2.94 ./drivers/acpi/acpi_platform.c FAIL 3.71 ./drivers/acpi/acpi_pnp.c FAIL 2.93 ./drivers/acpi/acpi_processor.c FAIL 3.27 ./drivers/acpi/acpi_video.c FAIL FAIL ./drivers/acpi/acpica/dsargs.c FAIL 1.56 ./drivers/acpi/acpica/dscontrol.c FAIL 1.50 ./drivers/acpi/acpica/dsdebug.c FAIL 1.56 ./drivers/acpi/acpica/dsfield.c FAIL 1.52 ./drivers/acpi/acpica/dsinit.c FAIL 1.41 ./drivers/acpi/acpica/dsmethod.c FAIL 1.59 ./drivers/acpi/acpica/dsmthdat.c FAIL 1.62 ./drivers/acpi/acpica/dsobject.c FAIL 1.68 ./drivers/acpi/acpica/dsopcode.c FAIL 1.58 ./drivers/acpi/acpica/dspkginit.c FAIL 1.56 ./drivers/acpi/acpica/dsutils.c FAIL 1.63 ./drivers/acpi/acpica/dswexec.c FAIL 1.49 ./drivers/acpi/acpica/dswload.c FAIL 1.60 ./drivers/acpi/acpica/dswload2.c FAIL 1.50 ./drivers/acpi/acpica/dswscope.c FAIL 1.61 ./drivers/acpi/acpica/dswstate.c FAIL 1.74 ./drivers/acpi/acpica/evevent.c FAIL 1.47 ./drivers/acpi/acpica/evglock.c FAIL 1.55 ./drivers/acpi/acpica/evgpe.c FAIL 1.59 ./drivers/acpi/acpica/evgpeblk.c FAIL 1.49 ./drivers/acpi/acpica/evgpeinit.c FAIL 1.76 ./drivers/acpi/acpica/evgpeutil.c FAIL 1.43 ./drivers/acpi/acpica/evhandler.c FAIL 1.68 ./drivers/acpi/acpica/evmisc.c FAIL 1.54 ./drivers/acpi/acpica/evregion.c FAIL 1.46 ./drivers/acpi/acpica/evrgnini.c FAIL 1.67 ./drivers/acpi/acpica/evsci.c FAIL 1.61 ./drivers/acpi/acpica/evxface.c FAIL 1.74 ./drivers/acpi/acpica/evxfevnt.c FAIL 1.40 ./drivers/acpi/acpica/evxfgpe.c FAIL 1.64 ./drivers/acpi/acpica/evxfregn.c FAIL 1.52 ./drivers/acpi/acpica/exconcat.c FAIL 1.60 ./drivers/acpi/acpica/exconfig.c FAIL 1.43 ./drivers/acpi/acpica/exconvrt.c FAIL 1.56 ./drivers/acpi/acpica/excreate.c FAIL 1.63 ./drivers/acpi/acpica/exdebug.c FAIL 1.62 ./drivers/acpi/acpica/exdump.c FAIL 1.45 ./drivers/acpi/acpica/exfield.c FAIL 1.52 ./drivers/acpi/acpica/exfldio.c FAIL 1.52 ./drivers/acpi/acpica/exmisc.c FAIL 1.39 ./drivers/acpi/acpica/exmutex.c FAIL 1.54 ./drivers/acpi/acpica/exnames.c FAIL 1.48 ./drivers/acpi/acpica/exoparg1.c FAIL 1.62 ./drivers/acpi/acpica/exoparg2.c FAIL 1.60 ./drivers/acpi/acpica/exoparg3.c FAIL 1.60 ./drivers/acpi/acpica/exoparg6.c FAIL 1.34 ./drivers/acpi/acpica/exprep.c FAIL 1.54 ./drivers/acpi/acpica/exregion.c FAIL 1.52 ./drivers/acpi/acpica/exresnte.c FAIL 1.57 ./drivers/acpi/acpica/exresolv.c FAIL 1.60 ./drivers/acpi/acpica/exresop.c FAIL 1.46 ./drivers/acpi/acpica/exserial.c FAIL 1.53 ./drivers/acpi/acpica/exstore.c FAIL 1.49 ./drivers/acpi/acpica/exstoren.c FAIL 1.55 ./drivers/acpi/acpica/exstorob.c FAIL 1.43 ./drivers/acpi/acpica/exsystem.c FAIL 1.42 ./drivers/acpi/acpica/extrace.c FAIL 1.50 ./drivers/acpi/acpica/exutils.c FAIL 1.35 ./drivers/acpi/acpica/hwacpi.c FAIL 1.36 ./drivers/acpi/acpica/hwesleep.c FAIL 1.57 ./drivers/acpi/acpica/hwgpe.c FAIL 1.49 ./drivers/acpi/acpica/hwpci.c FAIL 1.53 ./drivers/acpi/acpica/hwregs.c FAIL 1.62 ./drivers/acpi/acpica/hwsleep.c FAIL 1.43 ./drivers/acpi/acpica/hwvalid.c FAIL 1.40 ./drivers/acpi/acpica/hwxface.c FAIL 1.47 ./drivers/acpi/acpica/hwxfsleep.c FAIL 1.51 ./drivers/acpi/acpica/nsaccess.c FAIL 1.42 ./drivers/acpi/acpica/nsalloc.c FAIL 1.47 ./drivers/acpi/acpica/nsarguments.c FAIL 1.49 ./drivers/acpi/acpica/nsconvert.c FAIL 1.52 ./drivers/acpi/acpica/nsdump.c FAIL 1.45 ./drivers/acpi/acpica/nseval.c FAIL 1.45 ./drivers/acpi/acpica/nsinit.c FAIL 1.67 ./drivers/acpi/acpica/nsload.c FAIL 1.52 ./drivers/acpi/acpica/nsnames.c FAIL 1.35 ./drivers/acpi/acpica/nsobject.c FAIL 1.48 ./drivers/acpi/acpica/nsparse.c FAIL 1.41 ./drivers/acpi/acpica/nspredef.c FAIL 1.46 ./drivers/acpi/acpica/nsprepkg.c FAIL 1.46 ./drivers/acpi/acpica/nsrepair.c FAIL 1.56 ./drivers/acpi/acpica/nsrepair2.c FAIL 1.39 ./drivers/acpi/acpica/nssearch.c FAIL 1.53 ./drivers/acpi/acpica/nsutils.c FAIL 1.35 ./drivers/acpi/acpica/nswalk.c FAIL 1.31 ./drivers/acpi/acpica/nsxfeval.c FAIL 1.52 ./drivers/acpi/acpica/nsxfname.c FAIL 1.46 ./drivers/acpi/acpica/nsxfobj.c FAIL 1.45 ./drivers/acpi/acpica/psargs.c FAIL 1.50 ./drivers/acpi/acpica/psloop.c FAIL 1.54 ./drivers/acpi/acpica/psobject.c FAIL 1.35 ./drivers/acpi/acpica/psopcode.c FAIL 1.59 ./drivers/acpi/acpica/psopinfo.c FAIL 1.50 ./drivers/acpi/acpica/psparse.c FAIL 1.46 ./drivers/acpi/acpica/psscope.c FAIL 1.51 ./drivers/acpi/acpica/pstree.c FAIL 1.31 ./drivers/acpi/acpica/psutils.c FAIL 1.54 ./drivers/acpi/acpica/pswalk.c FAIL 1.55 ./drivers/acpi/acpica/psxface.c FAIL 1.40 ./drivers/acpi/acpica/rsaddr.c FAIL 1.43 ./drivers/acpi/acpica/rscalc.c FAIL 1.57 ./drivers/acpi/acpica/rscreate.c FAIL 1.47 ./drivers/acpi/acpica/rsdumpinfo.c FAIL 1.44 ./drivers/acpi/acpica/rsinfo.c FAIL 1.52 ./drivers/acpi/acpica/rsio.c FAIL 1.54 ./drivers/acpi/acpica/rsirq.c FAIL 1.37 ./drivers/acpi/acpica/rslist.c FAIL 1.51 ./drivers/acpi/acpica/rsmemory.c FAIL 1.47 ./drivers/acpi/acpica/rsmisc.c FAIL 1.53 ./drivers/acpi/acpica/rsserial.c FAIL 1.37 ./drivers/acpi/acpica/rsutils.c FAIL 1.51 ./drivers/acpi/acpica/rsxface.c FAIL 1.48 ./drivers/acpi/acpica/tbdata.c FAIL 1.56 ./drivers/acpi/acpica/tbfadt.c FAIL 1.53 ./drivers/acpi/acpica/tbfind.c FAIL 1.62 ./drivers/acpi/acpica/tbinstal.c FAIL 1.56 ./drivers/acpi/acpica/tbprint.c FAIL 1.38 ./drivers/acpi/acpica/tbutils.c FAIL 1.50 ./drivers/acpi/acpica/tbxface.c FAIL 1.55 ./drivers/acpi/acpica/tbxfload.c FAIL 1.43 ./drivers/acpi/acpica/tbxfroot.c FAIL 1.50 ./drivers/acpi/acpica/utaddress.c FAIL 1.62 ./drivers/acpi/acpica/utalloc.c FAIL 1.37 ./drivers/acpi/acpica/utascii.c FAIL 1.55 ./drivers/acpi/acpica/utbuffer.c FAIL 1.43 ./drivers/acpi/acpica/utcksum.c FAIL 1.50 ./drivers/acpi/acpica/utcopy.c FAIL 1.53 ./drivers/acpi/acpica/utdebug.c FAIL 1.55 ./drivers/acpi/acpica/utdecode.c FAIL 1.46 ./drivers/acpi/acpica/utdelete.c FAIL 1.54 ./drivers/acpi/acpica/uterror.c FAIL 1.40 ./drivers/acpi/acpica/uteval.c FAIL 1.48 ./drivers/acpi/acpica/utexcep.c FAIL 1.46 ./drivers/acpi/acpica/utglobal.c FAIL 1.53 ./drivers/acpi/acpica/uthex.c FAIL 1.51 ./drivers/acpi/acpica/utids.c FAIL 1.45 ./drivers/acpi/acpica/utinit.c FAIL 1.39 ./drivers/acpi/acpica/utlock.c FAIL 1.34 ./drivers/acpi/acpica/utmath.c FAIL 1.50 ./drivers/acpi/acpica/utmisc.c FAIL 1.49 ./drivers/acpi/acpica/utmutex.c FAIL 1.47 ./drivers/acpi/acpica/utnonansi.c FAIL 1.42 ./drivers/acpi/acpica/utobject.c FAIL 1.53 ./drivers/acpi/acpica/utosi.c FAIL 1.44 ./drivers/acpi/acpica/utownerid.c FAIL 1.42 ./drivers/acpi/acpica/utpredef.c FAIL 1.46 ./drivers/acpi/acpica/utresdecode.c FAIL 1.39 ./drivers/acpi/acpica/utresrc.c FAIL 1.52 ./drivers/acpi/acpica/utstate.c FAIL 1.42 ./drivers/acpi/acpica/utstring.c FAIL 1.45 ./drivers/acpi/acpica/utstrsuppt.c FAIL 1.48 ./drivers/acpi/acpica/utstrtoul64.c FAIL 1.45 ./drivers/acpi/acpica/utxface.c FAIL 1.52 ./drivers/acpi/acpica/utxferror.c FAIL 1.35 ./drivers/acpi/acpica/utxfinit.c FAIL 1.38 ./drivers/acpi/acpica/utxfmutex.c FAIL 1.44 ./drivers/acpi/battery.c FAIL FAIL ./drivers/acpi/bgrt.c FAIL 2.82 ./drivers/acpi/bus.c FAIL 3.51 ./drivers/acpi/button.c FAIL FAIL ./drivers/acpi/container.c FAIL 2.72 ./drivers/acpi/cppc_acpi.c FAIL 3.68 ./drivers/acpi/debugfs.c FAIL 2.77 ./drivers/acpi/device_pm.c FAIL 3.66 ./drivers/acpi/device_sysfs.c FAIL 2.92 ./drivers/acpi/dock.c FAIL FAIL ./drivers/acpi/dptf/int340x_thermal.c FAIL 2.60 ./drivers/acpi/ec.c FAIL FAIL ./drivers/acpi/event.c FAIL 3.91 ./drivers/acpi/evged.c FAIL 3.10 ./drivers/acpi/fan_attr.c FAIL FAIL ./drivers/acpi/fan_core.c FAIL FAIL ./drivers/acpi/fan_hwmon.c FAIL 2.72 ./drivers/acpi/glue.c FAIL 3.13 ./drivers/acpi/ioapic.c FAIL 3.27 ./drivers/acpi/mipi-disco-img.c FAIL 2.94 ./drivers/acpi/nhlt.c FAIL 2.78 ./drivers/acpi/numa/srat.c FAIL 3.13 ./drivers/acpi/nvs.c FAIL 3.29 ./drivers/acpi/osi.c FAIL 2.71 ./drivers/acpi/osl.c FAIL 3.64 ./drivers/acpi/pci_irq.c FAIL 2.99 ./drivers/acpi/pci_link.c FAIL 3.20 ./drivers/acpi/pci_root.c FAIL 3.40 ./drivers/acpi/power.c FAIL 2.89 ./drivers/acpi/prmt.c FAIL 3.64 ./drivers/acpi/proc.c FAIL 3.33 ./drivers/acpi/processor_core.c FAIL 2.97 ./drivers/acpi/processor_driver.c FAIL FAIL ./drivers/acpi/processor_idle.c FAIL FAIL ./drivers/acpi/processor_pdc.c FAIL 2.76 ./drivers/acpi/processor_perflib.c FAIL FAIL ./drivers/acpi/processor_thermal.c FAIL 3.19 ./drivers/acpi/processor_throttling.c FAIL FAIL ./drivers/acpi/property.c FAIL FAIL ./drivers/acpi/reboot.c FAIL 3.99 ./drivers/acpi/resource.c FAIL 2.99 ./drivers/acpi/scan.c FAIL 3.30 ./drivers/acpi/sleep.c FAIL 4.36 ./drivers/acpi/spcr.c FAIL 3.84 ./drivers/acpi/sysfs.c FAIL FAIL ./drivers/acpi/tables.c FAIL 3.62 ./drivers/acpi/thermal.c FAIL FAIL ./drivers/acpi/thermal_lib.c FAIL 2.86 ./drivers/acpi/utils.c FAIL 2.89 ./drivers/acpi/video_detect.c FAIL 3.38 ./drivers/acpi/wakeup.c FAIL 2.77 ./drivers/acpi/x86/apple.c FAIL 2.92 ./drivers/acpi/x86/blacklist.c FAIL 2.72 ./drivers/acpi/x86/cmos_rtc.c FAIL 2.91 ./drivers/acpi/x86/lpss.c FAIL FAIL ./drivers/acpi/x86/s2idle.c FAIL FAIL ./drivers/acpi/x86/utils.c FAIL 2.89 ./drivers/ata/ahci.c FAIL FAIL ./drivers/ata/ata_piix.c FAIL FAIL ./drivers/ata/libahci.c FAIL FAIL ./drivers/ata/libata-acpi.c FAIL FAIL ./drivers/ata/libata-core.c FAIL FAIL ./drivers/ata/libata-eh.c FAIL FAIL ./drivers/ata/libata-pata-timings.c FAIL 3.67 ./drivers/ata/libata-pmp.c FAIL FAIL ./drivers/ata/libata-sata.c FAIL 3.74 ./drivers/ata/libata-scsi.c FAIL 4.32 ./drivers/ata/libata-sff.c FAIL 4.48 ./drivers/ata/libata-trace.c FAIL 4.49 ./drivers/ata/libata-transport.c FAIL 3.47 ./drivers/ata/pata_amd.c FAIL FAIL ./drivers/ata/pata_oldpiix.c FAIL FAIL ./drivers/ata/pata_sch.c FAIL FAIL ./drivers/base/attribute_container.c FAIL 2.47 ./drivers/base/auxiliary.c FAIL FAIL ./drivers/base/auxiliary_sysfs.c FAIL 2.47 ./drivers/base/bus.c FAIL 2.66 ./drivers/base/cacheinfo.c FAIL FAIL ./drivers/base/class.c FAIL 2.94 ./drivers/base/component.c FAIL 2.81 ./drivers/base/container.c FAIL 2.53 ./drivers/base/core.c FAIL 4.66 ./drivers/base/cpu.c FAIL 3.44 ./drivers/base/dd.c FAIL 2.93 ./drivers/base/devres.c FAIL FAIL ./drivers/base/devtmpfs.c FAIL 3.65 ./drivers/base/driver.c FAIL 2.69 ./drivers/base/firmware.c FAIL 2.61 ./drivers/base/firmware_loader/builtin/main.c FAIL 1.29 ./drivers/base/firmware_loader/main.c FAIL FAIL ./drivers/base/init.c FAIL 2.94 ./drivers/base/map.c FAIL 2.56 ./drivers/base/module.c FAIL 2.35 ./drivers/base/node.c FAIL 3.37 ./drivers/base/physical_location.c FAIL 2.65 ./drivers/base/platform-msi.c FAIL 2.69 ./drivers/base/platform.c FAIL 3.48 ./drivers/base/power/common.c FAIL 2.89 ./drivers/base/power/generic_ops.c FAIL 2.65 ./drivers/base/power/main.c FAIL 4.28 ./drivers/base/power/qos.c FAIL 4.85 ./drivers/base/power/runtime.c FAIL 2.63 ./drivers/base/power/sysfs.c FAIL 2.54 ./drivers/base/power/trace.c FAIL 3.19 ./drivers/base/power/wakeirq.c FAIL 2.64 ./drivers/base/power/wakeup.c FAIL 3.99 ./drivers/base/power/wakeup_stats.c FAIL 2.68 ./drivers/base/property.c FAIL FAIL ./drivers/base/regmap/regcache-flat.c FAIL 2.59 ./drivers/base/regmap/regcache-maple.c FAIL 2.69 ./drivers/base/regmap/regcache-rbtree.c FAIL 2.62 ./drivers/base/regmap/regcache.c FAIL 2.79 ./drivers/base/regmap/regmap-debugfs.c FAIL 2.64 ./drivers/base/regmap/regmap.c FAIL 4.18 ./drivers/base/swnode.c FAIL 2.49 ./drivers/base/syscore.c FAIL 4.13 ./drivers/base/topology.c FAIL 2.77 ./drivers/base/trace.c FAIL 3.25 ./drivers/base/transport_class.c FAIL 2.52 ./drivers/block/loop.c FAIL FAIL ./drivers/block/virtio_blk.c FAIL FAIL ./drivers/cdrom/cdrom.c FAIL FAIL ./drivers/char/agp/amd64-agp.c FAIL FAIL ./drivers/char/agp/backend.c FAIL FAIL ./drivers/char/agp/generic.c FAIL 3.24 ./drivers/char/agp/intel-agp.c FAIL FAIL ./drivers/char/agp/intel-gtt.c FAIL FAIL ./drivers/char/agp/isoch.c FAIL 2.84 ./drivers/char/hpet.c FAIL 3.28 ./drivers/char/hw_random/core.c FAIL FAIL ./drivers/char/hw_random/via-rng.c FAIL FAIL ./drivers/char/mem.c FAIL 3.51 ./drivers/char/misc.c FAIL 2.91 ./drivers/char/nvram.c FAIL FAIL ./drivers/char/random.c FAIL FAIL ./drivers/char/virtio_console.c FAIL FAIL ./drivers/clocksource/acpi_pm.c FAIL 2.93 ./drivers/clocksource/i8253.c FAIL 2.60 ./drivers/connector/cn_proc.c FAIL FAIL ./drivers/connector/cn_queue.c FAIL FAIL ./drivers/connector/connector.c FAIL FAIL ./drivers/cpufreq/acpi-cpufreq.c FAIL FAIL ./drivers/cpufreq/amd-pstate-trace.c FAIL 3.55 ./drivers/cpufreq/amd-pstate.c FAIL FAIL ./drivers/cpufreq/cpufreq.c FAIL FAIL ./drivers/cpufreq/cpufreq_governor.c FAIL FAIL ./drivers/cpufreq/cpufreq_governor_attr_set.c FAIL 2.80 ./drivers/cpufreq/cpufreq_ondemand.c FAIL FAIL ./drivers/cpufreq/cpufreq_performance.c FAIL FAIL ./drivers/cpufreq/cpufreq_userspace.c FAIL FAIL ./drivers/cpufreq/freq_table.c FAIL FAIL ./drivers/cpufreq/intel_pstate.c FAIL FAIL ./drivers/cpuidle/cpuidle-haltpoll.c FAIL FAIL ./drivers/cpuidle/cpuidle.c FAIL FAIL ./drivers/cpuidle/driver.c FAIL 2.61 ./drivers/cpuidle/governor.c FAIL 2.50 ./drivers/cpuidle/governors/haltpoll.c FAIL FAIL ./drivers/cpuidle/governors/menu.c FAIL 1.58 ./drivers/cpuidle/poll_state.c FAIL 0.79 ./drivers/cpuidle/sysfs.c FAIL 2.48 ./drivers/dma-buf/dma-buf.c FAIL 3.39 ./drivers/dma-buf/dma-fence-array.c FAIL 2.19 ./drivers/dma-buf/dma-fence-chain.c FAIL FAIL ./drivers/dma-buf/dma-fence-unwrap.c FAIL 2.96 ./drivers/dma-buf/dma-fence.c FAIL FAIL ./drivers/dma-buf/dma-resv.c FAIL 2.89 ./drivers/dma-buf/sync_file.c FAIL 2.38 ./drivers/dma/acpi-dma.c FAIL 3.11 ./drivers/dma/dmaengine.c FAIL FAIL ./drivers/dma/dw/acpi.c FAIL 2.96 ./drivers/dma/dw/core.c FAIL FAIL ./drivers/dma/dw/dw.c FAIL 2.74 ./drivers/dma/dw/idma32.c FAIL 2.92 ./drivers/dma/hsu/hsu.c FAIL FAIL ./drivers/dma/virt-dma.c FAIL FAIL ./drivers/firewire/init_ohci1394_dma.c FAIL 2.97 ./drivers/firmware/dmi-id.c FAIL 2.43 ./drivers/firmware/dmi_scan.c FAIL 3.21 ./drivers/firmware/efi/earlycon.c FAIL 3.21 ./drivers/firmware/efi/efi-bgrt.c FAIL FAIL ./drivers/firmware/efi/efi.c FAIL FAIL ./drivers/firmware/efi/esrt.c FAIL 3.72 ./drivers/firmware/efi/libstub/alignedmem.c FAIL 3.39 ./drivers/firmware/efi/libstub/efi-stub-helper.c FAIL 3.57 ./drivers/firmware/efi/libstub/file.c FAIL 3.42 ./drivers/firmware/efi/libstub/gop.c FAIL 3.50 ./drivers/firmware/efi/libstub/mem.c FAIL 3.46 ./drivers/firmware/efi/libstub/pci.c FAIL 3.47 ./drivers/firmware/efi/libstub/printk.c FAIL 3.45 ./drivers/firmware/efi/libstub/random.c FAIL 3.64 ./drivers/firmware/efi/libstub/randomalloc.c FAIL 3.40 ./drivers/firmware/efi/libstub/relocate.c FAIL 3.57 ./drivers/firmware/efi/libstub/secureboot.c FAIL 3.63 ./drivers/firmware/efi/libstub/skip_spaces.c FAIL 0.74 ./drivers/firmware/efi/libstub/smbios.c FAIL 3.54 ./drivers/firmware/efi/libstub/tpm.c FAIL 3.71 ./drivers/firmware/efi/libstub/vsprintf.c FAIL 0.18 ./drivers/firmware/efi/libstub/x86-5lvl.c FAIL 3.32 ./drivers/firmware/efi/libstub/x86-stub.c FAIL 3.76 ./drivers/firmware/efi/memattr.c FAIL 2.81 ./drivers/firmware/efi/memmap.c FAIL 3.66 ./drivers/firmware/efi/reboot.c FAIL 2.62 ./drivers/firmware/efi/runtime-wrappers.c FAIL 3.58 ./drivers/firmware/efi/tpm.c FAIL 3.30 ./drivers/firmware/efi/vars.c FAIL 2.81 ./drivers/firmware/memmap.c FAIL 2.90 ./drivers/gpu/drm/bridge/panel.c FAIL 3.19 ./drivers/gpu/drm/display/drm_display_helper_mod.c FAIL FAIL ./drivers/gpu/drm/display/drm_dp_dual_mode_helper.c FAIL 3.54 ./drivers/gpu/drm/display/drm_dp_helper.c FAIL FAIL ./drivers/gpu/drm/display/drm_dp_mst_topology.c FAIL FAIL ./drivers/gpu/drm/display/drm_dsc_helper.c FAIL 3.59 ./drivers/gpu/drm/display/drm_hdcp_helper.c FAIL 2.91 ./drivers/gpu/drm/display/drm_hdmi_helper.c FAIL 2.93 ./drivers/gpu/drm/display/drm_scdc_helper.c FAIL 3.67 ./drivers/gpu/drm/drm_aperture.c FAIL 2.64 ./drivers/gpu/drm/drm_atomic.c FAIL 3.34 ./drivers/gpu/drm/drm_atomic_helper.c FAIL FAIL ./drivers/gpu/drm/drm_atomic_state_helper.c FAIL 3.22 ./drivers/gpu/drm/drm_atomic_uapi.c FAIL 3.37 ./drivers/gpu/drm/drm_auth.c FAIL 2.98 ./drivers/gpu/drm/drm_blend.c FAIL 3.18 ./drivers/gpu/drm/drm_bridge.c FAIL FAIL ./drivers/gpu/drm/drm_bridge_connector.c FAIL 3.14 ./drivers/gpu/drm/drm_buddy.c FAIL FAIL ./drivers/gpu/drm/drm_cache.c FAIL 2.64 ./drivers/gpu/drm/drm_client.c FAIL 3.17 ./drivers/gpu/drm/drm_client_modeset.c FAIL 3.35 ./drivers/gpu/drm/drm_color_mgmt.c FAIL 3.65 ./drivers/gpu/drm/drm_connector.c FAIL 3.37 ./drivers/gpu/drm/drm_crtc.c FAIL 3.20 ./drivers/gpu/drm/drm_crtc_helper.c FAIL FAIL ./drivers/gpu/drm/drm_damage_helper.c FAIL 3.10 ./drivers/gpu/drm/drm_debugfs.c FAIL 3.56 ./drivers/gpu/drm/drm_debugfs_crc.c FAIL FAIL ./drivers/gpu/drm/drm_displayid.c FAIL 2.62 ./drivers/gpu/drm/drm_drv.c FAIL FAIL ./drivers/gpu/drm/drm_dumb_buffers.c FAIL 2.96 ./drivers/gpu/drm/drm_edid.c FAIL FAIL ./drivers/gpu/drm/drm_eld.c FAIL 0.77 ./drivers/gpu/drm/drm_encoder.c FAIL 3.27 ./drivers/gpu/drm/drm_encoder_slave.c FAIL FAIL ./drivers/gpu/drm/drm_file.c FAIL FAIL ./drivers/gpu/drm/drm_flip_work.c FAIL 3.14 ./drivers/gpu/drm/drm_format_helper.c FAIL 2.73 ./drivers/gpu/drm/drm_fourcc.c FAIL 1.49 ./drivers/gpu/drm/drm_framebuffer.c FAIL 3.82 ./drivers/gpu/drm/drm_gem.c FAIL 3.71 ./drivers/gpu/drm/drm_gem_atomic_helper.c FAIL 3.69 ./drivers/gpu/drm/drm_gem_framebuffer_helper.c FAIL FAIL ./drivers/gpu/drm/drm_gem_shmem_helper.c FAIL FAIL ./drivers/gpu/drm/drm_ioc32.c FAIL 3.71 ./drivers/gpu/drm/drm_ioctl.c FAIL FAIL ./drivers/gpu/drm/drm_kms_helper_common.c FAIL FAIL ./drivers/gpu/drm/drm_lease.c FAIL 3.97 ./drivers/gpu/drm/drm_managed.c FAIL 3.29 ./drivers/gpu/drm/drm_mipi_dsi.c FAIL FAIL ./drivers/gpu/drm/drm_mm.c FAIL 2.59 ./drivers/gpu/drm/drm_mode_config.c FAIL 3.11 ./drivers/gpu/drm/drm_mode_object.c FAIL 3.24 ./drivers/gpu/drm/drm_modes.c FAIL FAIL ./drivers/gpu/drm/drm_modeset_helper.c FAIL 3.88 ./drivers/gpu/drm/drm_modeset_lock.c FAIL 3.11 ./drivers/gpu/drm/drm_panel.c FAIL FAIL ./drivers/gpu/drm/drm_panel_orientation_quirks.c FAIL FAIL ./drivers/gpu/drm/drm_pci.c FAIL 3.12 ./drivers/gpu/drm/drm_plane.c FAIL 3.99 ./drivers/gpu/drm/drm_plane_helper.c FAIL 2.98 ./drivers/gpu/drm/drm_prime.c FAIL FAIL ./drivers/gpu/drm/drm_print.c FAIL FAIL ./drivers/gpu/drm/drm_probe_helper.c FAIL FAIL ./drivers/gpu/drm/drm_property.c FAIL 2.99 ./drivers/gpu/drm/drm_rect.c FAIL 2.54 ./drivers/gpu/drm/drm_self_refresh_helper.c FAIL 2.81 ./drivers/gpu/drm/drm_simple_kms_helper.c FAIL FAIL ./drivers/gpu/drm/drm_syncobj.c FAIL FAIL ./drivers/gpu/drm/drm_sysfs.c FAIL 3.68 ./drivers/gpu/drm/drm_trace_points.c FAIL 3.48 ./drivers/gpu/drm/drm_vblank.c FAIL FAIL ./drivers/gpu/drm/drm_vblank_work.c FAIL 3.24 ./drivers/gpu/drm/drm_vma_manager.c FAIL 2.85 ./drivers/gpu/drm/drm_writeback.c FAIL 3.11 ./drivers/gpu/drm/i915/display/dvo_ch7017.c FAIL FAIL ./drivers/gpu/drm/i915/display/dvo_ch7xxx.c FAIL FAIL ./drivers/gpu/drm/i915/display/dvo_ivch.c FAIL FAIL ./drivers/gpu/drm/i915/display/dvo_ns2501.c FAIL FAIL ./drivers/gpu/drm/i915/display/dvo_sil164.c FAIL FAIL ./drivers/gpu/drm/i915/display/dvo_tfp410.c FAIL FAIL ./drivers/gpu/drm/i915/display/g4x_dp.c FAIL FAIL ./drivers/gpu/drm/i915/display/g4x_hdmi.c FAIL FAIL ./drivers/gpu/drm/i915/display/hsw_ips.c FAIL FAIL ./drivers/gpu/drm/i915/display/i9xx_plane.c FAIL FAIL ./drivers/gpu/drm/i915/display/i9xx_wm.c FAIL FAIL ./drivers/gpu/drm/i915/display/icl_dsi.c FAIL FAIL ./drivers/gpu/drm/i915/display/intel_acpi.c FAIL FAIL ./drivers/gpu/drm/i915/display/intel_alpm.c FAIL FAIL ./drivers/gpu/drm/i915/display/intel_atomic.c FAIL FAIL ./drivers/gpu/drm/i915/display/intel_atomic_plane.c FAIL FAIL ./drivers/gpu/drm/i915/display/intel_audio.c FAIL FAIL ./drivers/gpu/drm/i915/display/intel_backlight.c FAIL FAIL ./drivers/gpu/drm/i915/display/intel_bios.c FAIL FAIL ./drivers/gpu/drm/i915/display/intel_bw.c FAIL FAIL ./drivers/gpu/drm/i915/display/intel_cdclk.c FAIL FAIL ./drivers/gpu/drm/i915/display/intel_color.c FAIL FAIL ./drivers/gpu/drm/i915/display/intel_combo_phy.c FAIL FAIL ./drivers/gpu/drm/i915/display/intel_connector.c FAIL FAIL ./drivers/gpu/drm/i915/display/intel_crt.c FAIL FAIL ./drivers/gpu/drm/i915/display/intel_crtc.c FAIL FAIL ./drivers/gpu/drm/i915/display/intel_crtc_state_dump.c FAIL FAIL ./drivers/gpu/drm/i915/display/intel_cursor.c FAIL FAIL ./drivers/gpu/drm/i915/display/intel_cx0_phy.c FAIL FAIL ./drivers/gpu/drm/i915/display/intel_ddi.c FAIL FAIL ./drivers/gpu/drm/i915/display/intel_ddi_buf_trans.c FAIL FAIL ./drivers/gpu/drm/i915/display/intel_display.c FAIL FAIL ./drivers/gpu/drm/i915/display/intel_display_debugfs.c FAIL FAIL ./drivers/gpu/drm/i915/display/intel_display_debugfs_params.c FAIL 4.18 ./drivers/gpu/drm/i915/display/intel_display_device.c FAIL 4.64 ./drivers/gpu/drm/i915/display/intel_display_driver.c FAIL FAIL ./drivers/gpu/drm/i915/display/intel_display_irq.c FAIL FAIL ./drivers/gpu/drm/i915/display/intel_display_params.c FAIL FAIL ./drivers/gpu/drm/i915/display/intel_display_power.c FAIL FAIL ./drivers/gpu/drm/i915/display/intel_display_power_map.c FAIL FAIL ./drivers/gpu/drm/i915/display/intel_display_power_well.c FAIL FAIL ./drivers/gpu/drm/i915/display/intel_display_reset.c FAIL FAIL ./drivers/gpu/drm/i915/display/intel_display_rps.c FAIL FAIL ./drivers/gpu/drm/i915/display/intel_display_trace.c FAIL FAIL ./drivers/gpu/drm/i915/display/intel_display_wa.c FAIL 4.75 ./drivers/gpu/drm/i915/display/intel_dkl_phy.c FAIL 4.51 ./drivers/gpu/drm/i915/display/intel_dmc.c FAIL FAIL ./drivers/gpu/drm/i915/display/intel_dmc_wl.c FAIL 4.55 ./drivers/gpu/drm/i915/display/intel_dp.c FAIL FAIL ./drivers/gpu/drm/i915/display/intel_dp_aux.c FAIL FAIL ./drivers/gpu/drm/i915/display/intel_dp_aux_backlight.c FAIL FAIL ./drivers/gpu/drm/i915/display/intel_dp_hdcp.c FAIL FAIL ./drivers/gpu/drm/i915/display/intel_dp_link_training.c FAIL FAIL ./drivers/gpu/drm/i915/display/intel_dp_mst.c FAIL FAIL ./drivers/gpu/drm/i915/display/intel_dpio_phy.c FAIL FAIL ./drivers/gpu/drm/i915/display/intel_dpll.c FAIL FAIL ./drivers/gpu/drm/i915/display/intel_dpll_mgr.c FAIL FAIL ./drivers/gpu/drm/i915/display/intel_dpt.c FAIL FAIL ./drivers/gpu/drm/i915/display/intel_dpt_common.c FAIL FAIL ./drivers/gpu/drm/i915/display/intel_drrs.c FAIL FAIL ./drivers/gpu/drm/i915/display/intel_dsb.c FAIL FAIL ./drivers/gpu/drm/i915/display/intel_dsb_buffer.c FAIL FAIL ./drivers/gpu/drm/i915/display/intel_dsi.c FAIL FAIL ./drivers/gpu/drm/i915/display/intel_dsi_dcs_backlight.c FAIL FAIL ./drivers/gpu/drm/i915/display/intel_dsi_vbt.c FAIL FAIL ./drivers/gpu/drm/i915/display/intel_dvo.c FAIL FAIL ./drivers/gpu/drm/i915/display/intel_encoder.c FAIL FAIL ./drivers/gpu/drm/i915/display/intel_fb.c FAIL FAIL ./drivers/gpu/drm/i915/display/intel_fb_bo.c FAIL 4.13 ./drivers/gpu/drm/i915/display/intel_fb_pin.c FAIL FAIL ./drivers/gpu/drm/i915/display/intel_fbc.c FAIL FAIL ./drivers/gpu/drm/i915/display/intel_fdi.c FAIL FAIL ./drivers/gpu/drm/i915/display/intel_fifo_underrun.c FAIL FAIL ./drivers/gpu/drm/i915/display/intel_frontbuffer.c FAIL FAIL ./drivers/gpu/drm/i915/display/intel_global_state.c FAIL FAIL ./drivers/gpu/drm/i915/display/intel_gmbus.c FAIL FAIL ./drivers/gpu/drm/i915/display/intel_hdcp.c FAIL FAIL ./drivers/gpu/drm/i915/display/intel_hdcp_gsc.c FAIL 4.34 ./drivers/gpu/drm/i915/display/intel_hdcp_gsc_message.c FAIL 4.13 ./drivers/gpu/drm/i915/display/intel_hdmi.c FAIL FAIL ./drivers/gpu/drm/i915/display/intel_hotplug.c FAIL FAIL ./drivers/gpu/drm/i915/display/intel_hotplug_irq.c FAIL FAIL ./drivers/gpu/drm/i915/display/intel_hti.c FAIL 4.55 ./drivers/gpu/drm/i915/display/intel_link_bw.c FAIL FAIL ./drivers/gpu/drm/i915/display/intel_load_detect.c FAIL FAIL ./drivers/gpu/drm/i915/display/intel_lpe_audio.c FAIL 4.68 ./drivers/gpu/drm/i915/display/intel_lspcon.c FAIL FAIL ./drivers/gpu/drm/i915/display/intel_lvds.c FAIL FAIL ./drivers/gpu/drm/i915/display/intel_modeset_lock.c FAIL FAIL ./drivers/gpu/drm/i915/display/intel_modeset_setup.c FAIL FAIL ./drivers/gpu/drm/i915/display/intel_modeset_verify.c FAIL FAIL ./drivers/gpu/drm/i915/display/intel_opregion.c FAIL FAIL ./drivers/gpu/drm/i915/display/intel_overlay.c FAIL FAIL ./drivers/gpu/drm/i915/display/intel_panel.c FAIL FAIL ./drivers/gpu/drm/i915/display/intel_pch_display.c FAIL FAIL ./drivers/gpu/drm/i915/display/intel_pch_refclk.c FAIL FAIL ./drivers/gpu/drm/i915/display/intel_pipe_crc.c FAIL FAIL ./drivers/gpu/drm/i915/display/intel_plane_initial.c FAIL FAIL ./drivers/gpu/drm/i915/display/intel_pmdemand.c FAIL FAIL ./drivers/gpu/drm/i915/display/intel_pps.c FAIL FAIL ./drivers/gpu/drm/i915/display/intel_psr.c FAIL FAIL ./drivers/gpu/drm/i915/display/intel_qp_tables.c FAIL 1.14 ./drivers/gpu/drm/i915/display/intel_quirks.c FAIL FAIL ./drivers/gpu/drm/i915/display/intel_sdvo.c FAIL FAIL ./drivers/gpu/drm/i915/display/intel_snps_phy.c FAIL FAIL ./drivers/gpu/drm/i915/display/intel_sprite.c FAIL FAIL ./drivers/gpu/drm/i915/display/intel_sprite_uapi.c FAIL FAIL ./drivers/gpu/drm/i915/display/intel_tc.c FAIL FAIL ./drivers/gpu/drm/i915/display/intel_tv.c FAIL FAIL ./drivers/gpu/drm/i915/display/intel_vblank.c FAIL FAIL ./drivers/gpu/drm/i915/display/intel_vdsc.c FAIL FAIL ./drivers/gpu/drm/i915/display/intel_vga.c FAIL 4.72 ./drivers/gpu/drm/i915/display/intel_vrr.c FAIL FAIL ./drivers/gpu/drm/i915/display/intel_wm.c FAIL FAIL ./drivers/gpu/drm/i915/display/skl_scaler.c FAIL FAIL ./drivers/gpu/drm/i915/display/skl_universal_plane.c FAIL FAIL ./drivers/gpu/drm/i915/display/skl_watermark.c FAIL FAIL ./drivers/gpu/drm/i915/display/vlv_dsi.c FAIL FAIL ./drivers/gpu/drm/i915/display/vlv_dsi_pll.c FAIL FAIL ./drivers/gpu/drm/i915/gem/i915_gem_busy.c FAIL 4.20 ./drivers/gpu/drm/i915/gem/i915_gem_clflush.c FAIL 4.79 ./drivers/gpu/drm/i915/gem/i915_gem_context.c FAIL 4.98 ./drivers/gpu/drm/i915/gem/i915_gem_create.c FAIL 4.73 ./drivers/gpu/drm/i915/gem/i915_gem_dmabuf.c FAIL FAIL ./drivers/gpu/drm/i915/gem/i915_gem_domain.c FAIL 4.40 ./drivers/gpu/drm/i915/gem/i915_gem_execbuffer.c FAIL 4.84 ./drivers/gpu/drm/i915/gem/i915_gem_internal.c FAIL 4.30 ./drivers/gpu/drm/i915/gem/i915_gem_lmem.c FAIL 4.25 ./drivers/gpu/drm/i915/gem/i915_gem_mman.c FAIL 4.90 ./drivers/gpu/drm/i915/gem/i915_gem_object.c FAIL 4.89 ./drivers/gpu/drm/i915/gem/i915_gem_pages.c FAIL 4.26 ./drivers/gpu/drm/i915/gem/i915_gem_phys.c FAIL 4.35 ./drivers/gpu/drm/i915/gem/i915_gem_pm.c FAIL 4.28 ./drivers/gpu/drm/i915/gem/i915_gem_region.c FAIL 4.79 ./drivers/gpu/drm/i915/gem/i915_gem_shmem.c FAIL 4.70 ./drivers/gpu/drm/i915/gem/i915_gem_shrinker.c FAIL 4.80 ./drivers/gpu/drm/i915/gem/i915_gem_stolen.c FAIL 4.21 ./drivers/gpu/drm/i915/gem/i915_gem_throttle.c FAIL 4.70 ./drivers/gpu/drm/i915/gem/i915_gem_tiling.c FAIL 4.41 ./drivers/gpu/drm/i915/gem/i915_gem_ttm.c FAIL 4.37 ./drivers/gpu/drm/i915/gem/i915_gem_ttm_move.c FAIL 4.20 ./drivers/gpu/drm/i915/gem/i915_gem_ttm_pm.c FAIL 4.16 ./drivers/gpu/drm/i915/gem/i915_gem_userptr.c FAIL 4.69 ./drivers/gpu/drm/i915/gem/i915_gem_wait.c FAIL 4.10 ./drivers/gpu/drm/i915/gem/i915_gemfs.c FAIL 4.12 ./drivers/gpu/drm/i915/gt/gen2_engine_cs.c FAIL 4.42 ./drivers/gpu/drm/i915/gt/gen6_engine_cs.c FAIL 4.26 ./drivers/gpu/drm/i915/gt/gen6_ppgtt.c FAIL 4.92 ./drivers/gpu/drm/i915/gt/gen6_renderstate.c FAIL 1.69 ./drivers/gpu/drm/i915/gt/gen7_renderclear.c FAIL 4.38 ./drivers/gpu/drm/i915/gt/gen7_renderstate.c FAIL 1.72 ./drivers/gpu/drm/i915/gt/gen8_engine_cs.c FAIL 4.56 ./drivers/gpu/drm/i915/gt/gen8_ppgtt.c FAIL 4.97 ./drivers/gpu/drm/i915/gt/gen8_renderstate.c FAIL 1.70 ./drivers/gpu/drm/i915/gt/gen9_renderstate.c FAIL 1.64 ./drivers/gpu/drm/i915/gt/intel_breadcrumbs.c FAIL 5.11 ./drivers/gpu/drm/i915/gt/intel_context.c FAIL 4.88 ./drivers/gpu/drm/i915/gt/intel_context_sseu.c FAIL 4.85 ./drivers/gpu/drm/i915/gt/intel_engine_cs.c FAIL 5.14 ./drivers/gpu/drm/i915/gt/intel_engine_heartbeat.c FAIL 4.71 ./drivers/gpu/drm/i915/gt/intel_engine_pm.c FAIL 4.63 ./drivers/gpu/drm/i915/gt/intel_engine_user.c FAIL 4.35 ./drivers/gpu/drm/i915/gt/intel_execlists_submission.c FAIL 5.29 ./drivers/gpu/drm/i915/gt/intel_ggtt.c FAIL 4.98 ./drivers/gpu/drm/i915/gt/intel_ggtt_fencing.c FAIL 4.43 ./drivers/gpu/drm/i915/gt/intel_ggtt_gmch.c FAIL 4.31 ./drivers/gpu/drm/i915/gt/intel_gsc.c FAIL 4.25 ./drivers/gpu/drm/i915/gt/intel_gt.c FAIL 4.89 ./drivers/gpu/drm/i915/gt/intel_gt_buffer_pool.c FAIL 4.17 ./drivers/gpu/drm/i915/gt/intel_gt_ccs_mode.c FAIL 4.44 ./drivers/gpu/drm/i915/gt/intel_gt_clock_utils.c FAIL 4.25 ./drivers/gpu/drm/i915/gt/intel_gt_debugfs.c FAIL 4.18 ./drivers/gpu/drm/i915/gt/intel_gt_engines_debugfs.c FAIL 4.59 ./drivers/gpu/drm/i915/gt/intel_gt_irq.c FAIL 4.32 ./drivers/gpu/drm/i915/gt/intel_gt_mcr.c FAIL FAIL ./drivers/gpu/drm/i915/gt/intel_gt_pm.c FAIL 4.66 ./drivers/gpu/drm/i915/gt/intel_gt_pm_debugfs.c FAIL 4.30 ./drivers/gpu/drm/i915/gt/intel_gt_pm_irq.c FAIL 4.39 ./drivers/gpu/drm/i915/gt/intel_gt_requests.c FAIL FAIL ./drivers/gpu/drm/i915/gt/intel_gt_sysfs.c FAIL 4.21 ./drivers/gpu/drm/i915/gt/intel_gt_sysfs_pm.c FAIL 4.36 ./drivers/gpu/drm/i915/gt/intel_gtt.c FAIL 4.86 ./drivers/gpu/drm/i915/gt/intel_llc.c FAIL 4.33 ./drivers/gpu/drm/i915/gt/intel_lrc.c FAIL 4.97 ./drivers/gpu/drm/i915/gt/intel_migrate.c FAIL 4.85 ./drivers/gpu/drm/i915/gt/intel_mocs.c FAIL 4.37 ./drivers/gpu/drm/i915/gt/intel_ppgtt.c FAIL 4.74 ./drivers/gpu/drm/i915/gt/intel_rc6.c FAIL 4.40 ./drivers/gpu/drm/i915/gt/intel_region_lmem.c FAIL 4.25 ./drivers/gpu/drm/i915/gt/intel_renderstate.c FAIL 4.92 ./drivers/gpu/drm/i915/gt/intel_reset.c FAIL FAIL ./drivers/gpu/drm/i915/gt/intel_ring.c FAIL 4.23 ./drivers/gpu/drm/i915/gt/intel_ring_submission.c FAIL 4.79 ./drivers/gpu/drm/i915/gt/intel_rps.c FAIL 4.49 ./drivers/gpu/drm/i915/gt/intel_sa_media.c FAIL 4.27 ./drivers/gpu/drm/i915/gt/intel_sseu.c FAIL 4.32 ./drivers/gpu/drm/i915/gt/intel_sseu_debugfs.c FAIL 4.45 ./drivers/gpu/drm/i915/gt/intel_timeline.c FAIL 4.32 ./drivers/gpu/drm/i915/gt/intel_tlb.c FAIL 4.28 ./drivers/gpu/drm/i915/gt/intel_wopcm.c FAIL 4.33 ./drivers/gpu/drm/i915/gt/intel_workarounds.c FAIL 4.93 ./drivers/gpu/drm/i915/gt/shmem_utils.c FAIL 4.61 ./drivers/gpu/drm/i915/gt/sysfs_engines.c FAIL 4.42 ./drivers/gpu/drm/i915/gt/uc/intel_gsc_fw.c FAIL 4.51 ./drivers/gpu/drm/i915/gt/uc/intel_gsc_proxy.c FAIL 4.12 ./drivers/gpu/drm/i915/gt/uc/intel_gsc_uc.c FAIL 4.45 ./drivers/gpu/drm/i915/gt/uc/intel_gsc_uc_debugfs.c FAIL 4.18 ./drivers/gpu/drm/i915/gt/uc/intel_gsc_uc_heci_cmd_submit.c FAIL 4.60 ./drivers/gpu/drm/i915/gt/uc/intel_guc.c FAIL 4.25 ./drivers/gpu/drm/i915/gt/uc/intel_guc_ads.c FAIL FAIL ./drivers/gpu/drm/i915/gt/uc/intel_guc_capture.c FAIL 4.89 ./drivers/gpu/drm/i915/gt/uc/intel_guc_ct.c FAIL FAIL ./drivers/gpu/drm/i915/gt/uc/intel_guc_debugfs.c FAIL 3.77 ./drivers/gpu/drm/i915/gt/uc/intel_guc_fw.c FAIL 4.23 ./drivers/gpu/drm/i915/gt/uc/intel_guc_hwconfig.c FAIL 4.15 ./drivers/gpu/drm/i915/gt/uc/intel_guc_log.c FAIL 4.32 ./drivers/gpu/drm/i915/gt/uc/intel_guc_log_debugfs.c FAIL 4.30 ./drivers/gpu/drm/i915/gt/uc/intel_guc_rc.c FAIL 4.31 ./drivers/gpu/drm/i915/gt/uc/intel_guc_slpc.c FAIL 4.52 ./drivers/gpu/drm/i915/gt/uc/intel_guc_submission.c FAIL FAIL ./drivers/gpu/drm/i915/gt/uc/intel_huc.c FAIL 4.46 ./drivers/gpu/drm/i915/gt/uc/intel_huc_debugfs.c FAIL 3.91 ./drivers/gpu/drm/i915/gt/uc/intel_huc_fw.c FAIL 4.31 ./drivers/gpu/drm/i915/gt/uc/intel_uc.c FAIL 4.38 ./drivers/gpu/drm/i915/gt/uc/intel_uc_debugfs.c FAIL 3.86 ./drivers/gpu/drm/i915/gt/uc/intel_uc_fw.c FAIL FAIL ./drivers/gpu/drm/i915/i915_active.c FAIL 4.47 ./drivers/gpu/drm/i915/i915_cmd_parser.c FAIL 4.45 ./drivers/gpu/drm/i915/i915_config.c FAIL 1.80 ./drivers/gpu/drm/i915/i915_debugfs.c FAIL 4.85 ./drivers/gpu/drm/i915/i915_debugfs_params.c FAIL 4.31 ./drivers/gpu/drm/i915/i915_deps.c FAIL 2.84 ./drivers/gpu/drm/i915/i915_driver.c FAIL FAIL ./drivers/gpu/drm/i915/i915_drm_client.c FAIL 4.84 ./drivers/gpu/drm/i915/i915_gem.c FAIL 5.40 ./drivers/gpu/drm/i915/i915_gem_evict.c FAIL 4.81 ./drivers/gpu/drm/i915/i915_gem_gtt.c FAIL 4.71 ./drivers/gpu/drm/i915/i915_gem_ww.c FAIL 3.83 ./drivers/gpu/drm/i915/i915_getparam.c FAIL 4.18 ./drivers/gpu/drm/i915/i915_gpu_error.c FAIL FAIL ./drivers/gpu/drm/i915/i915_hwmon.c FAIL 4.41 ./drivers/gpu/drm/i915/i915_ioc32.c FAIL 4.16 ./drivers/gpu/drm/i915/i915_ioctl.c FAIL 3.94 ./drivers/gpu/drm/i915/i915_irq.c FAIL FAIL ./drivers/gpu/drm/i915/i915_memcpy.c FAIL 0.31 ./drivers/gpu/drm/i915/i915_mitigations.c FAIL FAIL ./drivers/gpu/drm/i915/i915_mm.c FAIL 4.32 ./drivers/gpu/drm/i915/i915_module.c FAIL FAIL ./drivers/gpu/drm/i915/i915_params.c FAIL FAIL ./drivers/gpu/drm/i915/i915_pci.c FAIL FAIL ./drivers/gpu/drm/i915/i915_perf.c FAIL FAIL ./drivers/gpu/drm/i915/i915_pmu.c FAIL 4.45 ./drivers/gpu/drm/i915/i915_query.c FAIL 4.25 ./drivers/gpu/drm/i915/i915_request.c FAIL 5.12 ./drivers/gpu/drm/i915/i915_scatterlist.c FAIL 3.20 ./drivers/gpu/drm/i915/i915_scheduler.c FAIL FAIL ./drivers/gpu/drm/i915/i915_suspend.c FAIL 4.81 ./drivers/gpu/drm/i915/i915_sw_fence.c FAIL 2.85 ./drivers/gpu/drm/i915/i915_sw_fence_work.c FAIL 1.24 ./drivers/gpu/drm/i915/i915_switcheroo.c FAIL 4.55 ./drivers/gpu/drm/i915/i915_syncmap.c FAIL 1.70 ./drivers/gpu/drm/i915/i915_sysfs.c FAIL 3.99 ./drivers/gpu/drm/i915/i915_trace_points.c FAIL 4.90 ./drivers/gpu/drm/i915/i915_ttm_buddy_manager.c FAIL 3.12 ./drivers/gpu/drm/i915/i915_user_extensions.c FAIL 1.69 ./drivers/gpu/drm/i915/i915_utils.c FAIL 4.17 ./drivers/gpu/drm/i915/i915_vgpu.c FAIL 4.96 ./drivers/gpu/drm/i915/i915_vma.c FAIL 5.83 ./drivers/gpu/drm/i915/i915_vma_resource.c FAIL 4.40 ./drivers/gpu/drm/i915/intel_clock_gating.c FAIL 4.28 ./drivers/gpu/drm/i915/intel_device_info.c FAIL 4.34 ./drivers/gpu/drm/i915/intel_memory_region.c FAIL 3.98 ./drivers/gpu/drm/i915/intel_pcode.c FAIL FAIL ./drivers/gpu/drm/i915/intel_region_ttm.c FAIL 4.33 ./drivers/gpu/drm/i915/intel_runtime_pm.c FAIL 4.83 ./drivers/gpu/drm/i915/intel_sbi.c FAIL 4.18 ./drivers/gpu/drm/i915/intel_step.c FAIL 3.99 ./drivers/gpu/drm/i915/intel_uncore.c FAIL FAIL ./drivers/gpu/drm/i915/intel_wakeref.c FAIL FAIL ./drivers/gpu/drm/i915/pxp/intel_pxp.c FAIL 4.78 ./drivers/gpu/drm/i915/pxp/intel_pxp_huc.c FAIL 4.32 ./drivers/gpu/drm/i915/pxp/intel_pxp_tee.c FAIL 4.31 ./drivers/gpu/drm/i915/soc/intel_dram.c FAIL 4.33 ./drivers/gpu/drm/i915/soc/intel_gmch.c FAIL 4.47 ./drivers/gpu/drm/i915/soc/intel_pch.c FAIL 4.30 ./drivers/gpu/drm/i915/vlv_sideband.c FAIL 4.19 ./drivers/gpu/drm/i915/vlv_suspend.c FAIL 4.71 ./drivers/gpu/drm/ttm/ttm_agp_backend.c FAIL 3.55 ./drivers/gpu/drm/ttm/ttm_bo.c FAIL 2.98 ./drivers/gpu/drm/ttm/ttm_bo_util.c FAIL 3.37 ./drivers/gpu/drm/ttm/ttm_bo_vm.c FAIL 2.94 ./drivers/gpu/drm/ttm/ttm_device.c FAIL 3.18 ./drivers/gpu/drm/ttm/ttm_execbuf_util.c FAIL 2.80 ./drivers/gpu/drm/ttm/ttm_module.c FAIL FAIL ./drivers/gpu/drm/ttm/ttm_pool.c FAIL FAIL ./drivers/gpu/drm/ttm/ttm_range_manager.c FAIL 2.75 ./drivers/gpu/drm/ttm/ttm_resource.c FAIL 3.14 ./drivers/gpu/drm/ttm/ttm_sys_manager.c FAIL 2.48 ./drivers/gpu/drm/ttm/ttm_tt.c FAIL FAIL ./drivers/gpu/drm/virtio/virtgpu_debugfs.c FAIL 3.26 ./drivers/gpu/drm/virtio/virtgpu_display.c FAIL 3.12 ./drivers/gpu/drm/virtio/virtgpu_drv.c FAIL FAIL ./drivers/gpu/drm/virtio/virtgpu_fence.c FAIL 3.31 ./drivers/gpu/drm/virtio/virtgpu_gem.c FAIL 3.21 ./drivers/gpu/drm/virtio/virtgpu_ioctl.c FAIL FAIL ./drivers/gpu/drm/virtio/virtgpu_kms.c FAIL FAIL ./drivers/gpu/drm/virtio/virtgpu_object.c FAIL FAIL ./drivers/gpu/drm/virtio/virtgpu_plane.c FAIL 3.26 ./drivers/gpu/drm/virtio/virtgpu_prime.c FAIL FAIL ./drivers/gpu/drm/virtio/virtgpu_submit.c FAIL 3.33 ./drivers/gpu/drm/virtio/virtgpu_trace_points.c FAIL 3.71 ./drivers/gpu/drm/virtio/virtgpu_vq.c FAIL 3.37 ./drivers/gpu/drm/virtio/virtgpu_vram.c FAIL 3.27 ./drivers/hid/hid-a4tech.c FAIL FAIL ./drivers/hid/hid-apple.c FAIL FAIL ./drivers/hid/hid-belkin.c FAIL FAIL ./drivers/hid/hid-cherry.c FAIL FAIL ./drivers/hid/hid-chicony.c FAIL FAIL ./drivers/hid/hid-core.c FAIL FAIL ./drivers/hid/hid-cypress.c FAIL FAIL ./drivers/hid/hid-debug.c FAIL FAIL ./drivers/hid/hid-ezkey.c FAIL FAIL ./drivers/hid/hid-generic.c FAIL FAIL ./drivers/hid/hid-gyration.c FAIL FAIL ./drivers/hid/hid-input.c FAIL 3.68 ./drivers/hid/hid-ite.c FAIL FAIL ./drivers/hid/hid-kensington.c FAIL FAIL ./drivers/hid/hid-lg-g15.c FAIL FAIL ./drivers/hid/hid-lg.c FAIL FAIL ./drivers/hid/hid-lg4ff.c FAIL 3.38 ./drivers/hid/hid-lgff.c FAIL FAIL ./drivers/hid/hid-microsoft.c FAIL FAIL ./drivers/hid/hid-monterey.c FAIL FAIL ./drivers/hid/hid-ntrig.c FAIL FAIL ./drivers/hid/hid-petalynx.c FAIL FAIL ./drivers/hid/hid-pl.c FAIL FAIL ./drivers/hid/hid-quirks.c FAIL 3.17 ./drivers/hid/hid-redragon.c FAIL FAIL ./drivers/hid/hid-samsung.c FAIL FAIL ./drivers/hid/hid-sony.c FAIL FAIL ./drivers/hid/hid-sunplus.c FAIL FAIL ./drivers/hid/hid-topseed.c FAIL FAIL ./drivers/hid/hidraw.c FAIL FAIL ./drivers/hid/usbhid/hid-core.c FAIL FAIL ./drivers/hid/usbhid/hid-pidff.c FAIL FAIL ./drivers/hid/usbhid/hiddev.c FAIL FAIL ./drivers/hwmon/hwmon.c FAIL FAIL ./drivers/i2c/algos/i2c-algo-bit.c FAIL FAIL ./drivers/i2c/busses/i2c-i801.c FAIL FAIL ./drivers/i2c/i2c-boardinfo.c FAIL 3.33 ./drivers/i2c/i2c-core-acpi.c FAIL 3.43 ./drivers/i2c/i2c-core-base.c FAIL FAIL ./drivers/i2c/i2c-core-smbus.c FAIL 4.16 ./drivers/i2c/i2c-smbus.c FAIL FAIL ./drivers/input/evdev.c FAIL FAIL ./drivers/input/ff-core.c FAIL 2.45 ./drivers/input/ff-memless.c FAIL FAIL ./drivers/input/input-compat.c FAIL 2.47 ./drivers/input/input-leds.c FAIL FAIL ./drivers/input/input-mt.c FAIL 2.57 ./drivers/input/input-poller.c FAIL 2.51 ./drivers/input/input.c FAIL FAIL ./drivers/input/keyboard/atkbd.c FAIL FAIL ./drivers/input/mouse/alps.c FAIL FAIL ./drivers/input/mouse/byd.c FAIL FAIL ./drivers/input/mouse/cypress_ps2.c FAIL FAIL ./drivers/input/mouse/focaltech.c FAIL FAIL ./drivers/input/mouse/lifebook.c FAIL FAIL ./drivers/input/mouse/logips2pp.c FAIL FAIL ./drivers/input/mouse/psmouse-base.c FAIL FAIL ./drivers/input/mouse/psmouse-smbus.c FAIL FAIL ./drivers/input/mouse/synaptics.c FAIL FAIL ./drivers/input/mouse/trackpoint.c FAIL FAIL ./drivers/input/serio/i8042.c FAIL FAIL ./drivers/input/serio/libps2.c FAIL FAIL ./drivers/input/serio/serio.c FAIL FAIL ./drivers/input/serio/serport.c FAIL FAIL ./drivers/input/sparse-keymap.c FAIL FAIL ./drivers/input/touchscreen.c FAIL FAIL ./drivers/input/vivaldi-fmap.c FAIL FAIL ./drivers/iommu/amd/init.c FAIL 3.78 ./drivers/iommu/amd/io_pgtable.c FAIL FAIL ./drivers/iommu/amd/io_pgtable_v2.c FAIL FAIL ./drivers/iommu/amd/iommu.c FAIL 3.61 ./drivers/iommu/amd/pasid.c FAIL 3.12 ./drivers/iommu/amd/ppr.c FAIL 3.36 ./drivers/iommu/amd/quirks.c FAIL 3.31 ./drivers/iommu/dma-iommu.c FAIL 3.46 ./drivers/iommu/intel/cache.c FAIL 4.17 ./drivers/iommu/intel/cap_audit.c FAIL 3.82 ./drivers/iommu/intel/dmar.c FAIL 4.80 ./drivers/iommu/intel/iommu.c FAIL FAIL ./drivers/iommu/intel/nested.c FAIL 3.85 ./drivers/iommu/intel/pasid.c FAIL 4.47 ./drivers/iommu/intel/perfmon.c FAIL 3.79 ./drivers/iommu/intel/trace.c FAIL 4.28 ./drivers/iommu/io-pgfault.c FAIL 2.97 ./drivers/iommu/io-pgtable.c FAIL 2.99 ./drivers/iommu/iommu-sva.c FAIL 3.16 ./drivers/iommu/iommu-sysfs.c FAIL 3.73 ./drivers/iommu/iommu-traces.c FAIL 3.71 ./drivers/iommu/iommu.c FAIL 3.41 ./drivers/iommu/iova.c FAIL FAIL ./drivers/leds/led-class.c FAIL FAIL ./drivers/leds/led-core.c FAIL 2.77 ./drivers/leds/led-triggers.c FAIL 2.73 ./drivers/macintosh/mac_hid.c FAIL FAIL ./drivers/mailbox/mailbox.c FAIL 2.86 ./drivers/mailbox/pcc.c FAIL 3.35 ./drivers/md/dm-builtin.c FAIL 3.79 ./drivers/md/dm-io-rewind.c FAIL 3.83 ./drivers/md/dm-io.c FAIL 4.10 ./drivers/md/dm-ioctl.c FAIL FAIL ./drivers/md/dm-kcopyd.c FAIL FAIL ./drivers/md/dm-linear.c FAIL 3.10 ./drivers/md/dm-log.c FAIL FAIL ./drivers/md/dm-raid1.c FAIL FAIL ./drivers/md/dm-region-hash.c FAIL FAIL ./drivers/md/dm-rq.c FAIL FAIL ./drivers/md/dm-stats.c FAIL FAIL ./drivers/md/dm-stripe.c FAIL 2.89 ./drivers/md/dm-sysfs.c FAIL 3.93 ./drivers/md/dm-table.c FAIL 3.97 ./drivers/md/dm-target.c FAIL 3.75 ./drivers/md/dm-zero.c FAIL FAIL ./drivers/md/dm.c FAIL FAIL ./drivers/md/md-autodetect.c FAIL 3.87 ./drivers/md/md-bitmap.c FAIL 4.86 ./drivers/md/md.c FAIL FAIL ./drivers/misc/mei/bus-fixup.c FAIL 3.15 ./drivers/misc/mei/bus.c FAIL FAIL ./drivers/misc/mei/client.c FAIL FAIL ./drivers/misc/mei/debugfs.c FAIL 2.61 ./drivers/misc/mei/dma-ring.c FAIL 2.98 ./drivers/misc/mei/hbm.c FAIL FAIL ./drivers/misc/mei/hw-me.c FAIL FAIL ./drivers/misc/mei/init.c FAIL 2.67 ./drivers/misc/mei/interrupt.c FAIL 2.71 ./drivers/misc/mei/main.c FAIL FAIL ./drivers/misc/mei/mei-trace.c FAIL 3.42 ./drivers/misc/mei/pci-me.c FAIL FAIL ./drivers/net/ethernet/broadcom/tg3.c FAIL FAIL ./drivers/net/ethernet/intel/e100.c FAIL FAIL ./drivers/net/ethernet/intel/e1000/e1000_ethtool.c FAIL FAIL ./drivers/net/ethernet/intel/e1000/e1000_hw.c FAIL FAIL ./drivers/net/ethernet/intel/e1000/e1000_main.c FAIL FAIL ./drivers/net/ethernet/intel/e1000/e1000_param.c FAIL FAIL ./drivers/net/ethernet/intel/e1000e/80003es2lan.c FAIL FAIL ./drivers/net/ethernet/intel/e1000e/82571.c FAIL FAIL ./drivers/net/ethernet/intel/e1000e/ethtool.c FAIL FAIL ./drivers/net/ethernet/intel/e1000e/ich8lan.c FAIL FAIL ./drivers/net/ethernet/intel/e1000e/mac.c FAIL FAIL ./drivers/net/ethernet/intel/e1000e/manage.c FAIL FAIL ./drivers/net/ethernet/intel/e1000e/netdev.c FAIL FAIL ./drivers/net/ethernet/intel/e1000e/nvm.c FAIL FAIL ./drivers/net/ethernet/intel/e1000e/param.c FAIL FAIL ./drivers/net/ethernet/intel/e1000e/phy.c FAIL FAIL ./drivers/net/ethernet/intel/e1000e/ptp.c FAIL FAIL ./drivers/net/ethernet/marvell/sky2.c FAIL FAIL ./drivers/net/ethernet/nvidia/forcedeth.c FAIL FAIL ./drivers/net/ethernet/realtek/8139too.c FAIL FAIL ./drivers/net/ethernet/realtek/r8169_firmware.c FAIL 2.35 ./drivers/net/ethernet/realtek/r8169_main.c FAIL FAIL ./drivers/net/ethernet/realtek/r8169_phy_config.c FAIL FAIL ./drivers/net/loopback.c FAIL FAIL ./drivers/net/mdio/acpi_mdio.c FAIL FAIL ./drivers/net/mdio/fwnode_mdio.c FAIL FAIL ./drivers/net/mii.c FAIL FAIL ./drivers/net/net_failover.c FAIL FAIL ./drivers/net/netconsole.c FAIL FAIL ./drivers/net/phy/fixed_phy.c FAIL FAIL ./drivers/net/phy/linkmode.c FAIL FAIL ./drivers/net/phy/mdio-boardinfo.c FAIL FAIL ./drivers/net/phy/mdio_bus.c FAIL FAIL ./drivers/net/phy/mdio_device.c FAIL FAIL ./drivers/net/phy/mdio_devres.c FAIL FAIL ./drivers/net/phy/phy-c45.c FAIL FAIL ./drivers/net/phy/phy-core.c FAIL FAIL ./drivers/net/phy/phy.c FAIL FAIL ./drivers/net/phy/phy_device.c FAIL FAIL ./drivers/net/phy/realtek.c FAIL FAIL ./drivers/net/phy/stubs.c FAIL 3.79 ./drivers/net/phy/swphy.c FAIL FAIL ./drivers/net/virtio_net.c FAIL FAIL ./drivers/nvmem/core.c FAIL FAIL ./drivers/pci/access.c FAIL FAIL ./drivers/pci/ats.c FAIL FAIL ./drivers/pci/bus.c FAIL FAIL ./drivers/pci/devres.c FAIL FAIL ./drivers/pci/host-bridge.c FAIL FAIL ./drivers/pci/hotplug/acpi_pcihp.c FAIL FAIL ./drivers/pci/hotplug/pci_hotplug_core.c FAIL FAIL ./drivers/pci/iomap.c FAIL 2.88 ./drivers/pci/irq.c FAIL FAIL ./drivers/pci/mmap.c FAIL FAIL ./drivers/pci/msi/api.c FAIL 3.87 ./drivers/pci/msi/irqdomain.c FAIL 3.46 ./drivers/pci/msi/msi.c FAIL FAIL ./drivers/pci/msi/pcidev_msi.c FAIL FAIL ./drivers/pci/pci-acpi.c FAIL FAIL ./drivers/pci/pci-driver.c FAIL FAIL ./drivers/pci/pci-label.c FAIL FAIL ./drivers/pci/pci-sysfs.c FAIL FAIL ./drivers/pci/pci.c FAIL FAIL ./drivers/pci/pcie/aspm.c FAIL FAIL ./drivers/pci/pcie/pme.c FAIL FAIL ./drivers/pci/pcie/portdrv.c FAIL FAIL ./drivers/pci/pcie/rcec.c FAIL FAIL ./drivers/pci/probe.c FAIL FAIL ./drivers/pci/proc.c FAIL FAIL ./drivers/pci/quirks.c FAIL FAIL ./drivers/pci/remove.c FAIL FAIL ./drivers/pci/rom.c FAIL FAIL ./drivers/pci/search.c FAIL FAIL ./drivers/pci/setup-bus.c FAIL FAIL ./drivers/pci/setup-res.c FAIL FAIL ./drivers/pci/slot.c FAIL FAIL ./drivers/pci/vc.c FAIL FAIL ./drivers/pci/vgaarb.c FAIL 3.44 ./drivers/pci/vpd.c FAIL FAIL ./drivers/pcmcia/cardbus.c FAIL 2.94 ./drivers/pcmcia/cistpl.c FAIL FAIL ./drivers/pcmcia/cs.c FAIL FAIL ./drivers/pcmcia/ds.c FAIL FAIL ./drivers/pcmcia/pcmcia_cis.c FAIL 3.77 ./drivers/pcmcia/pcmcia_resource.c FAIL FAIL ./drivers/pcmcia/rsrc_mgr.c FAIL FAIL ./drivers/pcmcia/rsrc_nonstatic.c FAIL FAIL ./drivers/pcmcia/socket_sysfs.c FAIL 3.38 ./drivers/pcmcia/yenta_socket.c FAIL FAIL ./drivers/platform/x86/eeepc-laptop.c FAIL FAIL ./drivers/platform/x86/p2sb.c FAIL 2.99 ./drivers/platform/x86/wmi-bmof.c FAIL FAIL ./drivers/platform/x86/wmi.c FAIL FAIL ./drivers/pnp/card.c FAIL 2.82 ./drivers/pnp/core.c FAIL FAIL ./drivers/pnp/driver.c FAIL 2.62 ./drivers/pnp/interface.c FAIL 2.66 ./drivers/pnp/manager.c FAIL 2.69 ./drivers/pnp/pnpacpi/core.c FAIL 2.77 ./drivers/pnp/pnpacpi/rsparser.c FAIL 3.23 ./drivers/pnp/quirks.c FAIL 2.96 ./drivers/pnp/resource.c FAIL 3.80 ./drivers/pnp/support.c FAIL 2.53 ./drivers/pnp/system.c FAIL 2.51 ./drivers/power/supply/power_supply_core.c FAIL FAIL ./drivers/power/supply/power_supply_hwmon.c FAIL 2.70 ./drivers/power/supply/power_supply_leds.c FAIL 2.59 ./drivers/power/supply/power_supply_sysfs.c FAIL 2.41 ./drivers/pps/kapi.c FAIL FAIL ./drivers/pps/pps.c FAIL FAIL ./drivers/pps/sysfs.c FAIL 2.58 ./drivers/ptp/ptp_chardev.c FAIL FAIL ./drivers/ptp/ptp_clock.c FAIL FAIL ./drivers/ptp/ptp_kvm_common.c FAIL FAIL ./drivers/ptp/ptp_kvm_x86.c FAIL 3.14 ./drivers/ptp/ptp_sysfs.c FAIL 2.96 ./drivers/ptp/ptp_vclock.c FAIL 3.26 ./drivers/rtc/class.c FAIL FAIL ./drivers/rtc/dev.c FAIL FAIL ./drivers/rtc/interface.c FAIL 3.78 ./drivers/rtc/lib.c FAIL 2.67 ./drivers/rtc/nvmem.c FAIL 2.67 ./drivers/rtc/proc.c FAIL 2.50 ./drivers/rtc/rtc-cmos.c FAIL FAIL ./drivers/rtc/rtc-mc146818-lib.c FAIL 2.90 ./drivers/rtc/sysfs.c FAIL 2.74 ./drivers/scsi/constants.c FAIL 3.22 ./drivers/scsi/hosts.c FAIL FAIL ./drivers/scsi/scsi.c FAIL FAIL ./drivers/scsi/scsi_bsg.c FAIL 2.95 ./drivers/scsi/scsi_common.c FAIL FAIL ./drivers/scsi/scsi_debugfs.c FAIL 3.12 ./drivers/scsi/scsi_devinfo.c FAIL FAIL ./drivers/scsi/scsi_error.c FAIL 3.34 ./drivers/scsi/scsi_ioctl.c FAIL 3.48 ./drivers/scsi/scsi_lib.c FAIL 3.86 ./drivers/scsi/scsi_lib_dma.c FAIL 3.41 ./drivers/scsi/scsi_logging.c FAIL 3.26 ./drivers/scsi/scsi_pm.c FAIL 3.22 ./drivers/scsi/scsi_proc.c FAIL 3.37 ./drivers/scsi/scsi_scan.c FAIL FAIL ./drivers/scsi/scsi_sysctl.c FAIL 3.37 ./drivers/scsi/scsi_sysfs.c FAIL 3.57 ./drivers/scsi/scsi_trace.c FAIL 3.27 ./drivers/scsi/scsi_transport_spi.c FAIL FAIL ./drivers/scsi/scsicam.c FAIL 2.96 ./drivers/scsi/sd.c FAIL FAIL ./drivers/scsi/sg.c FAIL FAIL ./drivers/scsi/sr.c FAIL FAIL ./drivers/scsi/sr_ioctl.c FAIL FAIL ./drivers/scsi/sr_vendor.c FAIL 3.39 ./drivers/scsi/virtio_scsi.c FAIL FAIL ./drivers/thermal/gov_step_wise.c FAIL 2.65 ./drivers/thermal/gov_user_space.c FAIL 2.59 ./drivers/thermal/intel/intel_tcc.c FAIL 0.79 ./drivers/thermal/intel/therm_throt.c FAIL 3.91 ./drivers/thermal/intel/x86_pkg_temp_thermal.c FAIL FAIL ./drivers/thermal/intel/x86_pkg_temp_thermal.mod.c FAIL FAIL ./drivers/thermal/thermal_core.c FAIL FAIL ./drivers/thermal/thermal_helpers.c FAIL FAIL ./drivers/thermal/thermal_hwmon.c FAIL FAIL ./drivers/thermal/thermal_sysfs.c FAIL FAIL ./drivers/thermal/thermal_trip.c FAIL 2.62 ./drivers/tty/hvc/hvc_console.c FAIL 3.19 ./drivers/tty/n_null.c FAIL FAIL ./drivers/tty/n_tty.c FAIL 3.60 ./drivers/tty/pty.c FAIL 2.81 ./drivers/tty/serial/8250/8250_core.c FAIL FAIL ./drivers/tty/serial/8250/8250_dma.c FAIL 2.92 ./drivers/tty/serial/8250/8250_dwlib.c FAIL 3.85 ./drivers/tty/serial/8250/8250_early.c FAIL 2.90 ./drivers/tty/serial/8250/8250_exar.c FAIL FAIL ./drivers/tty/serial/8250/8250_lpss.c FAIL FAIL ./drivers/tty/serial/8250/8250_mid.c FAIL FAIL ./drivers/tty/serial/8250/8250_pci.c FAIL FAIL ./drivers/tty/serial/8250/8250_pcilib.c FAIL FAIL ./drivers/tty/serial/8250/8250_pericom.c FAIL FAIL ./drivers/tty/serial/8250/8250_platform.c FAIL FAIL ./drivers/tty/serial/8250/8250_pnp.c FAIL 3.16 ./drivers/tty/serial/8250/8250_port.c FAIL FAIL ./drivers/tty/serial/8250/8250_rsa.c FAIL FAIL ./drivers/tty/serial/earlycon.c FAIL FAIL ./drivers/tty/serial/serial_base_bus.c FAIL FAIL ./drivers/tty/serial/serial_core.c FAIL FAIL ./drivers/tty/serial/serial_ctrl.c FAIL FAIL ./drivers/tty/serial/serial_port.c FAIL FAIL ./drivers/tty/sysrq.c FAIL FAIL ./drivers/tty/tty_audit.c FAIL 2.97 ./drivers/tty/tty_baudrate.c FAIL 2.90 ./drivers/tty/tty_buffer.c FAIL 2.94 ./drivers/tty/tty_io.c FAIL 3.18 ./drivers/tty/tty_ioctl.c FAIL FAIL ./drivers/tty/tty_jobctrl.c FAIL 3.70 ./drivers/tty/tty_ldisc.c FAIL 2.88 ./drivers/tty/tty_ldsem.c FAIL FAIL ./drivers/tty/tty_mutex.c FAIL 2.78 ./drivers/tty/tty_port.c FAIL 3.18 ./drivers/tty/vt/conmakehash.c FAIL 0.11 ./drivers/tty/vt/conmakehash.c FAIL FAIL ./drivers/tty/vt/consolemap.c FAIL 2.88 ./drivers/tty/vt/consolemap_deftbl.c 0.69 0.62 ./drivers/tty/vt/defkeymap.c FAIL 0.56 ./drivers/tty/vt/keyboard.c FAIL FAIL ./drivers/tty/vt/selection.c FAIL 2.98 ./drivers/tty/vt/vc_screen.c FAIL 2.98 ./drivers/tty/vt/vt.c FAIL FAIL ./drivers/tty/vt/vt_ioctl.c FAIL FAIL ./drivers/usb/class/usblp.c FAIL FAIL ./drivers/usb/common/common.c FAIL FAIL ./drivers/usb/common/debug.c FAIL 0.13 ./drivers/usb/core/buffer.c FAIL 2.95 ./drivers/usb/core/config.c FAIL 2.96 ./drivers/usb/core/devices.c FAIL 3.27 ./drivers/usb/core/devio.c FAIL FAIL ./drivers/usb/core/driver.c FAIL 2.94 ./drivers/usb/core/endpoint.c FAIL 3.11 ./drivers/usb/core/file.c FAIL 2.89 ./drivers/usb/core/generic.c FAIL 2.80 ./drivers/usb/core/hcd-pci.c FAIL 3.31 ./drivers/usb/core/hcd.c FAIL FAIL ./drivers/usb/core/hub.c FAIL FAIL ./drivers/usb/core/message.c FAIL 3.75 ./drivers/usb/core/notify.c FAIL 2.98 ./drivers/usb/core/phy.c FAIL 3.10 ./drivers/usb/core/port.c FAIL 3.47 ./drivers/usb/core/quirks.c FAIL FAIL ./drivers/usb/core/sysfs.c FAIL 2.72 ./drivers/usb/core/urb.c FAIL FAIL ./drivers/usb/core/usb-acpi.c FAIL 3.21 ./drivers/usb/core/usb.c FAIL FAIL ./drivers/usb/early/ehci-dbgp.c FAIL 3.20 ./drivers/usb/host/ehci-hcd.c FAIL FAIL ./drivers/usb/host/ehci-pci.c FAIL FAIL ./drivers/usb/host/ohci-hcd.c FAIL FAIL ./drivers/usb/host/ohci-pci.c FAIL FAIL ./drivers/usb/host/pci-quirks.c FAIL 3.23 ./drivers/usb/host/uhci-hcd.c FAIL FAIL ./drivers/usb/host/xhci-dbg.c FAIL 2.67 ./drivers/usb/host/xhci-debugfs.c FAIL 2.80 ./drivers/usb/host/xhci-ext-caps.c FAIL 3.40 ./drivers/usb/host/xhci-hub.c FAIL 4.22 ./drivers/usb/host/xhci-mem.c FAIL 4.20 ./drivers/usb/host/xhci-pci.c FAIL FAIL ./drivers/usb/host/xhci-ring.c FAIL 4.37 ./drivers/usb/host/xhci-trace.c FAIL 4.97 ./drivers/usb/host/xhci.c FAIL FAIL ./drivers/usb/mon/mon_bin.c FAIL FAIL ./drivers/usb/mon/mon_main.c FAIL FAIL ./drivers/usb/mon/mon_stat.c FAIL 2.56 ./drivers/usb/mon/mon_text.c FAIL FAIL ./drivers/usb/storage/initializers.c FAIL 3.41 ./drivers/usb/storage/option_ms.c FAIL FAIL ./drivers/usb/storage/protocol.c FAIL 3.14 ./drivers/usb/storage/scsiglue.c FAIL 3.41 ./drivers/usb/storage/sierra_ms.c FAIL FAIL ./drivers/usb/storage/transport.c FAIL FAIL ./drivers/usb/storage/usb.c FAIL FAIL ./drivers/usb/storage/usual-tables.c FAIL 2.85 ./drivers/video/aperture.c FAIL 3.70 ./drivers/video/backlight/backlight.c FAIL FAIL ./drivers/video/cmdline.c FAIL 3.51 ./drivers/video/console/dummycon.c FAIL 2.84 ./drivers/video/console/vgacon.c FAIL FAIL ./drivers/video/hdmi.c FAIL 2.66 ./drivers/video/nomodeset.c FAIL 2.65 ./drivers/virtio/virtio.c FAIL FAIL ./drivers/virtio/virtio_anchor.c FAIL 3.35 ./drivers/virtio/virtio_dma_buf.c FAIL FAIL ./drivers/virtio/virtio_input.c FAIL FAIL ./drivers/virtio/virtio_pci_admin_legacy_io.c FAIL 3.26 ./drivers/virtio/virtio_pci_common.c FAIL FAIL ./drivers/virtio/virtio_pci_legacy.c FAIL 3.10 ./drivers/virtio/virtio_pci_legacy_dev.c FAIL FAIL ./drivers/virtio/virtio_pci_modern.c FAIL 3.41 ./drivers/virtio/virtio_pci_modern_dev.c FAIL FAIL ./drivers/virtio/virtio_ring.c FAIL FAIL ./fs/9p/fid.c FAIL 3.14 ./fs/9p/v9fs.c FAIL FAIL ./fs/9p/vfs_addr.c FAIL 3.60 ./fs/9p/vfs_dentry.c FAIL 3.11 ./fs/9p/vfs_dir.c FAIL 2.94 ./fs/9p/vfs_file.c FAIL 3.51 ./fs/9p/vfs_inode.c FAIL FAIL ./fs/9p/vfs_inode_dotl.c FAIL 3.14 ./fs/9p/vfs_super.c FAIL FAIL ./fs/9p/xattr.c FAIL 3.92 ./fs/aio.c FAIL 4.23 ./fs/anon_inodes.c FAIL 3.35 ./fs/attr.c FAIL 3.25 ./fs/autofs/dev-ioctl.c FAIL FAIL ./fs/autofs/expire.c FAIL FAIL ./fs/autofs/init.c FAIL FAIL ./fs/autofs/inode.c FAIL FAIL ./fs/autofs/root.c FAIL FAIL ./fs/autofs/symlink.c FAIL 3.27 ./fs/autofs/waitq.c FAIL FAIL ./fs/bad_inode.c FAIL 2.41 ./fs/binfmt_elf.c FAIL 3.80 ./fs/binfmt_misc.c FAIL FAIL ./fs/binfmt_script.c FAIL FAIL ./fs/buffer.c FAIL 4.95 ./fs/char_dev.c FAIL 3.24 ./fs/compat_binfmt_elf.c FAIL 3.73 ./fs/coredump.c FAIL FAIL ./fs/d_path.c FAIL 3.41 ./fs/dcache.c FAIL 3.81 ./fs/debugfs/file.c FAIL 3.40 ./fs/debugfs/inode.c FAIL FAIL ./fs/devpts/inode.c FAIL FAIL ./fs/direct-io.c FAIL 3.45 ./fs/drop_caches.c FAIL 3.24 ./fs/efivarfs/efivarfs.mod.c FAIL FAIL ./fs/efivarfs/file.c FAIL 2.85 ./fs/efivarfs/inode.c FAIL 2.73 ./fs/efivarfs/super.c FAIL 3.64 ./fs/efivarfs/vars.c FAIL 3.20 ./fs/eventfd.c FAIL 3.42 ./fs/eventpoll.c FAIL FAIL ./fs/exec.c FAIL 5.94 ./fs/exportfs/expfs.c FAIL FAIL ./fs/ext4/acl.c FAIL 3.41 ./fs/ext4/balloc.c FAIL 6.19 ./fs/ext4/bitmap.c FAIL 3.43 ./fs/ext4/block_validity.c FAIL 3.71 ./fs/ext4/dir.c FAIL 3.31 ./fs/ext4/ext4_jbd2.c FAIL 5.59 ./fs/ext4/extents.c FAIL 6.13 ./fs/ext4/extents_status.c FAIL 5.84 ./fs/ext4/fast_commit.c FAIL 5.85 ./fs/ext4/file.c FAIL 3.53 ./fs/ext4/fsmap.c FAIL 5.98 ./fs/ext4/fsync.c FAIL 5.62 ./fs/ext4/hash.c FAIL 3.46 ./fs/ext4/ialloc.c FAIL 5.93 ./fs/ext4/indirect.c FAIL 5.58 ./fs/ext4/inline.c FAIL 3.71 ./fs/ext4/inode.c FAIL 5.96 ./fs/ext4/ioctl.c FAIL 6.39 ./fs/ext4/mballoc.c FAIL FAIL ./fs/ext4/migrate.c FAIL 3.42 ./fs/ext4/mmp.c FAIL FAIL ./fs/ext4/move_extent.c FAIL 3.45 ./fs/ext4/namei.c FAIL 6.21 ./fs/ext4/orphan.c FAIL 3.54 ./fs/ext4/page-io.c FAIL 3.48 ./fs/ext4/readpage.c FAIL 3.62 ./fs/ext4/resize.c FAIL 3.33 ./fs/ext4/super.c FAIL FAIL ./fs/ext4/symlink.c FAIL 3.51 ./fs/ext4/sysfs.c FAIL 3.47 ./fs/ext4/xattr.c FAIL FAIL ./fs/ext4/xattr_hurd.c FAIL 3.62 ./fs/ext4/xattr_security.c FAIL 3.84 ./fs/ext4/xattr_trusted.c FAIL 3.57 ./fs/ext4/xattr_user.c FAIL 3.37 ./fs/fat/cache.c FAIL 3.53 ./fs/fat/dir.c FAIL 3.47 ./fs/fat/fatent.c FAIL 3.54 ./fs/fat/file.c FAIL 3.93 ./fs/fat/inode.c FAIL FAIL ./fs/fat/misc.c FAIL 3.25 ./fs/fat/namei_msdos.c FAIL FAIL ./fs/fat/namei_vfat.c FAIL FAIL ./fs/fat/nfs.c FAIL 3.31 ./fs/fcntl.c FAIL 3.79 ./fs/fhandle.c FAIL 3.48 ./fs/file.c FAIL FAIL ./fs/file_table.c FAIL 3.61 ./fs/filesystems.c FAIL 3.35 ./fs/fs-writeback.c FAIL FAIL ./fs/fs_context.c FAIL FAIL ./fs/fs_parser.c FAIL 3.32 ./fs/fs_pin.c FAIL 2.54 ./fs/fs_struct.c FAIL 2.71 ./fs/fs_types.c FAIL 2.38 ./fs/fsopen.c FAIL 3.61 ./fs/hugetlbfs/inode.c FAIL FAIL ./fs/init.c FAIL 3.63 ./fs/inode.c FAIL 4.36 ./fs/ioctl.c FAIL 3.46 ./fs/iomap/buffered-io.c FAIL 3.79 ./fs/iomap/direct-io.c FAIL 3.39 ./fs/iomap/fiemap.c FAIL 3.70 ./fs/iomap/iter.c FAIL 3.43 ./fs/iomap/seek.c FAIL 3.11 ./fs/iomap/swapfile.c FAIL 3.46 ./fs/iomap/trace.c FAIL 4.17 ./fs/isofs/compress.c FAIL 3.22 ./fs/isofs/dir.c FAIL 3.73 ./fs/isofs/export.c FAIL 3.19 ./fs/isofs/inode.c FAIL FAIL ./fs/isofs/joliet.c FAIL 3.28 ./fs/isofs/namei.c FAIL 3.79 ./fs/isofs/rock.c FAIL 3.95 ./fs/isofs/util.c FAIL 3.90 ./fs/jbd2/checkpoint.c FAIL 3.72 ./fs/jbd2/commit.c FAIL 3.69 ./fs/jbd2/journal.c FAIL FAIL ./fs/jbd2/recovery.c FAIL 3.29 ./fs/jbd2/revoke.c FAIL 3.35 ./fs/jbd2/transaction.c FAIL 3.73 ./fs/kernel_read_file.c FAIL 3.12 ./fs/kernfs/dir.c FAIL 3.18 ./fs/kernfs/file.c FAIL 3.54 ./fs/kernfs/inode.c FAIL 3.25 ./fs/kernfs/mount.c FAIL 3.45 ./fs/kernfs/symlink.c FAIL 3.35 ./fs/libfs.c FAIL 3.92 ./fs/lockd/clnt4xdr.c FAIL FAIL ./fs/lockd/clntlock.c FAIL FAIL ./fs/lockd/clntproc.c FAIL FAIL ./fs/lockd/clntxdr.c FAIL FAIL ./fs/lockd/host.c FAIL FAIL ./fs/lockd/mon.c FAIL FAIL ./fs/lockd/procfs.c FAIL 3.39 ./fs/lockd/svc.c FAIL FAIL ./fs/lockd/svc4proc.c FAIL FAIL ./fs/lockd/svclock.c FAIL FAIL ./fs/lockd/svcproc.c FAIL FAIL ./fs/lockd/svcshare.c FAIL FAIL ./fs/lockd/svcsubs.c FAIL FAIL ./fs/lockd/trace.c FAIL FAIL ./fs/lockd/xdr.c FAIL FAIL ./fs/lockd/xdr4.c FAIL FAIL ./fs/locks.c FAIL FAIL ./fs/mbcache.c FAIL FAIL ./fs/mnt_idmapping.c FAIL 2.66 ./fs/mpage.c FAIL 3.52 ./fs/namei.c FAIL 4.25 ./fs/namespace.c FAIL 4.83 ./fs/netfs/buffered_read.c FAIL 3.66 ./fs/netfs/buffered_write.c FAIL 3.58 ./fs/netfs/direct_read.c FAIL 3.73 ./fs/netfs/direct_write.c FAIL 3.64 ./fs/netfs/io.c FAIL 3.59 ./fs/netfs/iterator.c FAIL 3.74 ./fs/netfs/locking.c FAIL 3.61 ./fs/netfs/main.c FAIL FAIL ./fs/netfs/misc.c FAIL 3.84 ./fs/netfs/objects.c FAIL 3.49 ./fs/netfs/write_collect.c FAIL 3.80 ./fs/netfs/write_issue.c FAIL 3.60 ./fs/nfs/callback.c FAIL FAIL ./fs/nfs/callback_proc.c FAIL FAIL ./fs/nfs/callback_xdr.c FAIL FAIL ./fs/nfs/client.c FAIL FAIL ./fs/nfs/delegation.c FAIL FAIL ./fs/nfs/dir.c FAIL FAIL ./fs/nfs/direct.c FAIL FAIL ./fs/nfs/dns_resolve.c FAIL FAIL ./fs/nfs/export.c FAIL FAIL ./fs/nfs/file.c FAIL FAIL ./fs/nfs/fs_context.c FAIL FAIL ./fs/nfs/getroot.c FAIL FAIL ./fs/nfs/inode.c FAIL FAIL ./fs/nfs/io.c FAIL FAIL ./fs/nfs/mount_clnt.c FAIL FAIL ./fs/nfs/namespace.c FAIL FAIL ./fs/nfs/nfs3acl.c FAIL FAIL ./fs/nfs/nfs3client.c FAIL FAIL ./fs/nfs/nfs3proc.c FAIL FAIL ./fs/nfs/nfs3super.c FAIL FAIL ./fs/nfs/nfs3xdr.c FAIL FAIL ./fs/nfs/nfs4client.c FAIL FAIL ./fs/nfs/nfs4file.c FAIL FAIL ./fs/nfs/nfs4getroot.c FAIL FAIL ./fs/nfs/nfs4idmap.c FAIL FAIL ./fs/nfs/nfs4namespace.c FAIL FAIL ./fs/nfs/nfs4proc.c FAIL FAIL ./fs/nfs/nfs4renewd.c FAIL FAIL ./fs/nfs/nfs4session.c FAIL FAIL ./fs/nfs/nfs4state.c FAIL FAIL ./fs/nfs/nfs4super.c FAIL FAIL ./fs/nfs/nfs4sysctl.c FAIL FAIL ./fs/nfs/nfs4trace.c FAIL FAIL ./fs/nfs/nfs4xdr.c FAIL FAIL ./fs/nfs/nfsroot.c FAIL FAIL ./fs/nfs/nfstrace.c FAIL FAIL ./fs/nfs/pagelist.c FAIL FAIL ./fs/nfs/read.c FAIL FAIL ./fs/nfs/super.c FAIL FAIL ./fs/nfs/symlink.c FAIL FAIL ./fs/nfs/sysctl.c FAIL FAIL ./fs/nfs/sysfs.c FAIL FAIL ./fs/nfs/unlink.c FAIL FAIL ./fs/nfs/write.c FAIL FAIL ./fs/nfs_common/grace.c FAIL FAIL ./fs/nfs_common/nfsacl.c FAIL FAIL ./fs/nls/nls_ascii.c FAIL FAIL ./fs/nls/nls_base.c FAIL FAIL ./fs/nls/nls_cp437.c FAIL FAIL ./fs/nls/nls_iso8859-1.c FAIL FAIL ./fs/nls/nls_utf8.c FAIL FAIL ./fs/notify/dnotify/dnotify.c FAIL 3.33 ./fs/notify/fdinfo.c FAIL 2.88 ./fs/notify/fsnotify.c FAIL 3.11 ./fs/notify/group.c FAIL 2.99 ./fs/notify/inotify/inotify_fsnotify.c FAIL 2.42 ./fs/notify/inotify/inotify_user.c FAIL 3.68 ./fs/notify/mark.c FAIL 2.96 ./fs/notify/notification.c FAIL 3.73 ./fs/nsfs.c FAIL 3.44 ./fs/open.c FAIL 3.83 ./fs/pidfs.c FAIL 3.70 ./fs/pipe.c FAIL FAIL ./fs/pnode.c FAIL 2.54 ./fs/posix_acl.c FAIL FAIL ./fs/proc/array.c FAIL 3.70 ./fs/proc/base.c FAIL 3.99 ./fs/proc/cmdline.c FAIL 2.57 ./fs/proc/consoles.c FAIL 2.77 ./fs/proc/cpuinfo.c FAIL 2.67 ./fs/proc/devices.c FAIL 3.12 ./fs/proc/fd.c FAIL 3.45 ./fs/proc/generic.c FAIL 2.79 ./fs/proc/inode.c FAIL 2.89 ./fs/proc/interrupts.c FAIL 2.43 ./fs/proc/kcore.c FAIL FAIL ./fs/proc/kmsg.c FAIL 2.46 ./fs/proc/loadavg.c FAIL 2.71 ./fs/proc/meminfo.c FAIL 3.39 ./fs/proc/namespaces.c FAIL 3.20 ./fs/proc/page.c FAIL 3.19 ./fs/proc/proc_net.c FAIL 3.17 ./fs/proc/proc_sysctl.c FAIL FAIL ./fs/proc/proc_tty.c FAIL 2.93 ./fs/proc/root.c FAIL 3.36 ./fs/proc/self.c FAIL 2.82 ./fs/proc/softirqs.c FAIL 3.43 ./fs/proc/stat.c FAIL 2.49 ./fs/proc/task_mmu.c FAIL 3.85 ./fs/proc/thread_self.c FAIL 2.70 ./fs/proc/uptime.c FAIL 2.80 ./fs/proc/util.c FAIL 2.83 ./fs/proc/version.c FAIL 2.54 ./fs/proc/vmcore.c FAIL 3.15 ./fs/proc_namespace.c FAIL 3.41 ./fs/quota/dquot.c FAIL 3.98 ./fs/quota/kqid.c FAIL 2.40 ./fs/quota/netlink.c FAIL 3.76 ./fs/quota/quota.c FAIL 3.79 ./fs/quota/quota_tree.c FAIL FAIL ./fs/quota/quota_v2.c FAIL FAIL ./fs/ramfs/file-mmu.c FAIL 3.34 ./fs/ramfs/inode.c FAIL 3.46 ./fs/read_write.c FAIL 3.66 ./fs/readdir.c FAIL 3.66 ./fs/remap_range.c FAIL 3.80 ./fs/select.c FAIL FAIL ./fs/seq_file.c FAIL FAIL ./fs/signalfd.c FAIL 3.53 ./fs/splice.c FAIL 4.15 ./fs/stack.c FAIL 2.46 ./fs/stat.c FAIL 3.87 ./fs/statfs.c FAIL 3.48 ./fs/super.c FAIL FAIL ./fs/sync.c FAIL 3.69 ./fs/sysctls.c FAIL 0.70 ./fs/sysfs/dir.c FAIL 2.38 ./fs/sysfs/file.c FAIL 2.75 ./fs/sysfs/group.c FAIL 2.55 ./fs/sysfs/mount.c FAIL 3.61 ./fs/sysfs/symlink.c FAIL 3.26 ./fs/timerfd.c FAIL 3.58 ./fs/tracefs/event_inode.c FAIL 3.33 ./fs/tracefs/inode.c FAIL FAIL ./fs/utimes.c FAIL 3.51 ./fs/xattr.c FAIL 3.74 ./init/calibrate.c FAIL 0.79 ./init/do_mounts.c FAIL FAIL ./init/do_mounts_initrd.c FAIL 3.89 ./init/init_task.c FAIL 3.19 ./init/initramfs.c FAIL 3.84 ./init/main.c FAIL 5.15 ./init/version-timestamp.c FAIL 0.65 ./init/version.c FAIL 0.68 ./io_uring/advise.c FAIL 3.60 ./io_uring/cancel.c FAIL 3.73 ./io_uring/epoll.c FAIL 3.71 ./io_uring/eventfd.c FAIL 2.99 ./io_uring/fdinfo.c FAIL 3.57 ./io_uring/filetable.c FAIL 3.82 ./io_uring/fs.c FAIL 3.98 ./io_uring/futex.c FAIL 3.68 ./io_uring/io-wq.c FAIL FAIL ./io_uring/io_uring.c FAIL FAIL ./io_uring/kbuf.c FAIL 3.74 ./io_uring/memmap.c FAIL 3.28 ./io_uring/msg_ring.c FAIL 3.65 ./io_uring/napi.c FAIL FAIL ./io_uring/net.c FAIL FAIL ./io_uring/nop.c FAIL 3.70 ./io_uring/notif.c FAIL FAIL ./io_uring/opdef.c FAIL 4.45 ./io_uring/openclose.c FAIL 4.30 ./io_uring/poll.c FAIL FAIL ./io_uring/register.c FAIL FAIL ./io_uring/rsrc.c FAIL 4.13 ./io_uring/rw.c FAIL 3.82 ./io_uring/splice.c FAIL 3.64 ./io_uring/sqpoll.c FAIL FAIL ./io_uring/statx.c FAIL 3.80 ./io_uring/sync.c FAIL 3.93 ./io_uring/tctx.c FAIL 3.74 ./io_uring/timeout.c FAIL 3.80 ./io_uring/truncate.c FAIL 4.63 ./io_uring/uring_cmd.c FAIL FAIL ./io_uring/waitid.c FAIL 3.72 ./io_uring/xattr.c FAIL 3.82 ./ipc/compat.c FAIL 3.35 ./ipc/ipc_sysctl.c FAIL 2.44 ./ipc/mq_sysctl.c FAIL 1.50 ./ipc/mqueue.c FAIL FAIL ./ipc/msg.c FAIL 3.70 ./ipc/msgutil.c FAIL 3.24 ./ipc/namespace.c FAIL 2.40 ./ipc/sem.c FAIL 3.82 ./ipc/shm.c FAIL 4.10 ./ipc/syscall.c FAIL 3.40 ./ipc/util.c FAIL 3.81 ./kernel/acct.c FAIL 3.47 ./kernel/async.c FAIL 2.74 ./kernel/audit.c FAIL FAIL ./kernel/audit_fsnotify.c FAIL 3.70 ./kernel/audit_tree.c FAIL 3.25 ./kernel/audit_watch.c FAIL 3.82 ./kernel/auditfilter.c FAIL FAIL ./kernel/auditsc.c FAIL FAIL ./kernel/bounds.c FAIL 0.13 ./kernel/bpf/core.c FAIL FAIL ./kernel/capability.c FAIL FAIL ./kernel/cgroup/cgroup-v1.c FAIL 3.65 ./kernel/cgroup/cgroup.c FAIL FAIL ./kernel/cgroup/cpuset.c FAIL 3.88 ./kernel/cgroup/debug.c FAIL 3.71 ./kernel/cgroup/freezer.c FAIL 3.84 ./kernel/cgroup/legacy_freezer.c FAIL 2.77 ./kernel/cgroup/misc.c FAIL 2.57 ./kernel/cgroup/namespace.c FAIL 3.24 ./kernel/cgroup/pids.c FAIL 2.54 ./kernel/cgroup/rdma.c FAIL 2.54 ./kernel/cgroup/rstat.c FAIL 3.85 ./kernel/compat.c FAIL 3.62 ./kernel/context_tracking.c FAIL 3.40 ./kernel/cpu.c FAIL 5.78 ./kernel/crash_core.c FAIL FAIL ./kernel/crash_reserve.c FAIL 3.68 ./kernel/cred.c FAIL 3.65 ./kernel/delayacct.c FAIL 2.40 ./kernel/dma.c FAIL 2.40 ./kernel/dma/direct.c FAIL 2.99 ./kernel/dma/dummy.c FAIL 2.93 ./kernel/dma/mapping.c FAIL 3.33 ./kernel/dma/ops_helpers.c FAIL 2.90 ./kernel/dma/remap.c FAIL 3.48 ./kernel/dma/swiotlb.c FAIL 3.91 ./kernel/elfcorehdr.c FAIL 2.71 ./kernel/entry/common.c FAIL 3.96 ./kernel/entry/syscall_user_dispatch.c FAIL 2.91 ./kernel/events/callchain.c FAIL 3.46 ./kernel/events/core.c FAIL FAIL ./kernel/events/hw_breakpoint.c FAIL 3.57 ./kernel/events/ring_buffer.c FAIL 3.47 ./kernel/events/uprobes.c FAIL 3.49 ./kernel/exec_domain.c FAIL 3.41 ./kernel/exit.c FAIL FAIL ./kernel/extable.c FAIL FAIL ./kernel/fork.c FAIL FAIL ./kernel/freezer.c FAIL 3.69 ./kernel/futex/core.c FAIL 3.21 ./kernel/futex/pi.c FAIL 2.56 ./kernel/futex/requeue.c FAIL 2.64 ./kernel/futex/syscalls.c FAIL 3.51 ./kernel/futex/waitwake.c FAIL 2.56 ./kernel/groups.c FAIL 3.72 ./kernel/iomem.c FAIL 2.89 ./kernel/irq/affinity.c FAIL 2.79 ./kernel/irq/autoprobe.c FAIL 2.88 ./kernel/irq/chip.c FAIL 3.75 ./kernel/irq/cpuhotplug.c FAIL 3.32 ./kernel/irq/devres.c FAIL 2.68 ./kernel/irq/dummychip.c FAIL 2.86 ./kernel/irq/handle.c FAIL 2.95 ./kernel/irq/irqdesc.c FAIL 2.71 ./kernel/irq/irqdomain.c FAIL 2.98 ./kernel/irq/manage.c FAIL 3.49 ./kernel/irq/matrix.c FAIL 3.70 ./kernel/irq/migration.c FAIL 2.74 ./kernel/irq/msi.c FAIL FAIL ./kernel/irq/pm.c FAIL 3.46 ./kernel/irq/proc.c FAIL 2.92 ./kernel/irq/resend.c FAIL 2.77 ./kernel/irq/spurious.c FAIL FAIL ./kernel/irq_work.c FAIL FAIL ./kernel/jump_label.c FAIL 2.66 ./kernel/kallsyms.c FAIL FAIL ./kernel/kcmp.c FAIL 3.51 ./kernel/kexec.c FAIL FAIL ./kernel/kexec_core.c FAIL FAIL ./kernel/kprobes.c FAIL 3.77 ./kernel/ksyms_common.c FAIL 3.30 ./kernel/ksysfs.c FAIL 2.89 ./kernel/kthread.c FAIL 4.26 ./kernel/locking/mutex.c FAIL FAIL ./kernel/locking/osq_lock.c FAIL 0.73 ./kernel/locking/percpu-rwsem.c FAIL FAIL ./kernel/locking/qrwlock.c FAIL 2.60 ./kernel/locking/qspinlock.c FAIL 2.75 ./kernel/locking/rtmutex_api.c FAIL 2.68 ./kernel/locking/rwsem.c FAIL FAIL ./kernel/locking/semaphore.c FAIL 3.52 ./kernel/locking/spinlock.c FAIL 0.92 ./kernel/module/kallsyms.c FAIL 2.93 ./kernel/module/kmod.c FAIL 3.55 ./kernel/module/main.c FAIL FAIL ./kernel/module/procfs.c FAIL FAIL ./kernel/module/strict_rwx.c FAIL 2.75 ./kernel/module/sysfs.c FAIL 2.83 ./kernel/module/tree_lookup.c FAIL FAIL ./kernel/notifier.c FAIL 3.83 ./kernel/nsproxy.c FAIL 3.96 ./kernel/numa.c FAIL 0.88 ./kernel/padata.c FAIL 2.80 ./kernel/panic.c FAIL 3.30 ./kernel/params.c FAIL 3.38 ./kernel/pid.c FAIL FAIL ./kernel/pid_namespace.c FAIL 3.48 ./kernel/power/console.c FAIL 3.12 ./kernel/power/hibernate.c FAIL FAIL ./kernel/power/main.c FAIL 3.88 ./kernel/power/poweroff.c FAIL 0.82 ./kernel/power/process.c FAIL 4.74 ./kernel/power/qos.c FAIL 4.13 ./kernel/power/snapshot.c FAIL 3.97 ./kernel/power/suspend.c FAIL FAIL ./kernel/power/swap.c FAIL 3.71 ./kernel/power/user.c FAIL 3.31 ./kernel/printk/nbcon.c FAIL 1.54 ./kernel/printk/printk.c FAIL FAIL ./kernel/printk/printk_ringbuffer.c FAIL 0.90 ./kernel/printk/printk_safe.c FAIL 2.99 ./kernel/printk/sysctl.c FAIL 0.85 ./kernel/profile.c FAIL 3.12 ./kernel/ptrace.c FAIL 3.82 ./kernel/range.c FAIL 0.12 ./kernel/rcu/rcu_segcblist.c FAIL 2.70 ./kernel/rcu/srcutree.c FAIL FAIL ./kernel/rcu/sync.c FAIL 0.71 ./kernel/rcu/tree.c FAIL FAIL ./kernel/rcu/update.c FAIL FAIL ./kernel/reboot.c FAIL 3.79 ./kernel/regset.c FAIL 1.92 ./kernel/relay.c FAIL 2.82 ./kernel/resource.c FAIL FAIL ./kernel/rseq.c FAIL 3.41 ./kernel/sched/build_policy.c FAIL FAIL ./kernel/sched/build_utility.c FAIL FAIL ./kernel/sched/core.c FAIL FAIL ./kernel/sched/fair.c FAIL 6.87 ./kernel/seccomp.c FAIL FAIL ./kernel/signal.c FAIL 4.19 ./kernel/smp.c FAIL FAIL ./kernel/smpboot.c FAIL 2.63 ./kernel/softirq.c FAIL FAIL ./kernel/stacktrace.c FAIL 2.56 ./kernel/static_call.c FAIL 2.61 ./kernel/static_call_inline.c FAIL 2.69 ./kernel/stop_machine.c FAIL 2.94 ./kernel/sys.c FAIL 4.11 ./kernel/sys_ni.c FAIL 0.17 ./kernel/sysctl.c FAIL FAIL ./kernel/task_work.c FAIL 3.61 ./kernel/taskstats.c FAIL 3.85 ./kernel/time/alarmtimer.c FAIL 3.65 ./kernel/time/clockevents.c FAIL 2.78 ./kernel/time/clocksource.c FAIL FAIL ./kernel/time/hrtimer.c FAIL 3.96 ./kernel/time/itimer.c FAIL 3.75 ./kernel/time/jiffies.c FAIL 2.64 ./kernel/time/namespace.c FAIL 2.78 ./kernel/time/ntp.c FAIL 3.12 ./kernel/time/posix-clock.c FAIL 3.67 ./kernel/time/posix-cpu-timers.c FAIL 3.17 ./kernel/time/posix-timers.c FAIL 3.61 ./kernel/time/tick-broadcast-hrtimer.c FAIL 2.69 ./kernel/time/tick-broadcast.c FAIL 2.92 ./kernel/time/tick-common.c FAIL 4.11 ./kernel/time/tick-oneshot.c FAIL 2.82 ./kernel/time/tick-sched.c FAIL 3.36 ./kernel/time/time.c FAIL 3.40 ./kernel/time/timeconv.c FAIL 2.33 ./kernel/time/timecounter.c FAIL 0.13 ./kernel/time/timekeeping.c FAIL 3.70 ./kernel/time/timekeeping_debug.c FAIL 3.40 ./kernel/time/timer.c FAIL 3.90 ./kernel/time/timer_list.c FAIL 2.92 ./kernel/time/timer_migration.c FAIL 4.61 ./kernel/time/vsyscall.c FAIL 1.60 ./kernel/trace/blktrace.c FAIL FAIL ./kernel/trace/error_report-traces.c FAIL 3.41 ./kernel/trace/pid_list.c FAIL 3.54 ./kernel/trace/power-traces.c FAIL 4.20 ./kernel/trace/rethook.c FAIL 2.77 ./kernel/trace/ring_buffer.c FAIL FAIL ./kernel/trace/rpm-traces.c FAIL 3.65 ./kernel/trace/trace.c FAIL FAIL ./kernel/trace/trace_clock.c FAIL 2.64 ./kernel/trace/trace_dynevent.c FAIL 3.54 ./kernel/trace/trace_eprobe.c FAIL 3.64 ./kernel/trace/trace_event_perf.c FAIL 3.69 ./kernel/trace/trace_events.c FAIL 4.69 ./kernel/trace/trace_events_filter.c FAIL 3.69 ./kernel/trace/trace_events_trigger.c FAIL 3.83 ./kernel/trace/trace_export.c FAIL 3.66 ./kernel/trace/trace_kprobe.c FAIL FAIL ./kernel/trace/trace_nop.c FAIL 3.75 ./kernel/trace/trace_output.c FAIL 4.19 ./kernel/trace/trace_printk.c FAIL 3.54 ./kernel/trace/trace_probe.c FAIL 4.18 ./kernel/trace/trace_sched_switch.c FAIL 4.45 ./kernel/trace/trace_seq.c FAIL 2.44 ./kernel/trace/trace_stat.c FAIL 3.59 ./kernel/trace/trace_uprobe.c FAIL FAIL ./kernel/tracepoint.c FAIL 2.55 ./kernel/tsacct.c FAIL 2.58 ./kernel/ucount.c FAIL 1.62 ./kernel/uid16.c FAIL 3.34 ./kernel/umh.c FAIL FAIL ./kernel/user.c FAIL 1.52 ./kernel/utsname.c FAIL 1.99 ./kernel/utsname_sysctl.c FAIL 0.85 ./kernel/vmcore_info.c FAIL 2.96 ./kernel/workqueue.c FAIL FAIL ./lib/argv_split.c FAIL 1.32 ./lib/asn1_decoder.c FAIL FAIL ./lib/assoc_array.c FAIL 1.54 ./lib/base64.c FAIL 0.16 ./lib/bcd.c FAIL 0.56 ./lib/bitmap-str.c FAIL 2.78 ./lib/bitmap.c FAIL 2.54 ./lib/bitrev.c FAIL FAIL ./lib/bsearch.c FAIL 2.98 ./lib/bucket_locks.c FAIL 2.71 ./lib/bug.c FAIL 2.94 ./lib/buildid.c FAIL 2.89 ./lib/bust_spinlocks.c FAIL 3.19 ./lib/check_signature.c FAIL 0.49 ./lib/clz_ctz.c FAIL 0.15 ./lib/clz_tab.c 0.49 0.49 ./lib/cmdline.c FAIL 0.16 ./lib/cmdline.c FAIL 0.15 ./lib/cpu_rmap.c FAIL 1.31 ./lib/cpumask.c FAIL 2.81 ./lib/crc-ccitt.c FAIL FAIL ./lib/crc16.c FAIL FAIL ./lib/crc32.c FAIL FAIL ./lib/crypto/aes.c FAIL FAIL ./lib/crypto/arc4.c FAIL FAIL ./lib/crypto/blake2s-generic.c FAIL 0.27 ./lib/crypto/blake2s.c FAIL FAIL ./lib/crypto/chacha.c FAIL 0.18 ./lib/crypto/gf128mul.c FAIL FAIL ./lib/crypto/memneq.c FAIL 2.62 ./lib/crypto/mpi/ec.c FAIL 2.70 ./lib/crypto/mpi/generic_mpih-add1.c FAIL 2.74 ./lib/crypto/mpi/generic_mpih-lshift.c FAIL 2.76 ./lib/crypto/mpi/generic_mpih-mul1.c FAIL 2.73 ./lib/crypto/mpi/generic_mpih-mul2.c FAIL 2.94 ./lib/crypto/mpi/generic_mpih-mul3.c FAIL 2.92 ./lib/crypto/mpi/generic_mpih-rshift.c FAIL 2.78 ./lib/crypto/mpi/generic_mpih-sub1.c FAIL 2.81 ./lib/crypto/mpi/mpi-add.c FAIL 3.58 ./lib/crypto/mpi/mpi-bit.c FAIL 2.72 ./lib/crypto/mpi/mpi-cmp.c FAIL 2.85 ./lib/crypto/mpi/mpi-div.c FAIL 2.82 ./lib/crypto/mpi/mpi-inv.c FAIL 2.65 ./lib/crypto/mpi/mpi-mod.c FAIL 2.71 ./lib/crypto/mpi/mpi-mul.c FAIL 2.91 ./lib/crypto/mpi/mpi-pow.c FAIL 2.65 ./lib/crypto/mpi/mpi-sub-ui.c FAIL 2.74 ./lib/crypto/mpi/mpicoder.c FAIL 2.85 ./lib/crypto/mpi/mpih-cmp.c FAIL 2.88 ./lib/crypto/mpi/mpih-div.c FAIL 2.88 ./lib/crypto/mpi/mpih-mul.c FAIL 2.76 ./lib/crypto/mpi/mpiutil.c FAIL FAIL ./lib/crypto/sha1.c FAIL FAIL ./lib/crypto/sha256.c FAIL FAIL ./lib/crypto/utils.c FAIL FAIL ./lib/ctype.c FAIL 0.73 ./lib/ctype.c FAIL 0.73 ./lib/debug_locks.c FAIL 0.72 ./lib/dec_and_lock.c FAIL 0.65 ./lib/decompress.c FAIL 0.91 ./lib/decompress_bunzip2.c FAIL 2.45 ./lib/decompress_inflate.c FAIL 2.58 ./lib/decompress_unlz4.c FAIL 2.50 ./lib/decompress_unlzma.c FAIL 2.34 ./lib/decompress_unlzo.c FAIL 2.40 ./lib/decompress_unxz.c FAIL 2.45 ./lib/decompress_unzstd.c FAIL 2.50 ./lib/devres.c FAIL 2.83 ./lib/dim/dim.c FAIL FAIL ./lib/dim/net_dim.c FAIL 3.86 ./lib/dim/rdma_dim.c FAIL 2.49 ./lib/dump_stack.c FAIL 3.74 ./lib/dynamic_queue_limits.c FAIL 4.21 ./lib/earlycpio.c FAIL 0.16 ./lib/errname.c FAIL 0.15 ./lib/errseq.c FAIL 0.34 ./lib/extable.c FAIL 2.51 ./lib/find_bit.c FAIL 0.25 ./lib/flex_proportions.c FAIL 1.30 ./lib/fonts/font_8x16.c FAIL 2.64 ./lib/fonts/fonts.c FAIL FAIL ./lib/fw_table.c FAIL 2.87 ./lib/gen_crc32table.c FAIL FAIL ./lib/gen_crc32table.c FAIL 0.96 ./lib/genalloc.c FAIL 2.70 ./lib/generic-radix-tree.c FAIL FAIL ./lib/glob.c FAIL FAIL ./lib/group_cpus.c FAIL 2.67 ./lib/hexdump.c FAIL 0.21 ./lib/idr.c FAIL 1.55 ./lib/interval_tree.c FAIL 0.54 ./lib/iomap.c FAIL 2.96 ./lib/iomap_copy.c FAIL 0.49 ./lib/iov_iter.c FAIL 3.21 ./lib/irq_regs.c FAIL 0.78 ./lib/is_single_threaded.c FAIL 1.94 ./lib/kasprintf.c FAIL 1.41 ./lib/kfifo.c FAIL 3.42 ./lib/klist.c FAIL 0.71 ./lib/kobject.c FAIL FAIL ./lib/kobject_uevent.c FAIL FAIL ./lib/kstrtox.c FAIL 1.44 ./lib/list_sort.c FAIL 0.20 ./lib/llist.c FAIL 0.28 ./lib/lockref.c FAIL 0.75 ./lib/logic_pio.c FAIL 2.81 ./lib/lwq.c FAIL 0.62 ./lib/lz4/lz4_decompress.c FAIL FAIL ./lib/lzo/lzo1x_compress.c FAIL FAIL ./lib/lzo/lzo1x_decompress_safe.c FAIL FAIL ./lib/maple_tree.c FAIL 4.20 ./lib/math/div64.c FAIL 0.12 ./lib/math/gcd.c FAIL 0.15 ./lib/math/int_log.c FAIL 0.15 ./lib/math/int_pow.c FAIL 0.55 ./lib/math/int_sqrt.c FAIL 0.12 ./lib/math/lcm.c FAIL 0.83 ./lib/math/rational.c FAIL FAIL ./lib/math/reciprocal_div.c FAIL 0.14 ./lib/memcat_p.c FAIL 1.51 ./lib/memweight.c FAIL 0.21 ./lib/net_utils.c FAIL 3.18 ./lib/nlattr.c FAIL FAIL ./lib/nmi_backtrace.c FAIL FAIL ./lib/objpool.c FAIL 1.39 ./lib/oid_registry.c FAIL FAIL ./lib/once.c FAIL 2.75 ./lib/parser.c FAIL 1.47 ./lib/percpu-refcount.c FAIL 2.64 ./lib/percpu_counter.c FAIL 2.73 ./lib/plist.c FAIL 0.13 ./lib/radix-tree.c FAIL 2.77 ./lib/random32.c FAIL 1.51 ./lib/ratelimit.c FAIL 0.77 ./lib/rbtree.c FAIL 0.68 ./lib/rcuref.c FAIL 0.66 ./lib/refcount.c FAIL 0.66 ./lib/rhashtable.c FAIL 2.94 ./lib/sbitmap.c FAIL 2.62 ./lib/scatterlist.c FAIL 3.19 ./lib/seq_buf.c FAIL 2.57 ./lib/sg_pool.c FAIL 2.78 ./lib/siphash.c FAIL 0.96 ./lib/sort.c FAIL 0.14 ./lib/stackdepot.c FAIL 2.76 ./lib/string.c FAIL 0.21 ./lib/string_helpers.c FAIL 2.88 ./lib/strncpy_from_user.c FAIL 2.56 ./lib/strnlen_user.c FAIL 2.67 ./lib/syscall.c FAIL 2.68 ./lib/timerqueue.c FAIL 0.58 ./lib/ucs2_string.c FAIL FAIL ./lib/usercopy.c FAIL 1.42 ./lib/uuid.c FAIL 0.20 ./lib/vsprintf.c FAIL FAIL ./lib/win_minmax.c FAIL 2.48 ./lib/xarray.c FAIL 1.58 ./lib/xxhash.c FAIL FAIL ./lib/xz/xz_dec_bcj.c FAIL 1.54 ./lib/xz/xz_dec_lzma2.c FAIL 1.48 ./lib/xz/xz_dec_stream.c FAIL 1.46 ./lib/xz/xz_dec_syms.c FAIL FAIL ./lib/zlib_deflate/deflate.c FAIL 2.61 ./lib/zlib_deflate/deflate_syms.c FAIL FAIL ./lib/zlib_deflate/deftree.c FAIL 0.24 ./lib/zlib_inflate/inffast.c FAIL 0.22 ./lib/zlib_inflate/inflate.c FAIL 0.23 ./lib/zlib_inflate/inflate_syms.c FAIL FAIL ./lib/zlib_inflate/inftrees.c FAIL 0.15 ./lib/zlib_inflate/infutil.c FAIL 1.38 ./lib/zstd/common/debug.c 0.55 0.48 ./lib/zstd/common/entropy_common.c FAIL 0.12 ./lib/zstd/common/error_private.c FAIL 0.71 ./lib/zstd/common/fse_decompress.c FAIL 0.17 ./lib/zstd/common/zstd_common.c FAIL 0.15 ./lib/zstd/decompress/huf_decompress.c FAIL 0.22 ./lib/zstd/decompress/zstd_ddict.c FAIL 0.24 ./lib/zstd/decompress/zstd_decompress.c FAIL 0.27 ./lib/zstd/decompress/zstd_decompress_block.c FAIL 0.32 ./lib/zstd/zstd_common_module.c FAIL FAIL ./lib/zstd/zstd_decompress_module.c FAIL FAIL ./mm/backing-dev.c FAIL 4.23 ./mm/compaction.c FAIL FAIL ./mm/debug.c FAIL 3.89 ./mm/dmapool.c FAIL 2.85 ./mm/early_ioremap.c FAIL 3.28 ./mm/execmem.c FAIL 2.79 ./mm/fadvise.c FAIL 3.72 ./mm/filemap.c FAIL 4.63 ./mm/folio-compat.c FAIL 3.43 ./mm/gup.c FAIL 3.95 ./mm/highmem.c FAIL 3.46 ./mm/hugetlb.c FAIL 4.17 ./mm/hugetlb_cgroup.c FAIL 3.55 ./mm/hugetlb_vmemmap.c FAIL 3.39 ./mm/init-mm.c FAIL 2.99 ./mm/interval_tree.c FAIL 3.30 ./mm/list_lru.c FAIL 3.15 ./mm/maccess.c FAIL 3.22 ./mm/madvise.c FAIL 3.94 ./mm/memblock.c FAIL 3.55 ./mm/memfd.c FAIL 3.81 ./mm/memory-tiers.c FAIL 3.28 ./mm/memory.c FAIL 4.76 ./mm/mempolicy.c FAIL FAIL ./mm/mempool.c FAIL 3.14 ./mm/migrate.c FAIL 4.50 ./mm/mincore.c FAIL 3.86 ./mm/mlock.c FAIL 4.12 ./mm/mm_init.c FAIL 3.59 ./mm/mmap.c FAIL FAIL ./mm/mmap_lock.c FAIL 3.56 ./mm/mmu_gather.c FAIL 3.34 ./mm/mmu_notifier.c FAIL 2.89 ./mm/mmzone.c FAIL 2.64 ./mm/mprotect.c FAIL 4.93 ./mm/mremap.c FAIL 3.89 ./mm/mseal.c FAIL 4.47 ./mm/msync.c FAIL 3.51 ./mm/oom_kill.c FAIL FAIL ./mm/page-writeback.c FAIL 4.78 ./mm/page_alloc.c FAIL 4.55 ./mm/page_counter.c FAIL 0.67 ./mm/page_io.c FAIL 3.68 ./mm/page_vma_mapped.c FAIL FAIL ./mm/pagewalk.c FAIL 3.34 ./mm/percpu.c FAIL FAIL ./mm/pgtable-generic.c FAIL 3.43 ./mm/process_vm_access.c FAIL 3.48 ./mm/ptdump.c FAIL 2.72 ./mm/readahead.c FAIL 4.79 ./mm/rmap.c FAIL 4.32 ./mm/secretmem.c FAIL FAIL ./mm/shmem.c FAIL 4.53 ./mm/shmem_quota.c FAIL 3.28 ./mm/show_mem.c FAIL 3.69 ./mm/shrinker.c FAIL 3.70 ./mm/slab_common.c FAIL 4.44 ./mm/slub.c FAIL FAIL ./mm/sparse-vmemmap.c FAIL 3.71 ./mm/sparse.c FAIL 3.56 ./mm/swap.c FAIL 3.87 ./mm/swap_slots.c FAIL 3.10 ./mm/swap_state.c FAIL 3.83 ./mm/swapfile.c FAIL 4.26 ./mm/truncate.c FAIL 3.50 ./mm/util.c FAIL 3.78 ./mm/vmalloc.c FAIL 4.56 ./mm/vmscan.c FAIL FAIL ./mm/vmstat.c FAIL FAIL ./mm/workingset.c FAIL 3.74 ./net/9p/client.c FAIL FAIL ./net/9p/error.c FAIL FAIL ./net/9p/mod.c FAIL FAIL ./net/9p/protocol.c FAIL 2.66 ./net/9p/trans_common.c FAIL 2.65 ./net/9p/trans_fd.c FAIL FAIL ./net/9p/trans_virtio.c FAIL FAIL ./net/compat.c FAIL FAIL ./net/core/datagram.c FAIL FAIL ./net/core/dev.c FAIL FAIL ./net/core/dev_addr_lists.c FAIL 3.82 ./net/core/dev_ioctl.c FAIL FAIL ./net/core/dst.c FAIL FAIL ./net/core/dst_cache.c FAIL FAIL ./net/core/failover.c FAIL FAIL ./net/core/fib_notifier.c FAIL 3.64 ./net/core/fib_rules.c FAIL FAIL ./net/core/filter.c FAIL FAIL ./net/core/flow_dissector.c FAIL FAIL ./net/core/flow_offload.c FAIL FAIL ./net/core/gen_estimator.c FAIL FAIL ./net/core/gen_stats.c FAIL FAIL ./net/core/gro.c FAIL FAIL ./net/core/gro_cells.c FAIL FAIL ./net/core/gso.c FAIL FAIL ./net/core/hotdata.c FAIL FAIL ./net/core/link_watch.c FAIL FAIL ./net/core/neighbour.c FAIL FAIL ./net/core/net-procfs.c FAIL FAIL ./net/core/net-sysfs.c FAIL FAIL ./net/core/net-traces.c FAIL FAIL ./net/core/net_namespace.c FAIL FAIL ./net/core/netclassid_cgroup.c FAIL FAIL ./net/core/netdev-genl-gen.c FAIL 3.67 ./net/core/netdev-genl.c FAIL FAIL ./net/core/netevent.c FAIL 3.68 ./net/core/netpoll.c FAIL FAIL ./net/core/netprio_cgroup.c FAIL FAIL ./net/core/ptp_classifier.c FAIL FAIL ./net/core/request_sock.c FAIL FAIL ./net/core/rtnetlink.c FAIL FAIL ./net/core/scm.c FAIL FAIL ./net/core/secure_seq.c FAIL FAIL ./net/core/selftests.c FAIL FAIL ./net/core/skbuff.c FAIL FAIL ./net/core/sock.c FAIL FAIL ./net/core/sock_diag.c FAIL FAIL ./net/core/sock_reuseport.c FAIL FAIL ./net/core/stream.c FAIL FAIL ./net/core/sysctl_net_core.c FAIL FAIL ./net/core/tso.c FAIL FAIL ./net/core/utils.c FAIL FAIL ./net/core/xdp.c FAIL FAIL ./net/devres.c FAIL 3.69 ./net/dns_resolver/dns_key.c FAIL FAIL ./net/dns_resolver/dns_query.c FAIL 3.10 ./net/ethernet/eth.c FAIL FAIL ./net/ethtool/bitset.c FAIL FAIL ./net/ethtool/cabletest.c FAIL FAIL ./net/ethtool/channels.c FAIL FAIL ./net/ethtool/cmis_cdb.c FAIL FAIL ./net/ethtool/cmis_fw_update.c FAIL FAIL ./net/ethtool/coalesce.c FAIL FAIL ./net/ethtool/common.c FAIL FAIL ./net/ethtool/debug.c FAIL FAIL ./net/ethtool/eee.c FAIL FAIL ./net/ethtool/eeprom.c FAIL FAIL ./net/ethtool/features.c FAIL FAIL ./net/ethtool/fec.c FAIL FAIL ./net/ethtool/ioctl.c FAIL FAIL ./net/ethtool/linkinfo.c FAIL FAIL ./net/ethtool/linkmodes.c FAIL FAIL ./net/ethtool/linkstate.c FAIL FAIL ./net/ethtool/mm.c FAIL FAIL ./net/ethtool/module.c FAIL FAIL ./net/ethtool/netlink.c FAIL FAIL ./net/ethtool/pause.c FAIL FAIL ./net/ethtool/phc_vclocks.c FAIL FAIL ./net/ethtool/plca.c FAIL FAIL ./net/ethtool/privflags.c FAIL FAIL ./net/ethtool/pse-pd.c FAIL FAIL ./net/ethtool/rings.c FAIL FAIL ./net/ethtool/rss.c FAIL FAIL ./net/ethtool/stats.c FAIL FAIL ./net/ethtool/strset.c FAIL FAIL ./net/ethtool/tsinfo.c FAIL FAIL ./net/ethtool/tunnels.c FAIL FAIL ./net/ethtool/wol.c FAIL FAIL ./net/handshake/alert.c FAIL FAIL ./net/handshake/genl.c FAIL 3.46 ./net/handshake/netlink.c FAIL FAIL ./net/handshake/request.c FAIL FAIL ./net/handshake/tlshd.c FAIL FAIL ./net/handshake/trace.c FAIL FAIL ./net/ipv4/af_inet.c FAIL FAIL ./net/ipv4/arp.c FAIL FAIL ./net/ipv4/cipso_ipv4.c FAIL FAIL ./net/ipv4/datagram.c FAIL FAIL ./net/ipv4/devinet.c FAIL FAIL ./net/ipv4/fib_frontend.c FAIL FAIL ./net/ipv4/fib_notifier.c FAIL FAIL ./net/ipv4/fib_rules.c FAIL FAIL ./net/ipv4/fib_semantics.c FAIL FAIL ./net/ipv4/fib_trie.c FAIL FAIL ./net/ipv4/gre_offload.c FAIL FAIL ./net/ipv4/icmp.c FAIL FAIL ./net/ipv4/igmp.c FAIL FAIL ./net/ipv4/inet_connection_sock.c FAIL FAIL ./net/ipv4/inet_fragment.c FAIL FAIL ./net/ipv4/inet_hashtables.c FAIL FAIL ./net/ipv4/inet_timewait_sock.c FAIL FAIL ./net/ipv4/inetpeer.c FAIL FAIL ./net/ipv4/ip_forward.c FAIL FAIL ./net/ipv4/ip_fragment.c FAIL FAIL ./net/ipv4/ip_input.c FAIL FAIL ./net/ipv4/ip_options.c FAIL FAIL ./net/ipv4/ip_output.c FAIL FAIL ./net/ipv4/ip_sockglue.c FAIL FAIL ./net/ipv4/ip_tunnel.c FAIL FAIL ./net/ipv4/ip_tunnel_core.c FAIL FAIL ./net/ipv4/ipconfig.c FAIL FAIL ./net/ipv4/ipmr.c FAIL FAIL ./net/ipv4/ipmr_base.c FAIL FAIL ./net/ipv4/metrics.c FAIL FAIL ./net/ipv4/netfilter.c FAIL FAIL ./net/ipv4/netfilter/ip_tables.c FAIL FAIL ./net/ipv4/netfilter/ipt_REJECT.c FAIL FAIL ./net/ipv4/netfilter/iptable_filter.c FAIL FAIL ./net/ipv4/netfilter/iptable_mangle.c FAIL FAIL ./net/ipv4/netfilter/iptable_nat.c FAIL FAIL ./net/ipv4/netfilter/iptable_nat.mod.c FAIL FAIL ./net/ipv4/netfilter/nf_defrag_ipv4.c FAIL FAIL ./net/ipv4/netfilter/nf_reject_ipv4.c FAIL FAIL ./net/ipv4/netlink.c FAIL FAIL ./net/ipv4/nexthop.c FAIL FAIL ./net/ipv4/ping.c FAIL FAIL ./net/ipv4/proc.c FAIL FAIL ./net/ipv4/protocol.c FAIL FAIL ./net/ipv4/raw.c FAIL FAIL ./net/ipv4/route.c FAIL FAIL ./net/ipv4/syncookies.c FAIL FAIL ./net/ipv4/sysctl_net_ipv4.c FAIL FAIL ./net/ipv4/tcp.c FAIL FAIL ./net/ipv4/tcp_cong.c FAIL FAIL ./net/ipv4/tcp_cubic.c FAIL FAIL ./net/ipv4/tcp_fastopen.c FAIL FAIL ./net/ipv4/tcp_input.c FAIL FAIL ./net/ipv4/tcp_ipv4.c FAIL FAIL ./net/ipv4/tcp_metrics.c FAIL FAIL ./net/ipv4/tcp_minisocks.c FAIL FAIL ./net/ipv4/tcp_offload.c FAIL FAIL ./net/ipv4/tcp_output.c FAIL FAIL ./net/ipv4/tcp_plb.c FAIL FAIL ./net/ipv4/tcp_rate.c FAIL FAIL ./net/ipv4/tcp_recovery.c FAIL FAIL ./net/ipv4/tcp_sigpool.c FAIL FAIL ./net/ipv4/tcp_timer.c FAIL FAIL ./net/ipv4/tcp_ulp.c FAIL FAIL ./net/ipv4/tunnel4.c FAIL FAIL ./net/ipv4/udp.c FAIL FAIL ./net/ipv4/udp_offload.c FAIL FAIL ./net/ipv4/udp_tunnel_stub.c FAIL FAIL ./net/ipv4/udplite.c FAIL FAIL ./net/ipv4/xfrm4_input.c FAIL FAIL ./net/ipv4/xfrm4_output.c FAIL FAIL ./net/ipv4/xfrm4_policy.c FAIL FAIL ./net/ipv4/xfrm4_protocol.c FAIL FAIL ./net/ipv4/xfrm4_state.c FAIL FAIL ./net/ipv6/addrconf.c FAIL FAIL ./net/ipv6/addrconf_core.c FAIL FAIL ./net/ipv6/addrlabel.c FAIL FAIL ./net/ipv6/af_inet6.c FAIL FAIL ./net/ipv6/ah6.c FAIL FAIL ./net/ipv6/anycast.c FAIL FAIL ./net/ipv6/calipso.c FAIL FAIL ./net/ipv6/datagram.c FAIL FAIL ./net/ipv6/esp6.c FAIL FAIL ./net/ipv6/exthdrs.c FAIL FAIL ./net/ipv6/exthdrs_core.c FAIL FAIL ./net/ipv6/exthdrs_offload.c FAIL FAIL ./net/ipv6/fib6_notifier.c FAIL FAIL ./net/ipv6/icmp.c FAIL FAIL ./net/ipv6/inet6_connection_sock.c FAIL FAIL ./net/ipv6/inet6_hashtables.c FAIL FAIL ./net/ipv6/ioam6.c FAIL FAIL ./net/ipv6/ip6_checksum.c FAIL FAIL ./net/ipv6/ip6_fib.c FAIL FAIL ./net/ipv6/ip6_flowlabel.c FAIL FAIL ./net/ipv6/ip6_icmp.c FAIL FAIL ./net/ipv6/ip6_input.c FAIL FAIL ./net/ipv6/ip6_offload.c FAIL FAIL ./net/ipv6/ip6_output.c FAIL FAIL ./net/ipv6/ipv6_sockglue.c FAIL FAIL ./net/ipv6/mcast.c FAIL FAIL ./net/ipv6/mcast_snoop.c FAIL FAIL ./net/ipv6/ndisc.c FAIL FAIL ./net/ipv6/netfilter.c FAIL FAIL ./net/ipv6/netfilter/ip6_tables.c FAIL FAIL ./net/ipv6/netfilter/ip6t_REJECT.c FAIL FAIL ./net/ipv6/netfilter/ip6t_ipv6header.c FAIL FAIL ./net/ipv6/netfilter/ip6table_filter.c FAIL FAIL ./net/ipv6/netfilter/ip6table_mangle.c FAIL FAIL ./net/ipv6/netfilter/nf_conntrack_reasm.c FAIL FAIL ./net/ipv6/netfilter/nf_defrag_ipv6_hooks.c FAIL FAIL ./net/ipv6/netfilter/nf_reject_ipv6.c FAIL FAIL ./net/ipv6/output_core.c FAIL FAIL ./net/ipv6/ping.c FAIL FAIL ./net/ipv6/proc.c FAIL FAIL ./net/ipv6/protocol.c FAIL FAIL ./net/ipv6/raw.c FAIL FAIL ./net/ipv6/reassembly.c FAIL FAIL ./net/ipv6/route.c FAIL FAIL ./net/ipv6/rpl.c FAIL FAIL ./net/ipv6/seg6.c FAIL FAIL ./net/ipv6/sit.c FAIL FAIL ./net/ipv6/syncookies.c FAIL FAIL ./net/ipv6/sysctl_net_ipv6.c FAIL FAIL ./net/ipv6/tcp_ipv6.c FAIL FAIL ./net/ipv6/tcpv6_offload.c FAIL FAIL ./net/ipv6/udp.c FAIL FAIL ./net/ipv6/udp_offload.c FAIL FAIL ./net/ipv6/udplite.c FAIL FAIL ./net/ipv6/xfrm6_input.c FAIL FAIL ./net/ipv6/xfrm6_output.c FAIL FAIL ./net/ipv6/xfrm6_policy.c FAIL FAIL ./net/ipv6/xfrm6_protocol.c FAIL FAIL ./net/ipv6/xfrm6_state.c FAIL FAIL ./net/mac80211/aead_api.c FAIL 2.61 ./net/mac80211/aes_cmac.c FAIL FAIL ./net/mac80211/aes_gmac.c FAIL FAIL ./net/mac80211/agg-rx.c FAIL FAIL ./net/mac80211/agg-tx.c FAIL FAIL ./net/mac80211/airtime.c FAIL FAIL ./net/mac80211/cfg.c FAIL FAIL ./net/mac80211/chan.c FAIL FAIL ./net/mac80211/driver-ops.c FAIL FAIL ./net/mac80211/eht.c FAIL FAIL ./net/mac80211/ethtool.c FAIL FAIL ./net/mac80211/fils_aead.c FAIL FAIL ./net/mac80211/he.c FAIL FAIL ./net/mac80211/ht.c FAIL FAIL ./net/mac80211/ibss.c FAIL FAIL ./net/mac80211/iface.c FAIL FAIL ./net/mac80211/key.c FAIL FAIL ./net/mac80211/led.c FAIL FAIL ./net/mac80211/link.c FAIL FAIL ./net/mac80211/main.c FAIL FAIL ./net/mac80211/michael.c FAIL 3.67 ./net/mac80211/mlme.c FAIL FAIL ./net/mac80211/ocb.c FAIL FAIL ./net/mac80211/offchannel.c FAIL FAIL ./net/mac80211/parse.c FAIL FAIL ./net/mac80211/pm.c FAIL FAIL ./net/mac80211/rate.c FAIL FAIL ./net/mac80211/rc80211_minstrel_ht.c FAIL FAIL ./net/mac80211/rx.c FAIL FAIL ./net/mac80211/s1g.c FAIL FAIL ./net/mac80211/scan.c FAIL FAIL ./net/mac80211/spectmgmt.c FAIL FAIL ./net/mac80211/sta_info.c FAIL FAIL ./net/mac80211/status.c FAIL FAIL ./net/mac80211/tdls.c FAIL FAIL ./net/mac80211/tkip.c FAIL FAIL ./net/mac80211/trace.c FAIL FAIL ./net/mac80211/tx.c FAIL FAIL ./net/mac80211/util.c FAIL FAIL ./net/mac80211/vht.c FAIL FAIL ./net/mac80211/wbrf.c FAIL FAIL ./net/mac80211/wep.c FAIL FAIL ./net/mac80211/wme.c FAIL FAIL ./net/mac80211/wpa.c FAIL FAIL ./net/netfilter/core.c FAIL FAIL ./net/netfilter/nf_conntrack_acct.c FAIL FAIL ./net/netfilter/nf_conntrack_core.c FAIL FAIL ./net/netfilter/nf_conntrack_expect.c FAIL FAIL ./net/netfilter/nf_conntrack_extend.c FAIL FAIL ./net/netfilter/nf_conntrack_ftp.c FAIL FAIL ./net/netfilter/nf_conntrack_helper.c FAIL FAIL ./net/netfilter/nf_conntrack_irc.c FAIL FAIL ./net/netfilter/nf_conntrack_netlink.c FAIL FAIL ./net/netfilter/nf_conntrack_proto.c FAIL FAIL ./net/netfilter/nf_conntrack_proto_generic.c FAIL FAIL ./net/netfilter/nf_conntrack_proto_icmp.c FAIL FAIL ./net/netfilter/nf_conntrack_proto_icmpv6.c FAIL FAIL ./net/netfilter/nf_conntrack_proto_tcp.c FAIL FAIL ./net/netfilter/nf_conntrack_proto_udp.c FAIL FAIL ./net/netfilter/nf_conntrack_seqadj.c FAIL FAIL ./net/netfilter/nf_conntrack_sip.c FAIL FAIL ./net/netfilter/nf_conntrack_standalone.c FAIL FAIL ./net/netfilter/nf_log.c FAIL FAIL ./net/netfilter/nf_log_syslog.c FAIL FAIL ./net/netfilter/nf_log_syslog.mod.c FAIL FAIL ./net/netfilter/nf_nat_core.c FAIL FAIL ./net/netfilter/nf_nat_ftp.c FAIL FAIL ./net/netfilter/nf_nat_helper.c FAIL FAIL ./net/netfilter/nf_nat_irc.c FAIL FAIL ./net/netfilter/nf_nat_masquerade.c FAIL FAIL ./net/netfilter/nf_nat_proto.c FAIL FAIL ./net/netfilter/nf_nat_sip.c FAIL FAIL ./net/netfilter/nf_queue.c FAIL FAIL ./net/netfilter/nf_sockopt.c FAIL FAIL ./net/netfilter/nfnetlink.c FAIL FAIL ./net/netfilter/nfnetlink_log.c FAIL FAIL ./net/netfilter/utils.c FAIL FAIL ./net/netfilter/x_tables.c FAIL FAIL ./net/netfilter/xt_CONNSECMARK.c FAIL FAIL ./net/netfilter/xt_LOG.c FAIL FAIL ./net/netfilter/xt_LOG.mod.c FAIL FAIL ./net/netfilter/xt_MASQUERADE.c FAIL FAIL ./net/netfilter/xt_MASQUERADE.mod.c FAIL FAIL ./net/netfilter/xt_NFLOG.c FAIL FAIL ./net/netfilter/xt_SECMARK.c FAIL FAIL ./net/netfilter/xt_TCPMSS.c FAIL FAIL ./net/netfilter/xt_addrtype.c FAIL FAIL ./net/netfilter/xt_addrtype.mod.c FAIL FAIL ./net/netfilter/xt_conntrack.c FAIL FAIL ./net/netfilter/xt_mark.c FAIL 3.81 ./net/netfilter/xt_mark.mod.c FAIL FAIL ./net/netfilter/xt_nat.c FAIL FAIL ./net/netfilter/xt_nat.mod.c FAIL FAIL ./net/netfilter/xt_policy.c FAIL FAIL ./net/netfilter/xt_state.c FAIL FAIL ./net/netfilter/xt_tcpudp.c FAIL FAIL ./net/netlabel/netlabel_addrlist.c FAIL FAIL ./net/netlabel/netlabel_calipso.c FAIL FAIL ./net/netlabel/netlabel_cipso_v4.c FAIL FAIL ./net/netlabel/netlabel_domainhash.c FAIL FAIL ./net/netlabel/netlabel_kapi.c FAIL FAIL ./net/netlabel/netlabel_mgmt.c FAIL FAIL ./net/netlabel/netlabel_unlabeled.c FAIL FAIL ./net/netlabel/netlabel_user.c FAIL FAIL ./net/netlink/af_netlink.c FAIL FAIL ./net/netlink/genetlink.c FAIL FAIL ./net/netlink/policy.c FAIL 3.44 ./net/packet/af_packet.c FAIL FAIL ./net/rfkill/core.c FAIL FAIL ./net/rfkill/input.c FAIL FAIL ./net/sched/act_api.c FAIL FAIL ./net/sched/cls_api.c FAIL FAIL ./net/sched/cls_cgroup.c FAIL FAIL ./net/sched/ematch.c FAIL FAIL ./net/sched/sch_api.c FAIL FAIL ./net/sched/sch_blackhole.c FAIL FAIL ./net/sched/sch_fifo.c FAIL FAIL ./net/sched/sch_frag.c FAIL FAIL ./net/sched/sch_generic.c FAIL FAIL ./net/sched/sch_mq.c FAIL FAIL ./net/socket.c FAIL FAIL ./net/sunrpc/addr.c FAIL FAIL ./net/sunrpc/auth.c FAIL FAIL ./net/sunrpc/auth_gss/auth_gss.c FAIL FAIL ./net/sunrpc/auth_gss/gss_generic_token.c FAIL 3.41 ./net/sunrpc/auth_gss/gss_krb5_crypto.c FAIL 3.33 ./net/sunrpc/auth_gss/gss_krb5_keys.c FAIL 3.36 ./net/sunrpc/auth_gss/gss_krb5_mech.c FAIL FAIL ./net/sunrpc/auth_gss/gss_krb5_seal.c FAIL 3.29 ./net/sunrpc/auth_gss/gss_krb5_unseal.c FAIL 3.53 ./net/sunrpc/auth_gss/gss_krb5_wrap.c FAIL 3.39 ./net/sunrpc/auth_gss/gss_mech_switch.c FAIL FAIL ./net/sunrpc/auth_gss/gss_rpc_upcall.c FAIL FAIL ./net/sunrpc/auth_gss/gss_rpc_xdr.c FAIL FAIL ./net/sunrpc/auth_gss/svcauth_gss.c FAIL FAIL ./net/sunrpc/auth_gss/trace.c FAIL FAIL ./net/sunrpc/auth_null.c FAIL FAIL ./net/sunrpc/auth_tls.c FAIL FAIL ./net/sunrpc/auth_unix.c FAIL FAIL ./net/sunrpc/cache.c FAIL FAIL ./net/sunrpc/clnt.c FAIL FAIL ./net/sunrpc/rpc_pipe.c FAIL FAIL ./net/sunrpc/rpcb_clnt.c FAIL FAIL ./net/sunrpc/sched.c FAIL FAIL ./net/sunrpc/socklib.c FAIL FAIL ./net/sunrpc/stats.c FAIL FAIL ./net/sunrpc/sunrpc_syms.c FAIL FAIL ./net/sunrpc/svc.c FAIL FAIL ./net/sunrpc/svc_xprt.c FAIL FAIL ./net/sunrpc/svcauth.c FAIL FAIL ./net/sunrpc/svcauth_unix.c FAIL FAIL ./net/sunrpc/svcsock.c FAIL FAIL ./net/sunrpc/sysctl.c FAIL 3.28 ./net/sunrpc/sysfs.c FAIL FAIL ./net/sunrpc/timer.c FAIL FAIL ./net/sunrpc/xdr.c FAIL FAIL ./net/sunrpc/xprt.c FAIL FAIL ./net/sunrpc/xprtmultipath.c FAIL FAIL ./net/sunrpc/xprtsock.c FAIL FAIL ./net/sysctl_net.c FAIL FAIL ./net/unix/af_unix.c FAIL FAIL ./net/unix/garbage.c FAIL FAIL ./net/unix/sysctl_net_unix.c FAIL FAIL ./net/wireless/ap.c FAIL FAIL ./net/wireless/chan.c FAIL FAIL ./net/wireless/core.c FAIL FAIL ./net/wireless/ethtool.c FAIL FAIL ./net/wireless/ibss.c FAIL FAIL ./net/wireless/mesh.c FAIL FAIL ./net/wireless/mlme.c FAIL FAIL ./net/wireless/nl80211.c FAIL FAIL ./net/wireless/ocb.c FAIL FAIL ./net/wireless/pmsr.c FAIL FAIL ./net/wireless/radiotap.c FAIL FAIL ./net/wireless/reg.c FAIL FAIL ./net/wireless/scan.c FAIL FAIL ./net/wireless/shipped-certs.c FAIL FAIL ./net/wireless/sme.c FAIL FAIL ./net/wireless/sysfs.c FAIL FAIL ./net/wireless/trace.c FAIL FAIL ./net/wireless/util.c FAIL FAIL ./net/xfrm/xfrm_algo.c FAIL FAIL ./net/xfrm/xfrm_device.c FAIL FAIL ./net/xfrm/xfrm_hash.c FAIL 2.71 ./net/xfrm/xfrm_input.c FAIL FAIL ./net/xfrm/xfrm_nat_keepalive.c FAIL FAIL ./net/xfrm/xfrm_output.c FAIL FAIL ./net/xfrm/xfrm_policy.c FAIL FAIL ./net/xfrm/xfrm_replay.c FAIL FAIL ./net/xfrm/xfrm_state.c FAIL FAIL ./net/xfrm/xfrm_sysctl.c FAIL FAIL ./net/xfrm/xfrm_user.c FAIL FAIL ./scripts/asn1_compiler.c FAIL 0.16 ./scripts/asn1_compiler.c FAIL FAIL ./scripts/basic/fixdep.c FAIL FAIL ./scripts/basic/fixdep.c FAIL 0.10 ./scripts/kallsyms.c FAIL FAIL ./scripts/kallsyms.c FAIL 0.11 ./scripts/kconfig/conf.c FAIL 0.15 ./scripts/kconfig/confdata.c FAIL 0.18 ./scripts/kconfig/expr.c FAIL 0.16 ./scripts/kconfig/lexer.lex.c FAIL 0.30 ./scripts/kconfig/menu.c FAIL 0.13 ./scripts/kconfig/parser.tab.c FAIL 0.17 ./scripts/kconfig/preprocess.c FAIL 0.12 ./scripts/kconfig/symbol.c FAIL 3.73 ./scripts/kconfig/util.c FAIL 0.20 ./scripts/mod/devicetable-offsets.c FAIL 0.91 ./scripts/mod/empty.c 0.66 0.53 ./scripts/mod/file2alias.c FAIL 0.27 ./scripts/mod/mk_elfconfig.c FAIL 0.88 ./scripts/mod/mk_elfconfig.c FAIL FAIL ./scripts/mod/modpost.c FAIL 0.27 ./scripts/mod/sumversion.c FAIL 0.13 ./scripts/mod/symsearch.c FAIL 0.13 ./scripts/selinux/genheaders/genheaders.c FAIL 0.14 ./scripts/selinux/genheaders/genheaders.c FAIL FAIL ./scripts/selinux/mdp/mdp.c FAIL FAIL ./scripts/selinux/mdp/mdp.c FAIL 0.13 ./scripts/sorttable.c FAIL 0.15 ./scripts/sorttable.c FAIL FAIL ./security/commoncap.c FAIL 4.10 ./security/device_cgroup.c FAIL FAIL ./security/integrity/iint.c FAIL FAIL ./security/integrity/integrity_audit.c FAIL FAIL ./security/keys/compat.c FAIL 3.72 ./security/keys/gc.c FAIL 3.13 ./security/keys/key.c FAIL 3.38 ./security/keys/keyctl.c FAIL 3.48 ./security/keys/keyctl_pkey.c FAIL 2.86 ./security/keys/keyring.c FAIL 3.81 ./security/keys/permission.c FAIL 3.32 ./security/keys/proc.c FAIL 2.86 ./security/keys/process_keys.c FAIL 3.73 ./security/keys/request_key.c FAIL 3.39 ./security/keys/request_key_auth.c FAIL 2.69 ./security/keys/sysctl.c FAIL 2.86 ./security/keys/user_defined.c FAIL 2.94 ./security/lsm_audit.c FAIL FAIL ./security/lsm_syscalls.c FAIL 3.42 ./security/min_addr.c FAIL 3.13 ./security/security.c FAIL 4.25 ./security/selinux/avc.c FAIL FAIL ./security/selinux/hooks.c FAIL FAIL ./security/selinux/netif.c FAIL FAIL ./security/selinux/netlabel.c FAIL FAIL ./security/selinux/netlink.c FAIL 3.80 ./security/selinux/netnode.c FAIL FAIL ./security/selinux/netport.c FAIL FAIL ./security/selinux/nlmsgtab.c FAIL FAIL ./security/selinux/selinuxfs.c FAIL FAIL ./security/selinux/ss/avtab.c FAIL FAIL ./security/selinux/ss/conditional.c FAIL FAIL ./security/selinux/ss/context.c FAIL FAIL ./security/selinux/ss/ebitmap.c FAIL FAIL ./security/selinux/ss/hashtab.c FAIL 1.51 ./security/selinux/ss/mls.c FAIL FAIL ./security/selinux/ss/policydb.c FAIL FAIL ./security/selinux/ss/services.c FAIL FAIL ./security/selinux/ss/sidtab.c FAIL FAIL ./security/selinux/ss/symtab.c FAIL 0.78 ./security/selinux/status.c FAIL FAIL ./sound/core/control.c FAIL FAIL ./sound/core/ctljack.c FAIL 2.63 ./sound/core/device.c FAIL 2.67 ./sound/core/hrtimer.c FAIL FAIL ./sound/core/hwdep.c FAIL FAIL ./sound/core/info.c FAIL 2.77 ./sound/core/init.c FAIL FAIL ./sound/core/isadma.c FAIL 2.81 ./sound/core/jack.c FAIL 2.97 ./sound/core/memalloc.c FAIL 3.73 ./sound/core/memory.c FAIL 2.94 ./sound/core/misc.c FAIL 3.63 ./sound/core/pcm.c FAIL FAIL ./sound/core/pcm_lib.c FAIL FAIL ./sound/core/pcm_memory.c FAIL FAIL ./sound/core/pcm_misc.c FAIL 3.26 ./sound/core/pcm_native.c FAIL 3.22 ./sound/core/pcm_timer.c FAIL 2.75 ./sound/core/seq/seq.c FAIL FAIL ./sound/core/seq/seq_clientmgr.c FAIL 3.80 ./sound/core/seq/seq_dummy.c FAIL FAIL ./sound/core/seq/seq_fifo.c FAIL 2.56 ./sound/core/seq/seq_info.c FAIL 2.86 ./sound/core/seq/seq_lock.c FAIL 2.71 ./sound/core/seq/seq_memory.c FAIL 3.77 ./sound/core/seq/seq_ports.c FAIL 2.74 ./sound/core/seq/seq_prioq.c FAIL 2.79 ./sound/core/seq/seq_queue.c FAIL 2.65 ./sound/core/seq/seq_system.c FAIL 2.61 ./sound/core/seq/seq_timer.c FAIL 2.67 ./sound/core/seq_device.c FAIL FAIL ./sound/core/sound.c FAIL FAIL ./sound/core/timer.c FAIL FAIL ./sound/core/vmaster.c FAIL 2.53 ./sound/hda/array.c FAIL 3.87 ./sound/hda/hda_bus_type.c FAIL FAIL ./sound/hda/hdac_bus.c FAIL 3.29 ./sound/hda/hdac_component.c FAIL 3.48 ./sound/hda/hdac_controller.c FAIL 3.25 ./sound/hda/hdac_device.c FAIL 3.21 ./sound/hda/hdac_i915.c FAIL FAIL ./sound/hda/hdac_regmap.c FAIL 3.98 ./sound/hda/hdac_stream.c FAIL 3.52 ./sound/hda/hdac_sysfs.c FAIL 3.13 ./sound/hda/hdmi_chmap.c FAIL 3.17 ./sound/hda/intel-dsp-config.c FAIL FAIL ./sound/hda/intel-nhlt.c FAIL 2.78 ./sound/hda/intel-sdw-acpi.c FAIL FAIL ./sound/hda/trace.c FAIL 3.97 ./sound/last.c FAIL 2.46 ./sound/pci/hda/hda_auto_parser.c FAIL 3.13 ./sound/pci/hda/hda_bind.c FAIL 3.15 ./sound/pci/hda/hda_codec.c FAIL FAIL ./sound/pci/hda/hda_controller.c FAIL 4.46 ./sound/pci/hda/hda_hwdep.c FAIL 3.29 ./sound/pci/hda/hda_intel.c FAIL FAIL ./sound/pci/hda/hda_jack.c FAIL 3.35 ./sound/pci/hda/hda_proc.c FAIL FAIL ./sound/pci/hda/hda_sysfs.c FAIL 3.16 ./sound/sound_core.c FAIL FAIL ./tools/build/fixdep.c 0.10 0.97 ./tools/lib/ctype.c 0.60 0.61 ./tools/lib/rbtree.c FAIL 0.11 ./tools/lib/str_error_r.c FAIL 0.60 ./tools/lib/string.c FAIL 0.73 ./tools/lib/subcmd/exec-cmd.c FAIL 0.12 ./tools/lib/subcmd/help.c FAIL 0.12 ./tools/lib/subcmd/pager.c FAIL 0.10 ./tools/lib/subcmd/parse-options.c FAIL 0.16 ./tools/lib/subcmd/run-command.c FAIL 0.13 ./tools/lib/subcmd/sigchain.c FAIL FAIL ./tools/lib/subcmd/subcmd-config.c 0.45 0.40 ./tools/objtool/arch/x86/decode.c FAIL 0.73 ./tools/objtool/arch/x86/orc.c FAIL 0.17 ./tools/objtool/arch/x86/special.c FAIL 0.15 ./tools/objtool/builtin-check.c FAIL 0.19 ./tools/objtool/check.c FAIL 0.60 ./tools/objtool/elf.c FAIL 0.35 ./tools/objtool/objtool.c FAIL 0.19 ./tools/objtool/orc_dump.c FAIL 0.19 ./tools/objtool/orc_gen.c FAIL 0.21 ./tools/objtool/special.c FAIL 0.16 ./tools/objtool/weak.c FAIL 0.17 ./usr/gen_init_cpio.c FAIL FAIL ./usr/gen_init_cpio.c FAIL 0.12 ./usr/initramfs_data.S FAIL FAIL"},{"location":"Benchmarks/single-source-results/","title":"LLVM Single Source","text":"HighLevel with Unsupported HighLevel LLVM Binary TOTAL 1748/1831 1701/1831 801/1831 536/1831 2002-04-17-PrintfChar 0.0159 0.0243 0.0283 0.025 2002-05-02-ArgumentTest 0.025 0.023 0.0285 0.0257 2002-05-02-CastTest 0.0406 0.0399 0.338 FAIL 2002-05-02-CastTest1 0.0135 0.0163 0.0275 0.0265 2002-05-02-CastTest2 0.0368 0.0355 0.2783 FAIL 2002-05-02-CastTest3 0.0231 0.0209 0.0253 0.0257 2002-05-02-ManyArguments 0.018 0.0229 0.0714 FAIL 2002-05-03-NotTest 0.0245 0.0202 0.0763 FAIL 2002-05-19-DivTest 0.0211 0.0143 0.0571 0.0502 2002-08-02-CastTest 0.0325 0.013 0.0627 FAIL 2002-08-02-CastTest2 0.0186 0.0209 0.0246 0.0195 2002-08-19-CodegenBug 0.0377 0.037 0.2621 FAIL 2002-10-09-ArrayResolution 0.0161 0.0233 FAIL FAIL 2002-10-12-StructureArgs 0.0352 0.0297 0.0604 FAIL 2002-10-12-StructureArgsSimple 0.0345 0.0345 0.0566 FAIL 2002-10-13-BadLoad 0.0195 0.0136 0.0166 0.0253 2002-12-13-MishaTest 0.0304 0.0349 FAIL FAIL 2003-04-22-Switch 0.031 0.0143 FAIL FAIL 2003-05-02-DependentPHI 0.0329 0.0332 FAIL FAIL 2003-05-07-VarArgs 0.033 0.0348 FAIL FAIL 2003-05-12-MinIntProblem 0.0264 0.0205 0.0672 FAIL 2003-05-14-AtExit 0.0341 0.0353 FAIL FAIL 2003-05-26-Shorts 0.0311 0.0316 0.1673 FAIL 2003-05-31-CastToBool 0.0283 0.0302 0.0919 FAIL 2003-05-31-LongShifts 0.0265 0.0222 0.0354 FAIL 2003-07-06-IntOverflow 0.03 0.0206 0.1001 FAIL 2003-07-08-BitOpsTest 0.0137 0.0273 0.0895 FAIL 2003-07-09-LoadShorts 0.0532 0.0469 0.4109 FAIL 2003-07-09-SignedArgs 0.0378 0.0312 FAIL FAIL 2003-07-10-SignConversions 0.0343 0.0362 0.0856 FAIL 2003-08-05-CastFPToUint 0.0479 0.0385 0.293 FAIL 2003-08-11-VaListArg 0.0294 0.0296 FAIL FAIL 2003-08-20-FoldBug 0.0293 0.0313 0.0666 FAIL 2003-09-18-BitFieldTest 0.0268 0.0327 0.0752 FAIL 2003-10-13-SwitchTest 0.0251 0.0273 FAIL FAIL 2003-10-29-ScalarReplBug 0.0292 0.0337 FAIL FAIL 2004-02-02-NegativeZero 0.0119 0.0199 0.0303 FAIL 2004-06-20-StaticBitfieldInit 0.0229 0.0322 0.0712 FAIL 2004-11-28-GlobalBoolLayout 0.0398 0.053 FAIL FAIL 2005-05-11-Popcount-ffs-fls 0.0345 0.0309 0.1998 FAIL 2005-05-12-Int64ToFP 0.0331 0.0295 0.0625 FAIL 2005-05-13-SDivTwo 0.0404 0.0339 0.0596 FAIL 2005-07-15-Bitfield-ABI 0.0245 0.0236 0.0329 FAIL 2005-07-17-INT-To-FP 0.0311 0.0312 0.0911 FAIL 2005-11-29-LongSwitch 0.0212 0.0255 FAIL FAIL 2006-01-23-UnionInit 0.0185 0.0323 FAIL FAIL 2006-01-29-SimpleIndirectCall 0.0305 0.0243 FAIL FAIL 2006-02-04-DivRem 0.0246 0.0257 0.0806 FAIL 2006-12-01-float_varg 0.0225 0.0333 0.0762 FAIL 2006-12-04-DynAllocAndRestore FAIL FAIL FAIL FAIL 2006-12-07-Compare64BitConstant 0.0283 0.0358 0.0687 FAIL 2006-12-11-LoadConstants 0.0416 0.0484 0.267 FAIL 2007-01-04-KNR-Args 0.0303 0.0304 FAIL FAIL 2007-03-02-VaCopy 0.0251 0.0367 FAIL FAIL 2007-04-10-BitfieldTest 0.0321 0.0378 0.2647 FAIL 2007-04-25-weak 0.02 0.0197 FAIL FAIL 2008-04-18-LoopBug 0.0203 0.0132 0.017 0.0297 2008-04-20-LoopBug2 0.0116 0.0126 0.0335 0.0325 2008-07-13-InlineSetjmp 0.0263 0.0276 FAIL FAIL 2009-04-16-BitfieldInitialization 0.028 0.0318 FAIL FAIL 2009-12-07-StructReturn 0.0188 0.02 FAIL FAIL 2010-05-24-BitfieldTest 0.0258 0.0217 0.0236 0.0196 2010-12-08-tls 0.0348 0.0301 0.0635 FAIL 2020-01-06-coverage-001 0.0344 0.0378 FAIL FAIL 2020-01-06-coverage-002 0.0357 0.0455 FAIL FAIL 2020-01-06-coverage-003 0.0332 0.0352 0.0898 FAIL 2020-01-06-coverage-004 0.029 0.0351 FAIL FAIL 2020-01-06-coverage-005 0.0356 0.0408 FAIL FAIL 2020-01-06-coverage-006 0.0338 0.0204 0.0927 FAIL 2020-01-06-coverage-007 0.0285 0.0165 0.102 FAIL 2020-01-06-coverage-008 0.0281 0.0391 0.1136 FAIL 2020-01-06-coverage-009 0.0405 0.0345 FAIL FAIL 2020-01-06-coverage-010 0.0287 0.0461 FAIL FAIL 2mm 0.1085 0.099 FAIL FAIL 3mm 0.1049 0.0868 FAIL FAIL AtomicOps 0.0283 0.0402 0.0716 FAIL Bubblesort 0.0454 0.04 0.3482 FAIL DefaultInitDynArrays 0.0211 FAIL FAIL FAIL FloatMM 0.0398 0.0426 0.3396 FAIL FloatPrecision 0.0289 0.0271 0.0696 FAIL GCC-C-execute-20000112-1 0.0175 0.019 FAIL FAIL GCC-C-execute-20000113-1 0.0205 0.0108 FAIL FAIL GCC-C-execute-20000121-1 0.0271 0.0226 0.0276 0.0 GCC-C-execute-20000205-1 0.0177 0.025 0.0251 0.0 GCC-C-execute-20000217-1 0.025 0.0209 FAIL FAIL GCC-C-execute-20000223-1 0.0223 0.0097 FAIL FAIL GCC-C-execute-20000224-1 0.0179 0.013 0.0193 FAIL GCC-C-execute-20000225-1 0.0145 0.0165 0.0268 0.0 GCC-C-execute-20000227-1 0.0175 0.0149 FAIL FAIL GCC-C-execute-20000313-1 0.02 0.0159 0.0276 0.0 GCC-C-execute-20000314-1 0.0211 0.0115 FAIL FAIL GCC-C-execute-20000314-2 0.0248 0.0183 FAIL FAIL GCC-C-execute-20000314-3 0.0104 0.0133 FAIL FAIL GCC-C-execute-20000402-1 0.0372 0.0248 0.0766 FAIL GCC-C-execute-20000403-1 0.0284 0.0042 FAIL FAIL GCC-C-execute-20000412-1 0.0209 0.0168 0.0207 0.0 GCC-C-execute-20000412-2 0.0183 0.0101 0.0268 0.0 GCC-C-execute-20000412-3 0.0286 0.0176 FAIL FAIL GCC-C-execute-20000412-4 0.0273 0.017 0.032 0.0 GCC-C-execute-20000412-5 0.0144 0.0086 0.0282 0.0 GCC-C-execute-20000412-6 0.015 0.0058 FAIL FAIL GCC-C-execute-20000419-1 0.0279 0.014 0.0243 0.0 GCC-C-execute-20000422-1 0.0243 0.0138 0.0331 FAIL GCC-C-execute-20000503-1 0.024 0.0114 0.0238 0.0 GCC-C-execute-20000511-1 0.0203 0.0138 FAIL FAIL GCC-C-execute-20000519-1 0.0264 0.0131 FAIL FAIL GCC-C-execute-20000519-2 0.0183 0.0111 0.0238 0.0 GCC-C-execute-20000523-1 0.0216 0.0179 0.0232 0.0 GCC-C-execute-20000528-1 0.012 0.0057 0.0252 FAIL GCC-C-execute-20000603-1 0.0099 0.0095 0.0233 0.0 GCC-C-execute-20000605-1 0.0173 0.0293 0.0154 0.0 GCC-C-execute-20000605-2 0.0042 0.0169 0.0235 0.0 GCC-C-execute-20000605-3 0.0114 0.0207 FAIL FAIL GCC-C-execute-20000622-1 0.0287 0.0224 FAIL FAIL GCC-C-execute-20000703-1 0.0163 0.0317 FAIL FAIL GCC-C-execute-20000706-1 0.0216 0.0166 FAIL FAIL GCC-C-execute-20000706-2 0.019 0.0207 FAIL FAIL GCC-C-execute-20000706-3 0.0133 0.0168 0.0257 0.0 GCC-C-execute-20000706-4 0.0242 0.0094 0.0167 0.0 GCC-C-execute-20000706-5 0.0176 0.0038 FAIL FAIL GCC-C-execute-20000707-1 0.0133 0.0139 0.0347 0.0 GCC-C-execute-20000715-1 0.0275 0.0149 0.0262 0.0 GCC-C-execute-20000715-2 0.0244 0.023 0.0157 0.0 GCC-C-execute-20000717-1 0.0203 0.0131 FAIL FAIL GCC-C-execute-20000717-2 0.019 0.0158 0.0171 0.0 GCC-C-execute-20000717-3 0.0172 0.0093 0.0263 0.0 GCC-C-execute-20000717-4 0.0162 0.0235 0.0242 0.0 GCC-C-execute-20000717-5 0.0175 0.021 FAIL FAIL GCC-C-execute-20000722-1 0.0163 0.0108 FAIL FAIL GCC-C-execute-20000726-1 0.0245 0.0189 0.0189 0.0 GCC-C-execute-20000731-1 0.0235 0.0136 FAIL FAIL GCC-C-execute-20000731-2 0.0217 0.0132 0.0193 0.0 GCC-C-execute-20000801-1 0.0169 0.012 FAIL FAIL GCC-C-execute-20000801-2 0.0221 0.0135 FAIL FAIL GCC-C-execute-20000801-3 0.0236 0.0175 0.017 0.0 GCC-C-execute-20000801-4 0.0236 0.0166 FAIL FAIL GCC-C-execute-20000808-1 0.0141 0.0218 FAIL FAIL GCC-C-execute-20000815-1 0.0275 0.0127 FAIL FAIL GCC-C-execute-20000818-1 0.0236 0.0161 FAIL FAIL GCC-C-execute-20000819-1 0.0164 0.012 FAIL FAIL GCC-C-execute-20000910-1 0.0337 0.0282 FAIL FAIL GCC-C-execute-20000910-2 0.0418 0.0397 0.2374 FAIL GCC-C-execute-20000914-1 0.0143 0.0276 FAIL FAIL GCC-C-execute-20000917-1 0.0098 0.0241 FAIL FAIL GCC-C-execute-20001009-1 0.0137 0.0158 0.0155 0.0 GCC-C-execute-20001009-2 0.0162 0.0238 FAIL FAIL GCC-C-execute-20001011-1 0.014 0.0235 FAIL FAIL GCC-C-execute-20001013-1 0.0223 0.0136 0.0284 0.0 GCC-C-execute-20001017-1 0.023 0.0174 0.0167 0.0 GCC-C-execute-20001017-2 0.0303 0.0233 FAIL FAIL GCC-C-execute-20001024-1 0.017 0.0128 FAIL FAIL GCC-C-execute-20001026-1 0.0245 0.0192 FAIL FAIL GCC-C-execute-20001027-1 0.0136 0.0177 0.0206 0.0 GCC-C-execute-20001031-1 0.0253 0.0214 0.0237 0.0 GCC-C-execute-20001101 0.0082 0.0203 FAIL FAIL GCC-C-execute-20001108-1 0.0181 0.0224 0.0225 0.0 GCC-C-execute-20001111-1 0.0155 0.0224 0.0259 FAIL GCC-C-execute-20001112-1 0.0257 0.0131 0.0236 0.0 GCC-C-execute-20001124-1 0.0248 0.0213 FAIL FAIL GCC-C-execute-20001130-1 0.0214 0.0118 0.0246 0.0 GCC-C-execute-20001130-2 0.0226 0.0214 FAIL FAIL GCC-C-execute-20001203-1 0.0172 0.0116 0.0313 0.0 GCC-C-execute-20001203-2 0.0283 0.0283 FAIL FAIL GCC-C-execute-20001221-1 0.0125 0.0221 0.0195 0.0 GCC-C-execute-20001228-1 0.0257 0.0153 0.0233 0.0 GCC-C-execute-20001229-1 0.0235 0.0218 FAIL FAIL GCC-C-execute-20010106-1 0.0126 0.0161 FAIL FAIL GCC-C-execute-20010114-1 0.0295 0.0125 0.0231 0.0 GCC-C-execute-20010116-1 0.0203 0.0258 FAIL FAIL GCC-C-execute-20010118-1 0.0113 0.0083 0.032 0.0 GCC-C-execute-20010119-1 0.013 0.0127 0.0287 FAIL GCC-C-execute-20010123-1 0.0242 0.0313 FAIL FAIL GCC-C-execute-20010129-1 0.0306 0.0283 FAIL FAIL GCC-C-execute-20010206-1 0.0095 0.0109 0.0266 0.0 GCC-C-execute-20010221-1 0.0166 0.0242 0.0209 0.0 GCC-C-execute-20010222-1 0.0184 0.0181 0.0192 0.0 GCC-C-execute-20010224-1 0.0211 0.0193 0.0268 FAIL GCC-C-execute-20010325-1 0.0201 0.027 FAIL FAIL GCC-C-execute-20010329-1 0.021 0.0201 FAIL FAIL GCC-C-execute-20010403-1 0.0078 0.0263 0.0281 0.0 GCC-C-execute-20010409-1 0.0217 0.0165 FAIL FAIL GCC-C-execute-20010422-1 0.0098 0.0143 0.021 0.0 GCC-C-execute-20010518-1 0.0149 0.0116 0.0238 0.0 GCC-C-execute-20010518-2 0.0118 0.0337 FAIL FAIL GCC-C-execute-20010520-1 0.0188 0.0194 0.0241 0.0 GCC-C-execute-20010604-1 0.0184 0.0211 FAIL FAIL GCC-C-execute-20010605-2 0.0216 0.0235 FAIL FAIL GCC-C-execute-20010711-1 0.0161 0.0119 0.0142 0.0 GCC-C-execute-20010717-1 0.0216 0.0119 0.0253 0.0 GCC-C-execute-20010723-1 0.0173 0.0169 FAIL FAIL GCC-C-execute-20010904-1 0.0193 0.0119 FAIL FAIL GCC-C-execute-20010904-2 0.0165 0.021 FAIL FAIL GCC-C-execute-20010910-1 0.0238 0.0196 0.0255 0.0 GCC-C-execute-20010915-1 0.0189 0.0214 FAIL FAIL GCC-C-execute-20010924-1 0.0254 0.0121 FAIL FAIL GCC-C-execute-20010925-1 0.0133 0.0208 0.0254 0.0 GCC-C-execute-20011008-3 0.0236 0.0196 0.0254 0.0 GCC-C-execute-20011019-1 0.0161 0.0141 FAIL FAIL GCC-C-execute-20011024-1 0.0168 0.0174 0.0222 FAIL GCC-C-execute-20011109-1 0.0251 0.0181 FAIL FAIL GCC-C-execute-20011109-2 0.0165 0.0217 0.0272 0.0 GCC-C-execute-20011113-1 0.004 0.0208 FAIL FAIL GCC-C-execute-20011114-1 0.0194 0.0171 0.0247 0.0 GCC-C-execute-20011115-1 0.0212 0.0239 FAIL FAIL GCC-C-execute-20011121-1 0.0176 0.0179 0.0169 FAIL GCC-C-execute-20011126-1 0.0169 0.0169 0.0317 0.0 GCC-C-execute-20011126-2 0.0187 0.0212 FAIL FAIL GCC-C-execute-20011128-1 0.0132 0.0188 FAIL FAIL GCC-C-execute-20011217-1 0.0185 0.0138 FAIL FAIL GCC-C-execute-20011219-1 0.0162 0.0219 FAIL FAIL GCC-C-execute-20011223-1 0.0169 0.0176 FAIL FAIL GCC-C-execute-20020103-1 0.0103 0.0116 0.0211 0.0 GCC-C-execute-20020108-1 0.0529 0.0506 0.1907 0.0 GCC-C-execute-20020118-1 0.018 0.0229 FAIL FAIL GCC-C-execute-20020127-1 0.0187 0.0165 0.0201 0.0 GCC-C-execute-20020129-1 0.0157 0.0189 FAIL FAIL GCC-C-execute-20020201-1 0.0274 0.0158 0.0322 0.0 GCC-C-execute-20020206-1 0.0175 0.0236 FAIL FAIL GCC-C-execute-20020206-2 0.0143 0.0188 FAIL FAIL GCC-C-execute-20020213-1 0.0163 0.0183 0.0174 0.0 GCC-C-execute-20020215-1 0.0256 0.018 FAIL FAIL GCC-C-execute-20020216-1 0.0154 0.0091 FAIL FAIL GCC-C-execute-20020219-1 0.0166 0.0165 0.0274 0.0 GCC-C-execute-20020225-1 0.0085 0.0136 0.0284 0.0 GCC-C-execute-20020225-2 0.0149 0.0173 0.0294 0.0 GCC-C-execute-20020226-1 0.0285 0.0218 0.0693 FAIL GCC-C-execute-20020227-1 0.0184 0.0226 FAIL FAIL GCC-C-execute-20020307-1 0.0296 0.0204 0.0618 0.0 GCC-C-execute-20020314-1 0.0194 0.0128 FAIL FAIL GCC-C-execute-20020320-1 0.0208 0.0153 FAIL FAIL GCC-C-execute-20020321-1 0.01 0.0211 0.0274 0.0 GCC-C-execute-20020328-1 0.0202 0.0199 FAIL FAIL GCC-C-execute-20020402-1 0.0094 0.0124 0.0351 0.0 GCC-C-execute-20020402-2 0.012 0.0137 0.0407 FAIL GCC-C-execute-20020402-3 0.0178 0.022 0.033 0.0 GCC-C-execute-20020404-1 0.0196 0.0214 FAIL FAIL GCC-C-execute-20020406-1 0.0272 0.0239 0.0371 0.0 GCC-C-execute-20020411-1 0.0138 0.0302 FAIL FAIL GCC-C-execute-20020413-1 0.0263 0.0119 FAIL FAIL GCC-C-execute-20020418-1 0.0104 0.0287 FAIL FAIL GCC-C-execute-20020423-1 0.0158 0.0134 0.0173 0.0 GCC-C-execute-20020503-1 0.0197 0.0279 FAIL FAIL GCC-C-execute-20020506-1 0.0179 0.0297 0.0711 0.0 GCC-C-execute-20020508-1 0.0353 0.0281 0.0766 FAIL GCC-C-execute-20020508-2 0.0301 0.029 0.0756 FAIL GCC-C-execute-20020508-3 0.0402 0.0427 0.0934 FAIL GCC-C-execute-20020510-1 0.0198 0.0117 0.0398 0.0 GCC-C-execute-20020529-1 0.0213 0.0184 FAIL FAIL GCC-C-execute-20020611-1 0.0141 0.0151 FAIL FAIL GCC-C-execute-20020614-1 0.0084 0.0255 0.0268 0.0 GCC-C-execute-20020615-1 0.0183 0.0126 FAIL FAIL GCC-C-execute-20020619-1 0.0203 0.0193 0.0298 FAIL GCC-C-execute-20020716-1 0.0166 0.0205 FAIL FAIL GCC-C-execute-20020720-1 0.0154 0.0225 0.023 0.0 GCC-C-execute-20020805-1 0.0176 0.0232 0.013 0.0 GCC-C-execute-20020810-1 0.0201 0.0197 FAIL FAIL GCC-C-execute-20020819-1 0.0138 0.0114 0.0244 0.0 GCC-C-execute-20020904-1 0.0177 0.0242 0.0232 0.0 GCC-C-execute-20020911-1 0.0233 0.0208 0.03 0.0 GCC-C-execute-20020916-1 0.0178 0.0167 0.0205 0.0 GCC-C-execute-20020920-1 0.0173 0.018 FAIL FAIL GCC-C-execute-20021010-1 0.0209 0.019 FAIL FAIL GCC-C-execute-20021010-2 0.0333 0.0384 FAIL FAIL GCC-C-execute-20021011-1 0.0136 0.0219 FAIL FAIL GCC-C-execute-20021015-1 0.0205 0.0138 FAIL FAIL GCC-C-execute-20021024-1 0.009 0.0269 FAIL FAIL GCC-C-execute-20021111-1 0.0172 0.0151 0.0244 0.0 GCC-C-execute-20021113-1 0.0203 0.023 FAIL FAIL GCC-C-execute-20021118-1 0.0164 0.0193 0.0209 0.0 GCC-C-execute-20021118-2 0.0142 0.0192 FAIL FAIL GCC-C-execute-20021118-3 0.0242 0.0203 0.0149 0.0 GCC-C-execute-20021119-1 0.0279 0.013 0.0294 0.0 GCC-C-execute-20021120-1 0.0223 0.0342 FAIL FAIL GCC-C-execute-20021120-2 0.0214 0.0278 0.0289 0.0 GCC-C-execute-20021120-3 0.0169 0.0115 0.0302 0.0 GCC-C-execute-20021204-1 0.0115 0.0107 FAIL FAIL GCC-C-execute-20021219-1 0.0195 0.0201 FAIL FAIL GCC-C-execute-20030105-1 0.0205 0.0202 0.0159 FAIL GCC-C-execute-20030109-1 0.0127 0.0149 FAIL FAIL GCC-C-execute-20030117-1 0.0163 0.0169 0.0295 0.0 GCC-C-execute-20030120-1 0.0232 0.0207 FAIL FAIL GCC-C-execute-20030120-2 0.0191 0.0097 0.0216 0.0 GCC-C-execute-20030125-1 0.0165 0.0057 FAIL FAIL GCC-C-execute-20030128-1 0.0202 0.0157 FAIL FAIL GCC-C-execute-20030203-1 0.0204 0.0153 0.0308 0.0 GCC-C-execute-20030209-1 0.019 0.0179 0.0235 0.0 GCC-C-execute-20030216-1 0.0154 0.0114 0.0176 0.0 GCC-C-execute-20030218-1 0.0115 0.0208 FAIL FAIL GCC-C-execute-20030221-1 0.0192 0.0183 FAIL FAIL GCC-C-execute-20030222-1 0.0261 0.0221 FAIL FAIL GCC-C-execute-20030224-2 0.0216 0.0107 FAIL FAIL GCC-C-execute-20030307-1 0.0169 0.013 0.0236 0.0 GCC-C-execute-20030313-1 0.0217 0.0138 FAIL FAIL GCC-C-execute-20030316-1 0.02 0.0113 0.0272 0.0 GCC-C-execute-20030323-1 0.0222 0.0126 FAIL FAIL GCC-C-execute-20030330-1 0.0262 0.0141 FAIL FAIL GCC-C-execute-20030401-1 0.023 0.0273 0.0231 0.0 GCC-C-execute-20030403-1 0.0298 0.0171 0.035 0.0 GCC-C-execute-20030404-1 0.0196 0.0173 0.0275 0.0 GCC-C-execute-20030408-1 0.0243 0.0259 FAIL FAIL GCC-C-execute-20030606-1 0.0171 0.0109 FAIL FAIL GCC-C-execute-20030613-1 0.0246 0.0247 FAIL FAIL GCC-C-execute-20030626-1 0.0247 0.0146 0.0205 0.0 GCC-C-execute-20030626-2 0.0192 0.0126 0.0317 FAIL GCC-C-execute-20030714-1 0.0201 0.0284 FAIL FAIL GCC-C-execute-20030715-1 0.0128 0.0178 FAIL FAIL GCC-C-execute-20030717-1 0.0181 0.0148 0.0179 FAIL GCC-C-execute-20030718-1 0.0124 0.0057 0.0206 0.0 GCC-C-execute-20030811-1 0.0168 0.0179 0.0305 FAIL GCC-C-execute-20030821-1 0.0137 0.0193 0.0129 0.0 GCC-C-execute-20030828-1 0.0194 0.0113 0.0155 FAIL GCC-C-execute-20030828-2 0.0234 0.0193 FAIL FAIL GCC-C-execute-20030903-1 0.0242 0.015 FAIL FAIL GCC-C-execute-20030909-1 0.0182 0.0104 FAIL FAIL GCC-C-execute-20030910-1 0.017 0.0155 FAIL FAIL GCC-C-execute-20030913-1 0.0097 0.0195 0.0094 0.0 GCC-C-execute-20030914-1 0.0153 0.0146 FAIL FAIL GCC-C-execute-20030914-2 0.0204 0.0093 0.0269 0.0 GCC-C-execute-20030916-1 0.0198 0.0238 FAIL FAIL GCC-C-execute-20030920-1 0.0204 0.0209 FAIL FAIL GCC-C-execute-20030928-1 0.0175 0.0082 FAIL FAIL GCC-C-execute-20031010-1 0.0282 0.0186 FAIL FAIL GCC-C-execute-20031011-1 0.0275 0.0215 0.0193 0.0 GCC-C-execute-20031012-1 0.014 0.0273 0.022 0.0 GCC-C-execute-20031020-1 0.0228 0.0173 0.0241 0.0 GCC-C-execute-20031201-1 0.0189 0.0137 FAIL FAIL GCC-C-execute-20031204-1 0.0296 0.0197 FAIL FAIL GCC-C-execute-20031211-1 0.0254 0.0125 0.0258 0.0 GCC-C-execute-20031211-2 0.0154 0.0263 FAIL FAIL GCC-C-execute-20031214-1 0.0131 0.0182 0.0175 0.0 GCC-C-execute-20031215-1 0.021 0.0237 FAIL FAIL GCC-C-execute-20031216-1 0.0136 0.0205 0.0247 0.0 GCC-C-execute-20040208-1 0.0153 0.0129 0.0155 0.0 GCC-C-execute-20040218-1 0.0082 0.012 FAIL FAIL GCC-C-execute-20040223-1 0.0239 0.025 0.0878 FAIL GCC-C-execute-20040302-1 0.0177 0.0091 FAIL FAIL GCC-C-execute-20040307-1 0.0135 0.0164 FAIL FAIL GCC-C-execute-20040309-1 0.02 0.0178 0.0249 0.0 GCC-C-execute-20040311-1 0.0153 0.0176 0.0313 0.0 GCC-C-execute-20040313-1 0.0177 0.0198 0.0214 0.0 GCC-C-execute-20040319-1 0.0206 0.0236 0.0253 0.0 GCC-C-execute-20040331-1 0.0186 0.0225 0.0174 0.0 GCC-C-execute-20040409-1 0.0196 0.0307 0.0227 0.0 GCC-C-execute-20040409-1w 0.0273 0.0231 0.0262 0.0 GCC-C-execute-20040409-2 0.0248 0.024 0.0434 0.0 GCC-C-execute-20040409-2w 0.0193 0.0166 0.0351 0.0 GCC-C-execute-20040409-3 0.0168 0.0254 0.0187 0.0 GCC-C-execute-20040409-3w 0.0267 0.0099 0.0177 0.0 GCC-C-execute-20040411-1 0.0132 0.0196 FAIL FAIL GCC-C-execute-20040625-1 0.0167 0.0139 0.0212 0.0 GCC-C-execute-20040629-1 0.0491 0.0723 FAIL FAIL GCC-C-execute-20040703-1 FAIL FAIL FAIL FAIL GCC-C-execute-20040704-1 0.0197 0.0201 FAIL FAIL GCC-C-execute-20040705-1 0.0704 0.0698 FAIL FAIL GCC-C-execute-20040705-2 0.0609 0.0654 FAIL FAIL GCC-C-execute-20040706-1 0.0231 0.0138 0.0282 0.0 GCC-C-execute-20040707-1 0.0211 0.0138 FAIL FAIL GCC-C-execute-20040709-1 0.0891 0.0804 FAIL FAIL GCC-C-execute-20040709-2 0.0838 0.0929 FAIL FAIL GCC-C-execute-20040709-3 0.0932 0.0958 FAIL FAIL GCC-C-execute-20040805-1 0.0169 0.0081 0.0186 0.0 GCC-C-execute-20040811-1 0.0204 0.0129 FAIL FAIL GCC-C-execute-20040820-1 0.0232 0.015 0.0221 0.0 GCC-C-execute-20040823-1 0.0276 0.0265 0.2337 FAIL GCC-C-execute-20040831-1 0.0253 0.0223 0.0252 0.0 GCC-C-execute-20040917-1 0.0161 0.0203 FAIL FAIL GCC-C-execute-20041011-1 0.0617 0.0472 FAIL FAIL GCC-C-execute-20041019-1 0.016 0.0251 0.0172 0.0 GCC-C-execute-20041112-1 0.019 0.019 0.0259 0.0 GCC-C-execute-20041113-1 0.0198 0.017 FAIL FAIL GCC-C-execute-20041114-1 0.0284 0.0146 0.0288 0.0 GCC-C-execute-20041124-1 0.0155 0.0152 FAIL FAIL GCC-C-execute-20041126-1 0.023 0.0302 0.0257 0.0 GCC-C-execute-20041201-1 0.0138 0.004 FAIL FAIL GCC-C-execute-20041210-1 0.0263 0.0171 0.0277 0.0 GCC-C-execute-20041212-1 0.013 0.0236 FAIL FAIL GCC-C-execute-20041213-2 0.0079 0.0167 0.0231 0.0 GCC-C-execute-20041214-1 0.0207 0.0219 FAIL FAIL GCC-C-execute-20041218-1 0.0266 0.0198 FAIL FAIL GCC-C-execute-20050104-1 0.0187 0.0135 0.0308 0.0 GCC-C-execute-20050106-1 0.0061 0.0176 FAIL FAIL GCC-C-execute-20050107-1 0.0271 0.0138 0.0287 0.0 GCC-C-execute-20050111-1 0.0136 0.0175 0.0226 0.0 GCC-C-execute-20050119-1 0.0185 0.0219 0.0223 0.0 GCC-C-execute-20050119-2 0.0149 0.0172 0.0281 0.0 GCC-C-execute-20050121-1 0.012 0.0275 FAIL FAIL GCC-C-execute-20050124-1 0.0106 0.0136 0.0208 0.0 GCC-C-execute-20050125-1 0.0467 0.041 FAIL FAIL GCC-C-execute-20050131-1 0.0342 0.0434 0.2617 FAIL GCC-C-execute-20050203-1 0.0312 0.039 FAIL FAIL GCC-C-execute-20050215-1 0.0058 0.0139 FAIL FAIL GCC-C-execute-20050218-1 0.0155 0.0206 FAIL FAIL GCC-C-execute-20050224-1 0.0074 0.0237 FAIL FAIL GCC-C-execute-20050316-1 0.0158 0.021 FAIL FAIL GCC-C-execute-20050316-2 0.0227 0.0103 FAIL FAIL GCC-C-execute-20050316-3 0.0081 0.0176 FAIL FAIL GCC-C-execute-20050410-1 0.0118 0.0217 0.0255 0.0 GCC-C-execute-20050502-1 0.0299 0.0242 FAIL FAIL GCC-C-execute-20050502-2 0.0202 0.0153 FAIL FAIL GCC-C-execute-20050604-1 0.0168 FAIL FAIL FAIL GCC-C-execute-20050607-1 0.0142 0.0232 FAIL FAIL GCC-C-execute-20050613-1 0.0173 0.0153 FAIL FAIL GCC-C-execute-20050713-1 0.015 0.0142 FAIL FAIL GCC-C-execute-20050826-1 0.0345 0.0171 0.0249 FAIL GCC-C-execute-20050826-2 0.0277 0.0147 FAIL FAIL GCC-C-execute-20050929-1 0.0212 0.0156 FAIL FAIL GCC-C-execute-20051012-1 0.0217 0.0105 0.0164 0.0 GCC-C-execute-20051021-1 0.0191 0.0238 0.0254 FAIL GCC-C-execute-20051104-1 0.0213 0.0214 FAIL FAIL GCC-C-execute-20051110-1 0.0297 0.0245 FAIL FAIL GCC-C-execute-20051110-2 0.0215 0.0154 FAIL FAIL GCC-C-execute-20051113-1 0.0258 0.0173 0.0408 0.0 GCC-C-execute-20051215-1 0.0245 0.0149 FAIL FAIL GCC-C-execute-20060102-1 0.0175 0.0151 0.0312 0.0 GCC-C-execute-20060110-1 0.027 0.006 0.0233 0.0 GCC-C-execute-20060110-2 0.0244 0.0169 0.0203 0.0 GCC-C-execute-20060127-1 0.0182 0.0174 0.0207 0.0 GCC-C-execute-20060412-1 0.0224 0.0087 FAIL FAIL GCC-C-execute-20060420-1 0.0231 FAIL FAIL FAIL GCC-C-execute-20060905-1 0.0259 0.0185 0.016 0.0 GCC-C-execute-20060910-1 0.0115 0.0146 FAIL FAIL GCC-C-execute-20060929-1 0.0178 0.0169 FAIL FAIL GCC-C-execute-20060930-1 0.0178 0.0168 FAIL FAIL GCC-C-execute-20060930-2 0.0197 0.0185 0.0279 FAIL GCC-C-execute-20061031-1 0.0148 0.0181 FAIL FAIL GCC-C-execute-20061101-1 0.0282 0.0226 0.0321 0.0 GCC-C-execute-20061101-2 0.0187 0.022 0.0226 0.0 GCC-C-execute-20070201-1 0.0214 0.014 FAIL FAIL GCC-C-execute-20070212-1 0.0125 0.0044 0.0216 0.0 GCC-C-execute-20070212-2 0.0167 0.019 0.0252 0.0 GCC-C-execute-20070212-3 0.0196 0.0216 0.0204 0.0 GCC-C-execute-20070424-1 0.0267 0.0197 FAIL FAIL GCC-C-execute-20070517-1 0.014 0.0242 FAIL FAIL GCC-C-execute-20070614-1 0.0144 0.0131 FAIL FAIL GCC-C-execute-20070623-1 0.0213 0.033 0.0358 0.0 GCC-C-execute-20070724-1 0.017 0.0129 FAIL FAIL GCC-C-execute-20070824-1 0.0124 0.0092 FAIL FAIL GCC-C-execute-20071011-1 0.0229 0.0223 0.0286 0.0 GCC-C-execute-20071018-1 0.0263 0.0132 0.0245 FAIL GCC-C-execute-20071029-1 0.0264 0.0202 FAIL FAIL GCC-C-execute-20071030-1 0.02 0.0142 FAIL FAIL GCC-C-execute-20071108-1 0.0219 0.0151 FAIL FAIL GCC-C-execute-20071120-1 0.0222 0.0167 FAIL FAIL GCC-C-execute-20071202-1 0.0318 0.0227 FAIL FAIL GCC-C-execute-20071205-1 0.0187 0.0202 0.0223 0.0 GCC-C-execute-20071210-1 0.0242 0.0114 FAIL FAIL GCC-C-execute-20071211-1 0.0232 0.008 FAIL FAIL GCC-C-execute-20071213-1 0.0307 0.0121 FAIL FAIL GCC-C-execute-20071216-1 0.02 0.006 0.0209 FAIL GCC-C-execute-20071219-1 0.019 0.0252 0.0368 FAIL GCC-C-execute-20071220-1 0.0254 0.0184 FAIL FAIL GCC-C-execute-20071220-2 0.0127 0.0263 FAIL FAIL GCC-C-execute-20080117-1 0.0127 0.0173 FAIL FAIL GCC-C-execute-20080122-1 0.0128 0.021 FAIL FAIL GCC-C-execute-20080222-1 0.0157 0.0173 0.0236 0.0 GCC-C-execute-20080408-1 0.0097 0.0171 0.0206 0.0 GCC-C-execute-20080424-1 0.0139 0.0185 0.0168 FAIL GCC-C-execute-20080502-1 0.0148 0.0226 FAIL FAIL GCC-C-execute-20080506-1 0.0162 0.014 0.0169 0.0 GCC-C-execute-20080506-2 0.0162 0.0238 0.0268 0.0 GCC-C-execute-20080519-1 0.0167 0.0165 FAIL FAIL GCC-C-execute-20080522-1 0.0104 0.016 0.0275 0.0 GCC-C-execute-20080529-1 0.0121 0.0175 0.0223 0.0 GCC-C-execute-20080604-1 0.0162 0.0139 FAIL FAIL GCC-C-execute-20080719-1 0.0094 0.0204 FAIL FAIL GCC-C-execute-20080813-1 0.0163 0.0098 0.0151 0.0 GCC-C-execute-20081103-1 0.0166 0.017 FAIL FAIL GCC-C-execute-20081112-1 0.0249 0.0149 0.0193 0.0 GCC-C-execute-20081117-1 0.0149 0.0132 FAIL FAIL GCC-C-execute-20081218-1 0.0164 0.0235 0.0145 FAIL GCC-C-execute-20090113-1 0.008 0.0136 FAIL FAIL GCC-C-execute-20090113-2 0.0199 0.0213 FAIL FAIL GCC-C-execute-20090113-3 0.0132 0.0197 FAIL FAIL GCC-C-execute-20090207-1 0.0305 0.0185 0.0199 0.0 GCC-C-execute-20090527-1 0.0104 0.0176 FAIL FAIL GCC-C-execute-20090623-1 0.0194 0.0114 FAIL FAIL GCC-C-execute-20090711-1 0.0236 0.0125 0.0217 0.0 GCC-C-execute-20090814-1 0.0184 0.0231 0.0253 FAIL GCC-C-execute-20091229-1 0.017 0.0106 0.0207 0.0 GCC-C-execute-20100209-1 0.0131 0.0111 0.0204 0.0 GCC-C-execute-20100316-1 0.0188 0.0174 0.0202 FAIL GCC-C-execute-20100416-1 0.0232 0.0229 0.0272 0.0 GCC-C-execute-20100430-1 0.0177 0.0131 0.0272 0.0 GCC-C-execute-20100708-1 0.017 0.0131 0.0191 0.0 GCC-C-execute-20100805-1 0.0134 0.0211 0.032 0.0 GCC-C-execute-20100827-1 0.019 0.0233 FAIL FAIL GCC-C-execute-20101013-1 0.0216 0.0187 0.0152 0.0 GCC-C-execute-20101025-1 0.0207 0.0203 0.0138 0.0 GCC-C-execute-20110418-1 0.0161 0.0179 0.0215 0.0 GCC-C-execute-20111208-1 0.0254 0.0117 FAIL FAIL GCC-C-execute-20111212-1 0.01 0.0151 0.0251 FAIL GCC-C-execute-20111227-1 0.0146 0.0198 0.0272 0.0 GCC-C-execute-20120105-1 0.0125 0.0142 FAIL FAIL GCC-C-execute-20120111-1 0.0379 0.0283 0.2123 FAIL GCC-C-execute-20120207-1 0.0133 0.011 FAIL FAIL GCC-C-execute-20120427-1 0.024 0.0142 0.0208 0.0 GCC-C-execute-20120427-2 0.0222 0.0219 0.021 0.0 GCC-C-execute-20120615-1 0.0208 0.0166 0.0303 0.0 GCC-C-execute-20120808-1 0.0157 0.0237 FAIL FAIL GCC-C-execute-20120817-1 0.0135 0.015 0.0114 0.0 GCC-C-execute-20120919-1 0.0305 0.0172 0.0215 0.0 GCC-C-execute-20121108-1 0.0234 0.0341 FAIL FAIL GCC-C-execute-20131127-1 0.0171 0.0256 FAIL FAIL GCC-C-execute-20140212-1 0.0121 0.0213 FAIL FAIL GCC-C-execute-20140212-2 0.02 0.017 0.0185 0.0 GCC-C-execute-20140326-1 0.0105 0.0163 0.0096 0.0 GCC-C-execute-20140425-1 0.016 0.016 0.0268 0.0 GCC-C-execute-20140622-1 0.0124 0.0305 0.0357 FAIL GCC-C-execute-20140828-1 0.0169 0.0268 FAIL FAIL GCC-C-execute-20141022-1 0.0144 0.0194 0.0303 0.0 GCC-C-execute-20141107-1 0.0236 0.008 0.0222 FAIL GCC-C-execute-20141125-1 0.008 0.0256 0.0381 FAIL GCC-C-execute-20150611-1 0.018 0.0125 0.0271 FAIL GCC-C-execute-20170111-1 0.0213 0.0192 0.0314 0.0 GCC-C-execute-20170401-1 0.0131 0.0196 FAIL FAIL GCC-C-execute-20170401-2 0.0233 0.0212 0.0202 0.0 GCC-C-execute-20170419-1 0.0062 0.0164 0.0152 0.0 GCC-C-execute-20171008-1 0.0201 0.0167 FAIL FAIL GCC-C-execute-20180112-1 0.0158 0.0152 0.0382 0.0 GCC-C-execute-20180131-1 0.0136 0.0238 FAIL FAIL GCC-C-execute-20180226-1 0.0178 0.0129 FAIL FAIL GCC-C-execute-20180921-1 0.0282 0.0228 FAIL FAIL GCC-C-execute-20181120-1 0.0211 0.0135 0.0139 FAIL GCC-C-execute-20190228-1 0.0211 0.0207 0.0212 0.0 GCC-C-execute-20190820-1 0.0274 0.0284 FAIL FAIL GCC-C-execute-900409-1 0.0259 0.0128 FAIL FAIL GCC-C-execute-920202-1 0.0138 0.0167 FAIL FAIL GCC-C-execute-920302-1 0.0192 0.0272 FAIL FAIL GCC-C-execute-920409-1 0.0203 0.0098 0.0242 0.0 GCC-C-execute-920410-1 0.0218 0.0083 0.0191 0.0 GCC-C-execute-920411-1 0.0206 0.013 0.0246 0.0 GCC-C-execute-920428-1 0.0133 0.0158 FAIL FAIL GCC-C-execute-920429-1 0.0218 0.0154 FAIL FAIL GCC-C-execute-920501-1 0.0127 0.0171 FAIL FAIL GCC-C-execute-920501-2 0.0236 0.016 FAIL FAIL GCC-C-execute-920501-3 0.0169 0.0175 FAIL FAIL GCC-C-execute-920501-4 0.0166 0.0135 FAIL FAIL GCC-C-execute-920501-5 0.0105 0.0131 FAIL FAIL GCC-C-execute-920501-6 0.0259 0.0331 FAIL FAIL GCC-C-execute-920501-8 0.0266 0.0288 FAIL FAIL GCC-C-execute-920501-9 0.0245 0.04 FAIL FAIL GCC-C-execute-920506-1 0.0215 0.0168 FAIL FAIL GCC-C-execute-920520-1 0.0168 0.0208 FAIL FAIL GCC-C-execute-920603-1 0.0204 0.0285 FAIL FAIL GCC-C-execute-920604-1 0.0138 0.0174 0.0204 0.0 GCC-C-execute-920612-1 0.0153 0.0098 0.0209 0.0 GCC-C-execute-920618-1 0.0077 0.0185 0.023 0.0 GCC-C-execute-920625-1 0.0251 0.0217 FAIL FAIL GCC-C-execute-920710-1 0.017 0.022 0.0255 0.0 GCC-C-execute-920711-1 0.0231 0.0206 0.0138 0.0 GCC-C-execute-920721-1 0.0297 0.0185 0.0269 0.0 GCC-C-execute-920721-2 0.0111 0.0182 FAIL FAIL GCC-C-execute-920721-3 0.0244 0.0225 FAIL FAIL GCC-C-execute-920726-1 0.0236 0.0244 FAIL FAIL GCC-C-execute-920728-1 0.0149 0.0165 FAIL FAIL GCC-C-execute-920730-1 0.0315 0.0143 0.0283 0.0 GCC-C-execute-920731-1 0.0125 0.0076 FAIL FAIL GCC-C-execute-920810-1 0.0445 0.0548 FAIL FAIL GCC-C-execute-920812-1 0.0221 0.0163 FAIL FAIL GCC-C-execute-920829-1 0.017 0.0192 0.0276 0.0 GCC-C-execute-920908-1 0.0208 0.0236 FAIL FAIL GCC-C-execute-920908-2 0.0168 0.0078 FAIL FAIL GCC-C-execute-920909-1 0.0125 0.0167 FAIL FAIL GCC-C-execute-920922-1 0.0136 0.01 FAIL FAIL GCC-C-execute-920929-1 0.0201 0.0169 FAIL FAIL GCC-C-execute-921006-1 0.014 0.0214 FAIL FAIL GCC-C-execute-921007-1 0.0174 0.0304 0.0171 FAIL GCC-C-execute-921013-1 0.0094 0.0152 FAIL FAIL GCC-C-execute-921016-1 0.0139 0.0132 0.0211 FAIL GCC-C-execute-921019-1 0.0233 0.0252 FAIL FAIL GCC-C-execute-921019-2 0.0178 0.0076 0.0202 0.0 GCC-C-execute-921029-1 0.0164 0.0152 FAIL FAIL GCC-C-execute-921104-1 0.0196 0.0288 0.0197 0.0 GCC-C-execute-921110-1 0.0169 0.021 FAIL FAIL GCC-C-execute-921112-1 0.0212 0.0164 FAIL FAIL GCC-C-execute-921113-1 0.0258 0.0168 FAIL FAIL GCC-C-execute-921117-1 0.0131 0.0099 0.0211 FAIL GCC-C-execute-921123-1 0.0097 0.0276 0.0131 0.0 GCC-C-execute-921123-2 0.0214 0.0196 0.0265 0.0 GCC-C-execute-921124-1 0.0139 0.0187 FAIL FAIL GCC-C-execute-921202-2 0.0143 0.0234 FAIL FAIL GCC-C-execute-921204-1 0.0171 0.0181 FAIL FAIL GCC-C-execute-921207-1 0.021 0.0156 0.0285 0.0 GCC-C-execute-921208-1 0.0127 0.0201 FAIL FAIL GCC-C-execute-921208-2 0.0201 0.0137 FAIL FAIL GCC-C-execute-921218-1 0.0245 0.021 0.014 0.0 GCC-C-execute-921218-2 0.0168 0.0122 0.021 0.0 GCC-C-execute-930106-1 0.015 0.0162 0.016 0.0 GCC-C-execute-930111-1 0.0059 0.0253 FAIL FAIL GCC-C-execute-930123-1 0.0136 0.0136 FAIL FAIL GCC-C-execute-930126-1 0.0098 0.0169 FAIL FAIL GCC-C-execute-930208-1 0.0175 0.0096 FAIL FAIL GCC-C-execute-930406-1 0.022 0.0215 FAIL FAIL GCC-C-execute-930408-1 0.0199 0.0165 FAIL FAIL GCC-C-execute-930429-1 0.0091 0.0167 FAIL FAIL GCC-C-execute-930429-2 0.0179 0.0153 0.0169 0.0 GCC-C-execute-930513-1 0.0252 0.0269 FAIL FAIL GCC-C-execute-930513-2 0.0255 0.0163 FAIL FAIL GCC-C-execute-930518-1 0.0093 0.0175 FAIL FAIL GCC-C-execute-930527-1 0.0157 0.0093 0.0135 0.0 GCC-C-execute-930529-1 0.0269 0.0155 0.0294 0.0 GCC-C-execute-930603-1 0.01 0.021 FAIL FAIL GCC-C-execute-930603-2 0.0176 0.0126 FAIL FAIL GCC-C-execute-930603-3 0.0096 0.0182 FAIL FAIL GCC-C-execute-930608-1 0.0185 0.0129 FAIL FAIL GCC-C-execute-930614-1 0.0078 0.0157 FAIL FAIL GCC-C-execute-930614-2 0.0233 0.0205 0.0295 0.0 GCC-C-execute-930621-1 0.0236 0.0165 0.0156 0.0 GCC-C-execute-930622-1 0.0206 0.033 FAIL FAIL GCC-C-execute-930622-2 0.0163 0.0174 FAIL FAIL GCC-C-execute-930628-1 0.0209 0.0198 FAIL FAIL GCC-C-execute-930630-1 0.0134 0.0114 FAIL FAIL GCC-C-execute-930702-1 0.0128 0.0247 FAIL FAIL GCC-C-execute-930713-1 0.0173 0.0269 FAIL FAIL GCC-C-execute-930718-1 0.0138 0.012 0.0338 0.0 GCC-C-execute-930719-1 0.0171 0.0075 FAIL FAIL GCC-C-execute-930725-1 0.0225 0.0159 FAIL FAIL GCC-C-execute-930818-1 0.0194 0.0154 0.0249 0.0 GCC-C-execute-930916-1 0.014 0.0205 FAIL FAIL GCC-C-execute-930921-1 0.0155 0.025 0.0245 0.0 GCC-C-execute-930929-1 0.0166 0.0242 0.0195 0.0 GCC-C-execute-930930-1 0.009 0.0138 FAIL FAIL GCC-C-execute-930930-2 0.0174 0.0157 0.0167 0.0 GCC-C-execute-931004-1 0.0202 0.0202 FAIL FAIL GCC-C-execute-931004-10 0.0132 0.0238 FAIL FAIL GCC-C-execute-931004-11 0.027 0.0173 FAIL FAIL GCC-C-execute-931004-12 0.0284 0.0247 FAIL FAIL GCC-C-execute-931004-13 0.031 0.0206 FAIL FAIL GCC-C-execute-931004-14 0.0102 0.0209 FAIL FAIL GCC-C-execute-931004-2 0.0143 0.0169 FAIL FAIL GCC-C-execute-931004-3 0.0077 0.0168 FAIL FAIL GCC-C-execute-931004-4 0.0167 0.0181 FAIL FAIL GCC-C-execute-931004-5 0.0225 0.0248 FAIL FAIL GCC-C-execute-931004-6 0.0163 0.0205 FAIL FAIL GCC-C-execute-931004-7 0.021 0.016 FAIL FAIL GCC-C-execute-931004-8 0.018 0.0153 FAIL FAIL GCC-C-execute-931004-9 0.0134 0.0136 FAIL FAIL GCC-C-execute-931005-1 0.0154 0.0129 FAIL FAIL GCC-C-execute-931009-1 0.0168 0.0182 FAIL FAIL GCC-C-execute-931012-1 0.0181 0.0084 FAIL FAIL GCC-C-execute-931017-1 0.014 0.0144 FAIL FAIL GCC-C-execute-931018-1 0.0139 0.0133 FAIL FAIL GCC-C-execute-931031-1 0.0116 0.0136 0.0236 0.0 GCC-C-execute-931102-1 0.0196 0.0156 FAIL FAIL GCC-C-execute-931102-2 0.0221 0.0183 FAIL FAIL GCC-C-execute-931110-1 0.0214 0.0163 0.0199 0.0 GCC-C-execute-931110-2 0.0139 0.0182 FAIL FAIL GCC-C-execute-931208-1 0.0272 0.0233 0.0186 0.0 GCC-C-execute-931228-1 0.0074 0.0268 0.0134 0.0 GCC-C-execute-940115-1 0.0097 0.0158 0.0254 0.0 GCC-C-execute-940122-1 0.0264 0.0157 FAIL FAIL GCC-C-execute-941014-1 0.0191 0.0202 FAIL FAIL GCC-C-execute-941014-2 0.0432 0.039 0.3078 FAIL GCC-C-execute-941015-1 0.0241 0.012 FAIL FAIL GCC-C-execute-941021-1 0.0185 0.0235 FAIL FAIL GCC-C-execute-941025-1 0.0123 0.0161 0.0259 0.0 GCC-C-execute-941031-1 0.0276 0.0114 0.0186 0.0 GCC-C-execute-941101-1 0.0204 0.0204 0.0133 0.0 GCC-C-execute-941110-1 0.0246 0.0186 0.0216 0.0 GCC-C-execute-941202-1 0.0241 0.0199 FAIL FAIL GCC-C-execute-950221-1 0.0206 0.0164 FAIL FAIL GCC-C-execute-950322-1 0.0225 0.0157 0.0191 0.0 GCC-C-execute-950426-1 0.0188 0.0132 FAIL FAIL GCC-C-execute-950426-2 0.0137 0.021 0.022 0.0 GCC-C-execute-950503-1 0.0199 0.01 0.0287 0.0 GCC-C-execute-950511-1 0.0236 0.0099 0.032 0.0 GCC-C-execute-950512-1 0.015 0.0204 0.0319 0.0 GCC-C-execute-950605-1 0.0172 0.0255 FAIL FAIL GCC-C-execute-950607-1 0.0208 0.0136 0.0276 0.0 GCC-C-execute-950607-2 0.0225 0.0129 FAIL FAIL GCC-C-execute-950612-1 0.0196 0.0221 0.0361 0.0 GCC-C-execute-950621-1 0.0208 0.0216 FAIL FAIL GCC-C-execute-950628-1 0.0296 0.0151 FAIL FAIL GCC-C-execute-950704-1 0.0118 0.0244 0.0282 FAIL GCC-C-execute-950706-1 0.0207 0.018 0.019 0.0 GCC-C-execute-950710-1 0.014 0.0217 FAIL FAIL GCC-C-execute-950714-1 0.0251 0.0128 FAIL FAIL GCC-C-execute-950809-1 0.0193 0.0114 FAIL FAIL GCC-C-execute-950906-1 0.0131 0.0205 FAIL FAIL GCC-C-execute-950915-1 0.0242 0.0198 0.0196 0.0 GCC-C-execute-950929-1 0.0207 0.0276 FAIL FAIL GCC-C-execute-951003-1 0.0261 0.0224 0.0106 0.0 GCC-C-execute-951115-1 0.0211 0.0245 FAIL FAIL GCC-C-execute-951204-1 0.0083 0.023 FAIL FAIL GCC-C-execute-960116-1 0.0179 0.0239 0.0236 0.0 GCC-C-execute-960117-1 0.0259 0.0181 FAIL FAIL GCC-C-execute-960209-1 0.0176 0.0134 FAIL FAIL GCC-C-execute-960215-1 0.0175 0.0114 0.0221 0.0 GCC-C-execute-960218-1 0.0211 0.0197 FAIL FAIL GCC-C-execute-960219-1 0.0213 0.0283 FAIL FAIL GCC-C-execute-960301-1 0.0162 0.0202 0.0352 0.0 GCC-C-execute-960302-1 0.0172 0.0229 FAIL FAIL GCC-C-execute-960311-1 0.0353 0.0315 FAIL FAIL GCC-C-execute-960311-2 0.0283 0.0324 FAIL FAIL GCC-C-execute-960311-3 0.0434 0.0291 FAIL FAIL GCC-C-execute-960312-1 0.0257 0.0215 FAIL FAIL GCC-C-execute-960317-1 0.0238 0.0286 FAIL FAIL GCC-C-execute-960321-1 0.0173 0.0207 FAIL FAIL GCC-C-execute-960326-1 0.0194 0.0171 FAIL FAIL GCC-C-execute-960327-1 0.012 0.018 FAIL FAIL GCC-C-execute-960402-1 0.0155 0.0135 0.0111 0.0 GCC-C-execute-960405-1 0.0327 0.0378 0.0267 0.0 GCC-C-execute-960416-1 0.01 0.029 FAIL FAIL GCC-C-execute-960419-1 0.0181 0.0143 0.016 0.0 GCC-C-execute-960419-2 0.0125 0.0177 0.0249 FAIL GCC-C-execute-960512-1 0.029 0.0118 FAIL FAIL GCC-C-execute-960513-1 0.0087 0.0216 FAIL FAIL GCC-C-execute-960521-1 0.0299 0.0455 FAIL FAIL GCC-C-execute-960608-1 0.0222 0.0198 FAIL FAIL GCC-C-execute-960801-1 0.0102 0.0137 0.019 0.0 GCC-C-execute-960802-1 0.0222 0.0221 0.017 FAIL GCC-C-execute-960830-1 0.0138 0.0177 0.023 0.0 GCC-C-execute-960909-1 0.0162 0.0201 FAIL FAIL GCC-C-execute-961004-1 0.0135 0.0203 0.0195 0.0 GCC-C-execute-961017-1 0.0218 0.0288 0.0147 0.0 GCC-C-execute-961017-2 0.0154 0.0175 0.0194 0.0 GCC-C-execute-961026-1 0.0169 0.021 0.0243 0.0 GCC-C-execute-961112-1 0.018 0.0116 0.0316 0.0 GCC-C-execute-961122-1 0.0166 0.0204 FAIL FAIL GCC-C-execute-961122-2 0.0274 0.0138 FAIL FAIL GCC-C-execute-961125-1 0.0167 0.0084 FAIL FAIL GCC-C-execute-961206-1 0.0136 0.0204 FAIL FAIL GCC-C-execute-961213-1 0.0158 0.0266 0.0272 FAIL GCC-C-execute-970214-1 0.0129 0.0236 0.0198 0.0 GCC-C-execute-970214-2 0.0112 0.0097 0.0204 0.0 GCC-C-execute-970217-1 0.0255 0.0211 0.0157 FAIL GCC-C-execute-970923-1 0.0224 0.0224 FAIL FAIL GCC-C-execute-980205 0.0137 0.0108 FAIL FAIL GCC-C-execute-980223 0.0209 0.0229 FAIL FAIL GCC-C-execute-980424-1 0.0166 0.0077 0.0246 FAIL GCC-C-execute-980505-1 0.0173 0.0198 0.0236 0.0 GCC-C-execute-980505-2 0.0126 0.0162 0.0162 0.0 GCC-C-execute-980506-1 0.0214 0.0292 FAIL FAIL GCC-C-execute-980506-2 0.0192 0.0207 0.0219 0.0 GCC-C-execute-980506-3 0.0151 0.0083 0.0211 0.0 GCC-C-execute-980526-1 0.0195 0.0225 FAIL FAIL GCC-C-execute-980526-2 0.0238 0.0169 0.0216 0.0 GCC-C-execute-980526-3 0.0123 0.0232 FAIL FAIL GCC-C-execute-980602-1 0.0197 0.0203 0.0236 0.0 GCC-C-execute-980602-2 0.0241 0.0222 0.0239 FAIL GCC-C-execute-980604-1 0.0214 0.0165 FAIL FAIL GCC-C-execute-980605-1 0.0264 0.0378 0.1011 FAIL GCC-C-execute-980612-1 0.0255 0.0186 FAIL FAIL GCC-C-execute-980617-1 0.0195 0.0166 0.0217 0.0 GCC-C-execute-980618-1 0.0221 0.0118 0.0275 0.0 GCC-C-execute-980701-1 0.0211 0.0169 FAIL FAIL GCC-C-execute-980707-1 0.0365 0.0268 FAIL FAIL GCC-C-execute-980709-1 0.0492 0.0404 0.1202 0.0 GCC-C-execute-980716-1 0.0137 0.0114 FAIL FAIL GCC-C-execute-980929-1 0.0171 0.019 0.0131 0.0 GCC-C-execute-981001-1 0.0236 0.0112 FAIL FAIL GCC-C-execute-981019-1 0.0125 0.0231 FAIL FAIL GCC-C-execute-981130-1 0.0098 0.0228 0.0097 0.0 GCC-C-execute-981206-1 0.0126 0.0164 0.0237 FAIL GCC-C-execute-990106-1 0.0179 0.0272 FAIL FAIL GCC-C-execute-990106-2 0.0215 0.0136 FAIL FAIL GCC-C-execute-990117-1 0.0216 0.0203 0.0251 0.0 GCC-C-execute-990127-1 0.023 0.0145 FAIL FAIL GCC-C-execute-990127-2 0.0091 0.0265 0.0329 0.0 GCC-C-execute-990128-1 0.026 0.0203 FAIL FAIL GCC-C-execute-990130-1 0.0036 0.0114 FAIL FAIL GCC-C-execute-990211-1 0.0136 0.0215 0.0334 0.0 GCC-C-execute-990222-1 0.0234 0.0172 FAIL FAIL GCC-C-execute-990324-1 0.0184 0.024 0.021 0.0 GCC-C-execute-990326-1 0.0391 0.0373 0.0943 0.0 GCC-C-execute-990404-1 0.0093 0.0149 FAIL FAIL GCC-C-execute-990413-2 0.0217 0.0264 FAIL FAIL GCC-C-execute-990513-1 0.0268 0.0284 FAIL FAIL GCC-C-execute-990524-1 0.0228 0.0216 FAIL FAIL GCC-C-execute-990525-1 0.0123 0.0132 0.018 0.0 GCC-C-execute-990525-2 0.0099 0.0213 FAIL FAIL GCC-C-execute-990527-1 0.0185 0.0138 0.03 0.0 GCC-C-execute-990531-1 0.0185 0.0133 0.0176 0.0 GCC-C-execute-990604-1 0.0127 0.0158 0.0322 0.0 GCC-C-execute-990628-1 0.0289 0.0456 FAIL FAIL GCC-C-execute-990804-1 0.0231 0.0224 0.0328 0.0 GCC-C-execute-990811-1 0.0188 0.0204 FAIL FAIL GCC-C-execute-990826-0 0.0635 0.0493 0.1801 FAIL GCC-C-execute-990827-1 0.0229 0.0153 0.0227 0.0 GCC-C-execute-990829-1 0.0117 0.0159 0.0225 0.0 GCC-C-execute-990923-1 0.0235 0.0209 0.032 0.0 GCC-C-execute-991016-1 0.0204 0.0131 FAIL FAIL GCC-C-execute-991019-1 0.0252 0.027 0.0203 0.0 GCC-C-execute-991023-1 0.012 0.0182 0.0252 0.0 GCC-C-execute-991030-1 0.0165 0.0172 0.0179 0.0 GCC-C-execute-991112-1 0.0216 0.0175 FAIL FAIL GCC-C-execute-991118-1 0.0197 0.0202 FAIL FAIL GCC-C-execute-991201-1 0.0172 0.0188 0.0258 0.0 GCC-C-execute-991202-1 0.0194 0.0203 0.0134 0.0 GCC-C-execute-991202-2 0.0163 0.018 0.0177 0.0 GCC-C-execute-991202-3 0.0186 0.0243 0.0203 0.0 GCC-C-execute-991216-1 0.0183 0.0169 FAIL FAIL GCC-C-execute-991216-2 0.0213 0.0194 FAIL FAIL GCC-C-execute-991216-4 0.0165 0.0241 0.0272 0.0 GCC-C-execute-991221-1 0.0179 0.0257 0.0244 0.0 GCC-C-execute-991227-1 0.0116 0.0241 FAIL FAIL GCC-C-execute-991228-1 0.0171 0.008 FAIL FAIL GCC-C-execute-alias-2 0.0106 0.0183 0.0238 0.0 GCC-C-execute-alias-3 0.015 0.0241 FAIL FAIL GCC-C-execute-alias-4 0.0088 0.0131 FAIL FAIL GCC-C-execute-alias-access-path-1 0.0118 0.0125 0.0201 0.0 GCC-C-execute-align-1 0.0242 0.0204 0.0254 0.0 GCC-C-execute-align-2 0.0149 0.0178 0.0408 0.0 GCC-C-execute-align-3 0.01 0.014 FAIL FAIL GCC-C-execute-alloca-1 0.0153 0.0206 FAIL FAIL GCC-C-execute-anon-1 0.0217 0.014 0.013 0.0 GCC-C-execute-arith-1 0.0071 0.021 0.0209 0.0 GCC-C-execute-arith-rand 0.029 0.0272 FAIL FAIL GCC-C-execute-arith-rand-ll 0.0178 0.0338 FAIL FAIL GCC-C-execute-ashldi-1 0.0166 0.0168 FAIL FAIL GCC-C-execute-ashrdi-1 0.0314 0.0206 FAIL FAIL GCC-C-execute-bf-layout-1 0.0227 0.0275 0.0256 0.0 GCC-C-execute-bf-pack-1 0.0138 0.0091 FAIL FAIL GCC-C-execute-bf-sign-1 0.0149 0.014 0.0374 FAIL GCC-C-execute-bf-sign-2 0.0182 0.0217 0.0372 FAIL GCC-C-execute-bf64-1 0.0182 0.0108 FAIL FAIL GCC-C-execute-bitfld-1 0.0239 0.0129 FAIL FAIL GCC-C-execute-bitfld-2 0.0326 0.0095 0.0181 0.0 GCC-C-execute-bitfld-4 0.0155 0.015 0.033 0.0 GCC-C-execute-bitfld-6 0.0305 0.0128 0.0237 0.0 GCC-C-execute-bitfld-7 0.0042 0.0163 0.01 0.0 GCC-C-execute-bswap-1 0.0152 0.0137 0.0224 FAIL GCC-C-execute-bswap-2 0.0247 0.0168 FAIL FAIL GCC-C-execute-built-in-setjmp 0.0056 0.0115 0.0267 FAIL GCC-C-execute-builtin-bitops-1 0.0241 0.0399 FAIL FAIL GCC-C-execute-builtin-constant 0.02 0.022 0.0276 FAIL GCC-C-execute-builtin-prefetch-1 0.0268 0.0248 0.0308 FAIL GCC-C-execute-builtin-prefetch-2 0.0221 0.0263 FAIL FAIL GCC-C-execute-builtin-prefetch-3 0.0216 0.0231 FAIL FAIL GCC-C-execute-builtin-prefetch-4 0.0252 0.0221 FAIL FAIL GCC-C-execute-builtin-prefetch-5 0.0091 0.0196 FAIL FAIL GCC-C-execute-builtin-prefetch-6 0.0244 0.0242 0.0397 FAIL GCC-C-execute-builtin-types-compatible-p 0.0153 FAIL FAIL FAIL GCC-C-execute-call-trap-1 0.0249 0.0246 FAIL FAIL GCC-C-execute-cbrt 0.0168 0.0095 0.0402 0.0 GCC-C-execute-cmpdi-1 0.0202 0.0288 FAIL FAIL GCC-C-execute-cmpsf-1 0.0269 0.0292 FAIL FAIL GCC-C-execute-cmpsi-1 0.008 0.0175 FAIL FAIL GCC-C-execute-cmpsi-2 0.0166 0.0178 FAIL FAIL GCC-C-execute-comp-goto-1 0.0388 0.0369 FAIL FAIL GCC-C-execute-compare-1 0.0176 0.0145 FAIL FAIL GCC-C-execute-compare-2 0.0164 0.0213 0.0245 0.0 GCC-C-execute-compare-3 0.0118 0.0225 0.0323 0.0 GCC-C-execute-complex-1 0.0163 0.0132 FAIL FAIL GCC-C-execute-complex-2 0.0128 0.0231 FAIL FAIL GCC-C-execute-complex-3 0.0154 0.0168 0.0195 0.0 GCC-C-execute-complex-4 0.0217 0.0185 FAIL FAIL GCC-C-execute-complex-5 0.0239 0.0094 FAIL FAIL GCC-C-execute-complex-6 0.0436 0.0396 FAIL FAIL GCC-C-execute-complex-7 0.0217 0.0124 FAIL FAIL GCC-C-execute-compndlit-1 0.018 0.0187 FAIL FAIL GCC-C-execute-const-addr-expr-1 0.0489 0.0375 FAIL FAIL GCC-C-execute-conversion 0.0331 0.0301 FAIL FAIL GCC-C-execute-cvt-1 0.0193 0.017 0.0195 0.0 GCC-C-execute-dbra-1 0.0145 0.018 0.0313 0.0 GCC-C-execute-divcmp-1 0.0243 0.0176 0.0534 0.0 GCC-C-execute-divcmp-2 0.0194 0.014 0.0373 0.0 GCC-C-execute-divcmp-3 0.0156 0.0125 0.0337 0.0 GCC-C-execute-divcmp-4 0.0215 0.0225 0.0469 0.0 GCC-C-execute-divcmp-5 0.0328 0.026 FAIL FAIL GCC-C-execute-divconst-1 0.0121 0.0161 FAIL FAIL GCC-C-execute-divconst-2 0.0197 0.0278 0.0331 0.0 GCC-C-execute-divconst-3 0.0163 0.0184 0.0135 0.0 GCC-C-execute-divmod-1 0.0324 0.0172 0.0314 0.0 GCC-C-execute-doloop-1 0.0169 0.0168 0.0121 0.0 GCC-C-execute-doloop-2 0.0158 0.0155 0.0162 0.0 GCC-C-execute-enum-1 0.0167 0.0192 FAIL FAIL GCC-C-execute-enum-2 0.0179 0.022 0.0149 0.0 GCC-C-execute-enum-3 0.032 0.0298 0.0753 FAIL GCC-C-execute-extzvsi 0.0131 0.0074 0.0166 0.0 GCC-C-execute-ffs-1 0.0204 0.019 0.017 FAIL GCC-C-execute-ffs-2 0.0138 0.0221 0.0214 FAIL GCC-C-execute-float-floor 0.0076 0.017 0.0225 0.0 GCC-C-execute-floatunsisf-1 0.015 0.0124 0.0232 0.0 GCC-C-execute-fprintf-1 0.0338 0.041 FAIL FAIL GCC-C-execute-fprintf-2 0.0451 0.0544 FAIL FAIL GCC-C-execute-func-ptr-1 0.0164 0.0104 FAIL FAIL GCC-C-execute-gofast 0.0315 0.0338 FAIL FAIL GCC-C-execute-ieee-20000320-1 0.016 0.0206 0.0292 0.0 GCC-C-execute-ieee-20001122-1 0.0229 0.0224 0.0125 0.0 GCC-C-execute-ieee-20010114-2 0.0216 0.0132 0.0165 FAIL GCC-C-execute-ieee-20010226-1 0.0148 0.0251 0.026 FAIL GCC-C-execute-ieee-20011123-1 0.018 0.0196 0.0316 0.0 GCC-C-execute-ieee-20030331-1 0.0172 0.0205 0.0127 FAIL GCC-C-execute-ieee-20041213-1 0.0155 0.0079 0.0287 FAIL GCC-C-execute-ieee-920518-1 0.0158 0.0021 0.0178 0.0 GCC-C-execute-ieee-920810-1 0.0287 0.0331 0.0724 FAIL GCC-C-execute-ieee-930529-1 0.0146 0.0167 FAIL FAIL GCC-C-execute-ieee-980619-1 0.0217 0.0134 FAIL FAIL GCC-C-execute-ieee-acc1 0.0077 0.0215 FAIL FAIL GCC-C-execute-ieee-acc2 0.0141 0.0232 FAIL FAIL GCC-C-execute-ieee-builtin-nan-1 0.0125 0.0183 FAIL FAIL GCC-C-execute-ieee-compare-fp-1 0.0209 0.0207 FAIL FAIL GCC-C-execute-ieee-compare-fp-2 0.0164 0.0238 0.0178 0.0 GCC-C-execute-ieee-compare-fp-3 0.0272 0.0257 FAIL FAIL GCC-C-execute-ieee-compare-fp-4 0.0272 0.027 FAIL FAIL GCC-C-execute-ieee-copysign1 0.0439 0.0546 FAIL FAIL GCC-C-execute-ieee-copysign2 0.0546 0.045 FAIL FAIL GCC-C-execute-ieee-fp-cmp-1 FAIL FAIL FAIL FAIL GCC-C-execute-ieee-fp-cmp-2 FAIL FAIL FAIL FAIL GCC-C-execute-ieee-fp-cmp-3 FAIL FAIL FAIL FAIL GCC-C-execute-ieee-fp-cmp-4 0.0166 0.0143 0.038 FAIL GCC-C-execute-ieee-fp-cmp-4e 0.0164 0.0206 0.0189 0.0 GCC-C-execute-ieee-fp-cmp-4f 0.0274 0.0232 0.0346 FAIL GCC-C-execute-ieee-fp-cmp-4l 0.0244 0.016 FAIL FAIL GCC-C-execute-ieee-fp-cmp-5 0.0323 0.0195 FAIL FAIL GCC-C-execute-ieee-fp-cmp-6 0.0211 0.0204 FAIL FAIL GCC-C-execute-ieee-fp-cmp-8 0.0203 0.0283 FAIL FAIL GCC-C-execute-ieee-fp-cmp-8e 0.0131 0.0177 0.0168 0.0 GCC-C-execute-ieee-fp-cmp-8f 0.0245 0.0236 FAIL FAIL GCC-C-execute-ieee-fp-cmp-8l 0.0224 0.0266 FAIL FAIL GCC-C-execute-ieee-hugeval 0.0421 0.0524 0.1248 FAIL GCC-C-execute-ieee-inf-1 0.0175 0.0152 FAIL FAIL GCC-C-execute-ieee-inf-2 0.0313 0.0176 FAIL FAIL GCC-C-execute-ieee-inf-3 0.0201 0.0179 FAIL FAIL GCC-C-execute-ieee-minuszero 0.0244 0.0093 0.0256 0.0 GCC-C-execute-ieee-mul-subnormal-single-1 0.0279 0.0129 0.026 0.0 GCC-C-execute-ieee-mzero2 0.0318 0.0167 0.0292 FAIL GCC-C-execute-ieee-mzero3 0.029 0.0254 0.0271 0.0 GCC-C-execute-ieee-mzero4 0.0205 0.0166 0.0299 0.0 GCC-C-execute-ieee-mzero5 0.0225 0.0293 FAIL FAIL GCC-C-execute-ieee-mzero6 0.0257 0.0161 FAIL FAIL GCC-C-execute-ieee-pr28634 0.0169 0.0095 0.0203 FAIL GCC-C-execute-ieee-pr29302-1 0.0193 0.021 0.0257 0.0 GCC-C-execute-ieee-pr30704 0.0207 0.0228 0.0368 0.0 GCC-C-execute-ieee-pr36332 0.0244 0.0242 FAIL FAIL GCC-C-execute-ieee-pr38016 0.0276 0.0264 FAIL FAIL GCC-C-execute-ieee-pr50310 0.0238 0.0255 FAIL FAIL GCC-C-execute-ieee-pr67218 0.0245 0.0129 0.0124 0.0 GCC-C-execute-ieee-pr72824 0.0253 0.0162 0.02 FAIL GCC-C-execute-ieee-pr72824-2 0.0237 0.0162 FAIL FAIL GCC-C-execute-ieee-pr84235 0.0191 0.014 0.0251 FAIL GCC-C-execute-ieee-rbug 0.0256 0.016 0.0246 0.0 GCC-C-execute-ieee-unsafe-fp-assoc 0.0191 0.0176 0.0219 0.0 GCC-C-execute-ieee-unsafe-fp-assoc-1 0.0126 0.0131 0.0255 FAIL GCC-C-execute-ifcvt-onecmpl-abs-1 0.0256 0.0099 0.0271 0.0 GCC-C-execute-index-1 0.0207 0.0246 0.0175 0.0 GCC-C-execute-inst-check 0.0203 0.0258 0.0249 0.0 GCC-C-execute-int-compare 0.0193 0.0336 FAIL FAIL GCC-C-execute-ipa-sra-1 0.0182 0.017 0.0207 0.0 GCC-C-execute-ipa-sra-2 0.0135 0.0263 0.0186 0.0 GCC-C-execute-longlong 0.0256 0.0121 0.0369 0.0 GCC-C-execute-loop-1 0.0178 0.0279 0.0181 0.0 GCC-C-execute-loop-10 0.0122 0.0173 0.0225 FAIL GCC-C-execute-loop-11 0.017 0.0252 0.023 0.0 GCC-C-execute-loop-12 0.0245 0.0199 FAIL FAIL GCC-C-execute-loop-13 0.0168 0.0229 FAIL FAIL GCC-C-execute-loop-14 0.0225 0.0152 0.0312 0.0 GCC-C-execute-loop-15 0.0296 0.0342 FAIL FAIL GCC-C-execute-loop-2 0.0196 0.0266 FAIL FAIL GCC-C-execute-loop-2b 0.0196 0.0107 FAIL FAIL GCC-C-execute-loop-2d 0.0035 0.0151 FAIL FAIL GCC-C-execute-loop-2e 0.0148 0.0222 FAIL FAIL GCC-C-execute-loop-2f 0.0263 0.0272 FAIL FAIL GCC-C-execute-loop-2g 0.0133 0.0344 FAIL FAIL GCC-C-execute-loop-3 0.0104 0.023 FAIL FAIL GCC-C-execute-loop-3b 0.0145 0.0283 FAIL FAIL GCC-C-execute-loop-3c 0.0175 0.0197 FAIL FAIL GCC-C-execute-loop-4 0.0209 0.0179 0.0279 0.0 GCC-C-execute-loop-4b 0.015 0.0272 0.0274 0.0 GCC-C-execute-loop-5 0.0155 0.0211 0.0248 0.0 GCC-C-execute-loop-6 0.0162 0.0173 0.0217 0.0 GCC-C-execute-loop-7 0.0187 0.0267 0.0248 0.0 GCC-C-execute-loop-8 0.0157 0.0207 FAIL FAIL GCC-C-execute-loop-9 0.0141 0.0191 0.0224 0.0 GCC-C-execute-loop-ivopts-1 0.0153 0.0055 0.028 0.0 GCC-C-execute-loop-ivopts-2 0.0189 0.0156 0.0221 0.0 GCC-C-execute-lshrdi-1 0.0315 0.03 FAIL FAIL GCC-C-execute-lto-tbaa-1 0.0167 0.0221 FAIL FAIL GCC-C-execute-mayalias-1 0.0098 0.0228 0.0293 0.0 GCC-C-execute-mayalias-2 0.0212 0.0173 0.0316 0.0 GCC-C-execute-mayalias-3 0.0247 0.0273 FAIL FAIL GCC-C-execute-memchr-1 0.0336 0.0401 FAIL FAIL GCC-C-execute-memcpy-1 0.0347 0.0229 FAIL FAIL GCC-C-execute-memcpy-2 0.0125 0.0292 FAIL FAIL GCC-C-execute-memcpy-bi 0.0339 0.0508 0.1191 FAIL GCC-C-execute-memset-1 0.0259 0.0177 FAIL FAIL GCC-C-execute-memset-2 0.0291 0.0256 FAIL FAIL GCC-C-execute-memset-3 0.0176 0.0246 FAIL FAIL GCC-C-execute-memset-4 0.0209 0.0206 0.02 FAIL GCC-C-execute-mod-1 0.0284 0.0178 FAIL FAIL GCC-C-execute-mode-dependent-address 0.0399 0.046 0.3279 FAIL GCC-C-execute-multdi-1 0.0158 0.0133 0.0286 0.0 GCC-C-execute-multi-ix 0.018 0.0251 FAIL FAIL GCC-C-execute-nestfunc-4 0.0201 0.0205 FAIL FAIL GCC-C-execute-packed-1 0.0139 0.0126 FAIL FAIL GCC-C-execute-packed-2 0.0178 0.0216 0.0202 0.0 GCC-C-execute-pending-4 0.0194 0.0131 0.0206 0.0 GCC-C-execute-postmod-1 0.0101 0.0165 FAIL FAIL GCC-C-execute-pr15262 0.0058 0.0218 0.0333 0.0 GCC-C-execute-pr15262-1 0.0255 0.0165 0.026 0.0 GCC-C-execute-pr15262-2 0.0169 0.0172 FAIL FAIL GCC-C-execute-pr15296 0.0156 0.0173 FAIL FAIL GCC-C-execute-pr16790-1 0.0248 0.0169 0.0264 0.0 GCC-C-execute-pr17078-1 0.0137 0.0245 FAIL FAIL GCC-C-execute-pr17133 0.0226 0.0253 FAIL FAIL GCC-C-execute-pr17252 0.0201 0.0172 0.0239 FAIL GCC-C-execute-pr17377 0.0225 0.0154 FAIL FAIL GCC-C-execute-pr19005 0.0144 0.0207 FAIL FAIL GCC-C-execute-pr19449 0.0176 FAIL FAIL FAIL GCC-C-execute-pr19515 0.0176 0.0145 FAIL FAIL GCC-C-execute-pr19606 0.0155 0.0233 0.0234 0.0 GCC-C-execute-pr19689 0.0184 0.0124 0.0203 0.0 GCC-C-execute-pr20100-1 0.0187 0.0251 FAIL FAIL GCC-C-execute-pr20187-1 0.0084 0.0158 0.0129 0.0 GCC-C-execute-pr20466-1 0.0034 0.0203 FAIL FAIL GCC-C-execute-pr20527-1 0.017 0.0227 FAIL FAIL GCC-C-execute-pr20601-1 0.0266 0.0194 FAIL FAIL GCC-C-execute-pr20621-1 0.013 0.0078 0.0131 0.0 GCC-C-execute-pr21173 0.0141 0.0135 FAIL FAIL GCC-C-execute-pr21331 0.0185 0.0132 0.0244 0.0 GCC-C-execute-pr21964-1 0.0226 0.0286 0.0295 0.0 GCC-C-execute-pr22061-1 0.0166 0.0178 FAIL FAIL GCC-C-execute-pr22061-2 0.0153 0.0173 FAIL FAIL GCC-C-execute-pr22098-1 0.021 0.0173 FAIL FAIL GCC-C-execute-pr22098-2 0.0227 0.0204 FAIL FAIL GCC-C-execute-pr22098-3 0.0095 0.0141 FAIL FAIL GCC-C-execute-pr22141-1 0.0237 0.0191 FAIL FAIL GCC-C-execute-pr22141-2 0.0228 0.0248 FAIL FAIL GCC-C-execute-pr22348 0.0278 0.0145 0.0254 0.0 GCC-C-execute-pr22429 0.0154 0.0177 0.0158 0.0 GCC-C-execute-pr22493-1 0.0238 0.0209 0.031 0.0 GCC-C-execute-pr22630 0.0149 0.0214 FAIL FAIL GCC-C-execute-pr23047 0.0246 0.0168 0.0305 0.0 GCC-C-execute-pr23135 0.0272 FAIL FAIL FAIL GCC-C-execute-pr23324 0.014 0.0146 FAIL FAIL GCC-C-execute-pr23467 0.0159 0.0123 0.023 0.0 GCC-C-execute-pr23604 0.02 0.0119 0.0197 0.0 GCC-C-execute-pr23941 0.0151 0.028 0.0168 0.0 GCC-C-execute-pr24141 0.0144 0.013 0.0233 0.0 GCC-C-execute-pr24142 0.0107 0.0171 0.0162 0.0 GCC-C-execute-pr24716 0.0173 0.0131 FAIL FAIL GCC-C-execute-pr24851 0.0248 0.0175 0.0187 0.0 GCC-C-execute-pr25125 0.0164 0.0227 0.0132 0.0 GCC-C-execute-pr25737 0.0136 0.0131 0.026 0.0 GCC-C-execute-pr27073 0.0137 0.0172 FAIL FAIL GCC-C-execute-pr27260 0.0083 0.0179 0.0207 FAIL GCC-C-execute-pr27285 0.017 0.0156 FAIL FAIL GCC-C-execute-pr27364 0.0102 0.0204 0.0297 0.0 GCC-C-execute-pr27671-1 0.0202 0.0176 FAIL FAIL GCC-C-execute-pr28289 0.024 0.0239 FAIL FAIL GCC-C-execute-pr28403 0.0155 0.0197 FAIL FAIL GCC-C-execute-pr28651 0.013 0.0205 0.0346 0.0 GCC-C-execute-pr28778 0.026 0.0177 FAIL FAIL GCC-C-execute-pr28982a 0.0232 0.026 FAIL FAIL GCC-C-execute-pr28982b 0.0245 0.0258 FAIL FAIL GCC-C-execute-pr29006 0.0098 0.0118 0.027 0.0 GCC-C-execute-pr29156 0.0167 0.0187 0.0266 0.0 GCC-C-execute-pr29695-1 0.0166 0.0283 0.0249 0.0 GCC-C-execute-pr29695-2 0.0187 0.0223 0.0278 0.0 GCC-C-execute-pr29797-1 0.0206 0.0202 0.0202 FAIL GCC-C-execute-pr29797-2 0.0153 0.013 0.0277 FAIL GCC-C-execute-pr29798 0.012 0.0113 0.0273 0.0 GCC-C-execute-pr30185 0.0158 0.0215 FAIL FAIL GCC-C-execute-pr30778 0.0204 0.0259 FAIL FAIL GCC-C-execute-pr31072 0.021 0.0168 FAIL FAIL GCC-C-execute-pr31136 0.016 0.0373 0.015 0.0 GCC-C-execute-pr31169 0.0213 0.023 0.026 0.0 GCC-C-execute-pr31448 0.0143 0.0178 0.0205 FAIL GCC-C-execute-pr31448-2 0.024 0.0178 0.028 FAIL GCC-C-execute-pr31605 0.0109 0.0219 0.0277 0.0 GCC-C-execute-pr32500 0.0148 0.0176 0.0226 0.0 GCC-C-execute-pr33142 0.0213 0.0242 0.0293 0.0 GCC-C-execute-pr33382 0.0238 0.0267 FAIL FAIL GCC-C-execute-pr33631 0.0117 0.0094 FAIL FAIL GCC-C-execute-pr33669 0.0195 0.0163 FAIL FAIL GCC-C-execute-pr33779-1 0.0205 0.0195 0.0273 0.0 GCC-C-execute-pr33779-2 0.0158 0.0264 0.02 0.0 GCC-C-execute-pr33870 FAIL FAIL FAIL FAIL GCC-C-execute-pr33870-1 FAIL FAIL FAIL FAIL GCC-C-execute-pr33992 0.024 0.0169 FAIL FAIL GCC-C-execute-pr34070-1 0.0172 0.0128 0.0265 0.0 GCC-C-execute-pr34070-2 0.0191 0.0282 0.0206 0.0 GCC-C-execute-pr34099 0.0156 0.0171 FAIL FAIL GCC-C-execute-pr34099-2 0.0143 0.0204 FAIL FAIL GCC-C-execute-pr34130 0.0147 0.0197 0.0187 FAIL GCC-C-execute-pr34154 0.0171 0.018 FAIL FAIL GCC-C-execute-pr34176 0.0131 0.0115 FAIL FAIL GCC-C-execute-pr34415 0.0176 0.0211 FAIL FAIL GCC-C-execute-pr34456 0.0275 0.0389 FAIL FAIL GCC-C-execute-pr34768-1 0.0204 0.0257 FAIL FAIL GCC-C-execute-pr34768-2 0.0232 0.0133 FAIL FAIL GCC-C-execute-pr34982 0.0194 0.0277 0.0224 0.0 GCC-C-execute-pr35163 0.0231 0.0207 0.0211 0.0 GCC-C-execute-pr35231 0.0145 0.0216 0.0263 0.0 GCC-C-execute-pr35390 0.0204 0.0163 0.0167 0.0 GCC-C-execute-pr35456 0.0078 0.0133 FAIL FAIL GCC-C-execute-pr35472 0.0155 0.0227 0.0301 FAIL GCC-C-execute-pr35800 0.0178 0.0279 FAIL FAIL GCC-C-execute-pr36034-1 0.0163 0.0172 0.0352 0.0 GCC-C-execute-pr36034-2 0.0209 0.021 0.0426 0.0 GCC-C-execute-pr36038 0.0214 0.0222 FAIL FAIL GCC-C-execute-pr36077 0.0229 0.0195 0.0208 0.0 GCC-C-execute-pr36321 0.0137 0.0206 FAIL FAIL GCC-C-execute-pr36339 0.0137 0.0163 FAIL FAIL GCC-C-execute-pr36343 0.0209 0.0275 0.0282 0.0 GCC-C-execute-pr36691 0.0202 0.0208 FAIL FAIL GCC-C-execute-pr36765 0.0245 0.0215 0.0198 FAIL GCC-C-execute-pr37102 0.0297 0.0157 0.0273 FAIL GCC-C-execute-pr37125 0.0154 0.0227 0.0276 0.0 GCC-C-execute-pr37573 0.0161 0.0184 FAIL FAIL GCC-C-execute-pr37780 0.0215 0.0135 FAIL FAIL GCC-C-execute-pr37882 0.0133 0.02 0.0242 0.0 GCC-C-execute-pr37924 0.0092 0.0167 0.0314 0.0 GCC-C-execute-pr37931 0.0131 0.0212 0.0301 0.0 GCC-C-execute-pr38048-1 0.0242 0.0127 0.0149 0.0 GCC-C-execute-pr38048-2 0.018 0.0196 0.0192 0.0 GCC-C-execute-pr38051 0.0242 0.0241 FAIL FAIL GCC-C-execute-pr38151 0.0212 0.0165 FAIL FAIL GCC-C-execute-pr38236 0.0161 0.0208 0.022 0.0 GCC-C-execute-pr38422 0.0156 0.0103 0.0135 0.0 GCC-C-execute-pr38533 0.0321 0.0377 FAIL FAIL GCC-C-execute-pr38819 0.0234 0.0162 0.0197 0.0 GCC-C-execute-pr38969 0.0195 0.0222 FAIL FAIL GCC-C-execute-pr39100 0.0209 0.0098 FAIL FAIL GCC-C-execute-pr39120 0.0081 0.0095 FAIL FAIL GCC-C-execute-pr39233 0.0137 0.0202 0.0154 0.0 GCC-C-execute-pr39240 0.0151 0.0158 0.0374 0.0 GCC-C-execute-pr39339 0.0247 0.0201 0.0425 FAIL GCC-C-execute-pr39501 0.0189 0.0255 FAIL FAIL GCC-C-execute-pr40022 0.0096 0.0208 FAIL FAIL GCC-C-execute-pr40057 0.0133 0.0103 0.0185 0.0 GCC-C-execute-pr40386 0.022 0.0279 0.0748 FAIL GCC-C-execute-pr40404 0.0175 0.0185 0.0304 FAIL GCC-C-execute-pr40493 0.0039 0.0126 0.0308 FAIL GCC-C-execute-pr40579 0.0112 0.0198 0.0218 0.0 GCC-C-execute-pr40657 0.0137 0.012 FAIL FAIL GCC-C-execute-pr40668 0.0203 0.0165 FAIL FAIL GCC-C-execute-pr40747 0.0077 0.0231 0.0298 0.0 GCC-C-execute-pr41239 0.0207 0.029 FAIL FAIL GCC-C-execute-pr41317 0.0185 0.029 0.0309 0.0 GCC-C-execute-pr41395-1 0.0094 0.0178 0.0193 0.0 GCC-C-execute-pr41395-2 0.0204 0.0109 0.0221 0.0 GCC-C-execute-pr41463 0.0346 0.0241 0.2066 FAIL GCC-C-execute-pr41750 0.0206 0.0206 FAIL FAIL GCC-C-execute-pr41917 0.0148 0.0207 0.0191 0.0 GCC-C-execute-pr41919 0.0138 0.023 FAIL FAIL GCC-C-execute-pr42006 0.0193 0.0127 0.034 0.0 GCC-C-execute-pr42142 0.0209 0.0115 0.0177 0.0 GCC-C-execute-pr42154 0.0174 0.029 0.0134 0.0 GCC-C-execute-pr42231 0.0214 0.0173 FAIL FAIL GCC-C-execute-pr42248 0.0195 0.0236 FAIL FAIL GCC-C-execute-pr42269-2 0.0174 0.013 0.019 0.0 GCC-C-execute-pr42512 0.0295 0.0151 FAIL FAIL GCC-C-execute-pr42544 0.0096 0.023 0.0268 0.0 GCC-C-execute-pr42570 0.0291 0.0174 0.0238 FAIL GCC-C-execute-pr42614 0.0095 0.0119 0.026 0.0 GCC-C-execute-pr42691 0.0141 0.0263 FAIL FAIL GCC-C-execute-pr42721 0.0194 0.0152 FAIL FAIL GCC-C-execute-pr42833 0.0265 0.018 FAIL FAIL GCC-C-execute-pr43008 0.0242 0.0206 0.0209 FAIL GCC-C-execute-pr43220 0.0167 0.0211 FAIL FAIL GCC-C-execute-pr43236 0.0124 0.012 FAIL FAIL GCC-C-execute-pr43269 0.0154 0.008 FAIL FAIL GCC-C-execute-pr43385 0.0179 0.0264 FAIL FAIL GCC-C-execute-pr43438 0.0131 0.025 FAIL FAIL GCC-C-execute-pr43560 0.0154 0.0257 FAIL FAIL GCC-C-execute-pr43629 0.0156 0.0089 0.0283 FAIL GCC-C-execute-pr43784 0.0173 0.0152 FAIL FAIL GCC-C-execute-pr43835 0.0262 0.0176 FAIL FAIL GCC-C-execute-pr43987 0.0185 0.0185 0.0232 FAIL GCC-C-execute-pr44164 0.0202 0.0135 FAIL FAIL GCC-C-execute-pr44202-1 0.0135 0.0277 FAIL FAIL GCC-C-execute-pr44468 0.0143 0.0269 FAIL FAIL GCC-C-execute-pr44555 0.0182 0.0144 FAIL FAIL GCC-C-execute-pr44575 0.0297 0.0059 FAIL FAIL GCC-C-execute-pr44683 0.0212 0.0102 FAIL FAIL GCC-C-execute-pr44828 0.0152 0.0232 0.0116 0.0 GCC-C-execute-pr44852 0.0021 0.0144 FAIL FAIL GCC-C-execute-pr44858 0.0077 0.0267 0.0176 0.0 GCC-C-execute-pr44942 0.0176 0.0179 FAIL FAIL GCC-C-execute-pr45034 0.0151 0.0173 FAIL FAIL GCC-C-execute-pr45070 0.0125 0.0083 FAIL FAIL GCC-C-execute-pr45262 0.024 0.0301 0.0353 0.0 GCC-C-execute-pr45695 0.0095 0.02 FAIL FAIL GCC-C-execute-pr46019 0.0252 0.0244 0.0362 0.0 GCC-C-execute-pr46309 0.024 0.016 FAIL FAIL GCC-C-execute-pr46316 0.0223 0.017 0.018 0.0 GCC-C-execute-pr46909-1 0.0174 0.0195 FAIL FAIL GCC-C-execute-pr46909-2 0.0155 0.0313 FAIL FAIL GCC-C-execute-pr47148 0.022 0.0202 FAIL FAIL GCC-C-execute-pr47155 0.0218 0.0196 0.0253 0.0 GCC-C-execute-pr47299 0.0204 0.0213 0.0235 0.0 GCC-C-execute-pr47337 0.0204 0.0267 FAIL FAIL GCC-C-execute-pr47538 0.0171 0.026 FAIL FAIL GCC-C-execute-pr47925 0.0173 0.0169 FAIL FAIL GCC-C-execute-pr48197 0.0101 0.0207 0.0282 0.0 GCC-C-execute-pr48571-1 0.0162 0.021 FAIL FAIL GCC-C-execute-pr48717 0.0205 0.0298 0.0214 FAIL GCC-C-execute-pr48809 0.0206 0.0256 FAIL FAIL GCC-C-execute-pr48814-1 0.0251 0.0143 0.0222 FAIL GCC-C-execute-pr48814-2 0.0213 0.0236 0.0241 FAIL GCC-C-execute-pr48973-1 0.0178 0.0209 0.0169 FAIL GCC-C-execute-pr48973-2 0.0149 0.0171 0.0134 0.0 GCC-C-execute-pr49039 0.0259 0.0162 0.0184 0.0 GCC-C-execute-pr49073 0.0215 0.0168 0.0121 0.0 GCC-C-execute-pr49123 0.0208 0.0237 0.0069 0.0 GCC-C-execute-pr49161 0.0125 0.0137 FAIL FAIL GCC-C-execute-pr49186 0.0206 0.0263 0.0229 0.0 GCC-C-execute-pr49218 0.0213 0.0254 FAIL FAIL GCC-C-execute-pr49279 0.0177 0.0194 FAIL FAIL GCC-C-execute-pr49281 0.0167 0.0243 FAIL FAIL GCC-C-execute-pr49390 0.0203 0.0225 FAIL FAIL GCC-C-execute-pr49419 0.0208 0.0201 FAIL FAIL GCC-C-execute-pr49644 0.0179 0.0096 FAIL FAIL GCC-C-execute-pr49712 0.0159 0.0167 0.0176 0.0 GCC-C-execute-pr49768 0.0144 0.0213 0.0296 0.0 GCC-C-execute-pr49886 0.0316 0.0282 FAIL FAIL GCC-C-execute-pr50865 0.0201 0.0278 0.0232 0.0 GCC-C-execute-pr51023 0.0198 0.0102 0.0197 0.0 GCC-C-execute-pr51323 0.0269 0.0117 FAIL FAIL GCC-C-execute-pr51466 0.0114 0.0134 FAIL FAIL GCC-C-execute-pr51581-1 0.0257 0.0262 FAIL FAIL GCC-C-execute-pr51581-2 0.0109 0.025 FAIL FAIL GCC-C-execute-pr51877 0.0138 0.0207 FAIL FAIL GCC-C-execute-pr51933 0.0131 0.0181 FAIL FAIL GCC-C-execute-pr52129 0.0257 0.0037 FAIL FAIL GCC-C-execute-pr52209 0.0148 0.0095 0.0203 0.0 GCC-C-execute-pr52286 0.0106 0.0275 FAIL FAIL GCC-C-execute-pr52760 0.0227 0.0134 FAIL FAIL GCC-C-execute-pr52979-1 0.0245 0.0132 FAIL FAIL GCC-C-execute-pr52979-2 0.0138 0.0122 FAIL FAIL GCC-C-execute-pr53084 0.0258 0.0215 FAIL FAIL GCC-C-execute-pr53160 0.0057 0.0321 0.0388 FAIL GCC-C-execute-pr53465 0.0144 0.0053 0.0239 0.0 GCC-C-execute-pr53645 FAIL FAIL FAIL FAIL GCC-C-execute-pr53645-2 FAIL FAIL FAIL FAIL GCC-C-execute-pr53688 0.019 0.0168 FAIL FAIL GCC-C-execute-pr54471 0.0135 0.0176 FAIL FAIL GCC-C-execute-pr54937 0.0176 0.0186 FAIL FAIL GCC-C-execute-pr54985 0.0231 0.0213 FAIL FAIL GCC-C-execute-pr55137 0.0296 0.0203 0.0314 0.0 GCC-C-execute-pr55750 0.0229 0.0212 FAIL FAIL GCC-C-execute-pr55875 0.0204 0.025 FAIL FAIL GCC-C-execute-pr56051 0.0144 0.0221 0.0244 0.0 GCC-C-execute-pr56205 0.0228 0.022 FAIL FAIL GCC-C-execute-pr56250 0.0223 0.0123 0.015 0.0 GCC-C-execute-pr56799 0.0288 0.0261 FAIL FAIL GCC-C-execute-pr56837 0.0215 0.0192 FAIL FAIL GCC-C-execute-pr56866 0.0172 0.0081 FAIL FAIL GCC-C-execute-pr56899 0.0076 0.0218 0.0229 FAIL GCC-C-execute-pr56962 0.0153 0.0178 0.0278 0.0 GCC-C-execute-pr56982 0.0282 0.0208 FAIL FAIL GCC-C-execute-pr57124 0.014 0.0145 0.0352 0.0 GCC-C-execute-pr57130 0.0165 0.019 FAIL FAIL GCC-C-execute-pr57131 0.0204 0.021 0.0228 0.0 GCC-C-execute-pr57144 0.0102 0.0171 0.0155 0.0 GCC-C-execute-pr57281 0.0075 0.0175 0.0164 0.0 GCC-C-execute-pr57321 0.0078 0.0262 0.0207 0.0 GCC-C-execute-pr57344-1 0.0175 0.015 FAIL FAIL GCC-C-execute-pr57344-2 0.0039 0.0037 FAIL FAIL GCC-C-execute-pr57344-3 0.0231 0.0194 FAIL FAIL GCC-C-execute-pr57344-4 0.0211 0.0203 FAIL FAIL GCC-C-execute-pr57568 0.0138 0.0092 FAIL FAIL GCC-C-execute-pr57829 0.0133 0.0 FAIL FAIL GCC-C-execute-pr57860 0.0274 0.0131 FAIL FAIL GCC-C-execute-pr57861 0.0272 0.0117 0.0258 FAIL GCC-C-execute-pr57875 0.0212 0.0157 FAIL FAIL GCC-C-execute-pr57876 0.0268 0.0199 0.0224 0.0 GCC-C-execute-pr57877 0.0172 0.01 0.0289 FAIL GCC-C-execute-pr58209 0.0167 0.0139 FAIL FAIL GCC-C-execute-pr58277-1 0.0284 0.0239 FAIL FAIL GCC-C-execute-pr58277-2 0.0299 0.0226 FAIL FAIL GCC-C-execute-pr58364 0.0188 0.0126 0.0236 FAIL GCC-C-execute-pr58365 0.0137 0.0255 FAIL FAIL GCC-C-execute-pr58385 0.0196 0.0255 FAIL FAIL GCC-C-execute-pr58387 0.0282 0.0271 0.0228 0.0 GCC-C-execute-pr58419 0.0172 0.0111 FAIL FAIL GCC-C-execute-pr58431 0.0217 0.0248 FAIL FAIL GCC-C-execute-pr58564 0.016 0.0245 FAIL FAIL GCC-C-execute-pr58570 0.023 0.0122 0.0183 0.0 GCC-C-execute-pr58574 0.038 0.0327 FAIL FAIL GCC-C-execute-pr58640 0.0082 0.0236 0.0266 0.0 GCC-C-execute-pr58640-2 0.0082 0.0228 0.0189 FAIL GCC-C-execute-pr58662 0.0192 0.0195 FAIL FAIL GCC-C-execute-pr58726 0.02 0.0263 0.033 0.0 GCC-C-execute-pr58831 0.0264 0.015 0.0367 FAIL GCC-C-execute-pr58943 0.0221 0.0128 0.0239 FAIL GCC-C-execute-pr58984 0.0223 0.0206 FAIL FAIL GCC-C-execute-pr59014 0.0163 0.0187 FAIL FAIL GCC-C-execute-pr59014-2 0.004 0.0205 0.0227 0.0 GCC-C-execute-pr59101 0.0098 0.0179 0.0278 0.0 GCC-C-execute-pr59221 0.015 0.0191 0.0233 FAIL GCC-C-execute-pr59229 0.0249 0.0177 0.0249 FAIL GCC-C-execute-pr59358 0.026 0.0285 0.0274 FAIL GCC-C-execute-pr59387 0.0179 0.0117 FAIL FAIL GCC-C-execute-pr59388 0.0205 0.016 0.0147 FAIL GCC-C-execute-pr59413 0.0167 0.0132 0.0184 FAIL GCC-C-execute-pr59643 0.0178 0.015 0.0206 FAIL GCC-C-execute-pr59747 0.0203 0.0189 0.0246 0.0 GCC-C-execute-pr60017 0.0138 0.0209 FAIL FAIL GCC-C-execute-pr60062 0.0269 0.0193 0.026 FAIL GCC-C-execute-pr60072 0.0131 0.0157 0.02 FAIL GCC-C-execute-pr60454 0.0133 0.0199 0.0387 0.0 GCC-C-execute-pr60822 0.0148 0.007 0.013 FAIL GCC-C-execute-pr60960 0.0269 FAIL FAIL FAIL GCC-C-execute-pr61306-1 0.0219 0.0182 0.0295 0.0 GCC-C-execute-pr61306-2 0.022 0.0127 0.0238 0.0 GCC-C-execute-pr61306-3 0.0129 0.0248 0.0209 0.0 GCC-C-execute-pr61375 0.0188 0.0216 FAIL FAIL GCC-C-execute-pr61517 0.017 0.0246 0.0173 0.0 GCC-C-execute-pr61673 0.0252 0.0104 FAIL FAIL GCC-C-execute-pr61682 0.0175 0.025 0.0041 0.0 GCC-C-execute-pr61725 0.0149 0.0219 0.028 FAIL GCC-C-execute-pr62151 0.0208 0.0253 FAIL FAIL GCC-C-execute-pr63209 0.0093 0.017 0.025 0.0 GCC-C-execute-pr63302 0.0169 0.0154 FAIL FAIL GCC-C-execute-pr63641 0.0142 0.0225 FAIL FAIL GCC-C-execute-pr63659 0.0148 0.0177 0.0269 FAIL GCC-C-execute-pr63843 0.0149 FAIL FAIL FAIL GCC-C-execute-pr64006 0.0175 0.0253 0.0363 FAIL GCC-C-execute-pr64255 0.0181 0.0099 0.0251 FAIL GCC-C-execute-pr64260 0.0255 0.0163 0.0235 FAIL GCC-C-execute-pr64682 0.0204 0.0199 0.0269 FAIL GCC-C-execute-pr64718 0.0165 0.0154 0.0176 0.0 GCC-C-execute-pr64756 0.0165 0.0234 0.0284 0.0 GCC-C-execute-pr64957 0.0181 0.0195 0.0309 0.0 GCC-C-execute-pr64979 0.0144 0.0196 FAIL FAIL GCC-C-execute-pr65053-1 0.0166 0.0158 FAIL FAIL GCC-C-execute-pr65053-2 0.008 0.0201 FAIL FAIL GCC-C-execute-pr65170 0.0156 0.0144 FAIL FAIL GCC-C-execute-pr65215-1 0.0177 0.0217 FAIL FAIL GCC-C-execute-pr65215-2 0.006 0.0095 FAIL FAIL GCC-C-execute-pr65215-3 0.0138 0.0234 FAIL FAIL GCC-C-execute-pr65215-4 0.0243 0.0213 FAIL FAIL GCC-C-execute-pr65215-5 0.0244 0.0255 0.0179 0.0 GCC-C-execute-pr65216 0.0128 0.0168 0.0237 FAIL GCC-C-execute-pr65369 0.0094 0.0256 FAIL FAIL GCC-C-execute-pr65401 0.0084 0.028 0.0316 FAIL GCC-C-execute-pr65418-1 0.0165 0.006 FAIL FAIL GCC-C-execute-pr65418-2 0.0126 0.0149 FAIL FAIL GCC-C-execute-pr65427 0.013 0.0171 FAIL FAIL GCC-C-execute-pr65648 0.0166 0.0099 FAIL FAIL GCC-C-execute-pr65956 0.0127 0.0151 FAIL FAIL GCC-C-execute-pr66187 0.017 0.0166 0.032 FAIL GCC-C-execute-pr66233 0.0244 0.0177 0.0236 0.0 GCC-C-execute-pr66556 0.0198 0.0159 0.0285 FAIL GCC-C-execute-pr66757 0.0106 0.0239 0.0206 0.0 GCC-C-execute-pr66940 0.0167 0.0134 0.0136 0.0 GCC-C-execute-pr67037 0.0193 0.0172 FAIL FAIL GCC-C-execute-pr67226 0.0154 0.0117 0.0259 FAIL GCC-C-execute-pr67714 0.0205 0.0313 0.0259 FAIL GCC-C-execute-pr67781 0.019 0.014 0.034 0.0 GCC-C-execute-pr67929_1 0.01 0.0164 0.029 0.0 GCC-C-execute-pr68143_1 0.016 0.0128 0.0279 FAIL GCC-C-execute-pr68185 0.0091 0.0242 0.017 FAIL GCC-C-execute-pr68249 0.0135 0.0229 FAIL FAIL GCC-C-execute-pr68250 0.0247 0.0094 FAIL FAIL GCC-C-execute-pr68321 0.0167 0.0213 FAIL FAIL GCC-C-execute-pr68328 0.0177 0.0109 FAIL FAIL GCC-C-execute-pr68376-1 0.0129 0.0212 0.0239 0.0 GCC-C-execute-pr68376-2 0.0213 0.0154 FAIL FAIL GCC-C-execute-pr68381 0.014 0.022 0.0164 FAIL GCC-C-execute-pr68390 0.0157 0.0265 FAIL FAIL GCC-C-execute-pr68506 0.0162 0.0239 FAIL FAIL GCC-C-execute-pr68532 0.0255 0.0138 FAIL FAIL GCC-C-execute-pr68624 0.0178 0.0188 FAIL FAIL GCC-C-execute-pr68648 0.022 0.0254 FAIL FAIL GCC-C-execute-pr68841 0.0214 0.0212 0.0201 FAIL GCC-C-execute-pr68911 0.0131 0.021 FAIL FAIL GCC-C-execute-pr69097-1 0.0091 0.0162 0.0234 0.0 GCC-C-execute-pr69097-2 0.0055 0.0146 FAIL FAIL GCC-C-execute-pr69320-1 0.0273 0.0242 0.2046 FAIL GCC-C-execute-pr69320-2 0.036 0.0422 FAIL FAIL GCC-C-execute-pr69320-3 0.0361 0.0365 0.1766 FAIL GCC-C-execute-pr69320-4 0.0284 0.0427 0.1911 FAIL GCC-C-execute-pr69403 0.0311 0.0226 0.026 0.0 GCC-C-execute-pr69447 0.0226 0.0144 FAIL FAIL GCC-C-execute-pr69691 0.0206 0.0275 FAIL FAIL GCC-C-execute-pr70005 0.0203 0.0225 0.0366 FAIL GCC-C-execute-pr70127 0.0246 0.0201 0.0179 FAIL GCC-C-execute-pr70222-1 0.017 0.019 0.0248 FAIL GCC-C-execute-pr70222-2 0.0195 0.0205 FAIL FAIL GCC-C-execute-pr70429 0.0207 0.021 FAIL FAIL GCC-C-execute-pr70460 0.0215 0.0256 FAIL FAIL GCC-C-execute-pr70566 0.0226 0.016 0.0215 FAIL GCC-C-execute-pr70586 0.0236 0.0213 0.0213 0.0 GCC-C-execute-pr70602 0.0219 0.0145 0.0175 0.0 GCC-C-execute-pr70903 0.0292 0.0203 FAIL FAIL GCC-C-execute-pr71083 0.0229 0.0211 0.028 0.0 GCC-C-execute-pr71335 0.0179 0.0084 0.0208 0.0 GCC-C-execute-pr71550 0.0157 0.02 0.021 FAIL GCC-C-execute-pr71554 0.0214 0.0127 0.0191 FAIL GCC-C-execute-pr71626-1 0.0167 0.0116 FAIL FAIL GCC-C-execute-pr71626-2 0.0198 0.0104 FAIL FAIL GCC-C-execute-pr71631 0.0172 0.0184 FAIL FAIL GCC-C-execute-pr71700 0.0235 0.0097 0.0137 0.0 GCC-C-execute-pr7284-1 0.0254 0.0214 0.0152 0.0 GCC-C-execute-pr77718 0.0215 0.0194 0.0164 FAIL GCC-C-execute-pr77766 0.0139 0.0141 FAIL FAIL GCC-C-execute-pr77767 0.0131 0.02 0.0241 FAIL GCC-C-execute-pr78170 0.0133 0.013 0.0272 FAIL GCC-C-execute-pr78378 0.0128 0.0117 FAIL FAIL GCC-C-execute-pr78436 0.0238 0.014 0.0327 0.0 GCC-C-execute-pr78438 0.0213 0.0135 FAIL FAIL GCC-C-execute-pr78477 0.0022 0.0138 FAIL FAIL GCC-C-execute-pr78559 0.0038 0.0114 FAIL FAIL GCC-C-execute-pr78586 0.0164 0.0149 0.023 FAIL GCC-C-execute-pr78617 0.0178 0.0183 0.0217 0.0 GCC-C-execute-pr78622 0.0114 0.0113 FAIL FAIL GCC-C-execute-pr78675 0.0142 0.0143 0.0202 0.0 GCC-C-execute-pr78720 0.0237 0.0242 FAIL FAIL GCC-C-execute-pr78726 0.0253 0.0218 FAIL FAIL GCC-C-execute-pr78791 0.0197 FAIL 0.0316 0.0 GCC-C-execute-pr78856 0.0094 0.0286 0.0247 FAIL GCC-C-execute-pr79121 0.025 0.0184 0.0294 0.0 GCC-C-execute-pr79286 0.0173 0.0193 0.0294 FAIL GCC-C-execute-pr79327 0.0165 0.0239 0.0165 FAIL GCC-C-execute-pr79354 0.0186 0.0145 FAIL FAIL GCC-C-execute-pr79388 0.0128 0.0151 0.0279 0.0 GCC-C-execute-pr79450 0.018 0.0176 FAIL FAIL GCC-C-execute-pr79737-1 0.0045 0.0241 0.0198 0.0 GCC-C-execute-pr79737-2 0.0135 0.0138 FAIL FAIL GCC-C-execute-pr80153 0.0183 0.0251 FAIL FAIL GCC-C-execute-pr80421 0.0226 0.026 FAIL FAIL GCC-C-execute-pr80501 0.0236 0.0212 0.017 0.0 GCC-C-execute-pr81281 0.0228 0.0245 0.0235 FAIL GCC-C-execute-pr81423 0.0236 0.0142 0.0296 0.0 GCC-C-execute-pr81503 0.0188 0.0137 0.0207 FAIL GCC-C-execute-pr81555 0.0236 0.018 0.0149 FAIL GCC-C-execute-pr81556 0.0201 0.0246 0.0226 FAIL GCC-C-execute-pr81588 0.0142 0.0173 FAIL FAIL GCC-C-execute-pr81913 0.0112 0.0112 0.0195 FAIL GCC-C-execute-pr82192 0.0134 0.0339 0.0116 0.0 GCC-C-execute-pr82387 0.0187 0.019 FAIL FAIL GCC-C-execute-pr82388 0.0192 0.0199 FAIL FAIL GCC-C-execute-pr82524 0.0212 0.0162 FAIL FAIL GCC-C-execute-pr82954 0.0195 0.0239 FAIL FAIL GCC-C-execute-pr83269 0.0139 0.0215 0.021 0.0 GCC-C-execute-pr83298 0.0248 0.024 0.0242 FAIL GCC-C-execute-pr83362 0.0168 0.0167 0.0215 FAIL GCC-C-execute-pr83383 0.0135 0.0092 0.0211 FAIL GCC-C-execute-pr83477 0.0167 0.0211 0.0261 FAIL GCC-C-execute-pr84339 0.0206 0.0133 FAIL FAIL GCC-C-execute-pr84478 0.0501 0.0405 FAIL FAIL GCC-C-execute-pr84521 0.0215 0.0248 FAIL FAIL GCC-C-execute-pr84524 0.0077 0.0169 FAIL FAIL GCC-C-execute-pr84748 0.0145 0.0184 0.0266 0.0 GCC-C-execute-pr85095 0.0102 0.0208 FAIL FAIL GCC-C-execute-pr85156 0.0131 0.0166 FAIL FAIL GCC-C-execute-pr85169 0.0168 0.0188 FAIL FAIL GCC-C-execute-pr85529-1 0.0179 0.0189 FAIL FAIL GCC-C-execute-pr85529-2 0.0167 0.0214 0.0232 FAIL GCC-C-execute-pr85582-1 0.0214 0.0208 FAIL FAIL GCC-C-execute-pr85582-2 0.0195 0.0141 FAIL FAIL GCC-C-execute-pr85582-3 0.0102 0.0131 FAIL FAIL GCC-C-execute-pr85756 0.0132 0.0285 FAIL FAIL GCC-C-execute-pr86231 0.0287 0.017 FAIL FAIL GCC-C-execute-pr86492 0.0137 0.0217 FAIL FAIL GCC-C-execute-pr86528 0.0212 0.017 FAIL FAIL GCC-C-execute-pr86714 0.0146 0.0287 FAIL FAIL GCC-C-execute-pr86844 0.02 0.0253 FAIL FAIL GCC-C-execute-pr87053 0.0281 0.0115 FAIL FAIL GCC-C-execute-pr87290 0.0159 0.0209 0.0252 FAIL GCC-C-execute-pr87623 0.021 0.0123 0.033 0.0 GCC-C-execute-pr88693 0.0201 0.0129 FAIL FAIL GCC-C-execute-pr88714 0.034 0.0218 FAIL FAIL GCC-C-execute-pr88739 0.0228 0.0184 FAIL FAIL GCC-C-execute-pr88904 0.0249 0.0165 FAIL FAIL GCC-C-execute-pr89195 0.0253 0.0178 0.0221 FAIL GCC-C-execute-pr89369 0.0143 0.0164 FAIL FAIL GCC-C-execute-pr89434 0.0113 0.0134 0.0359 FAIL GCC-C-execute-pr89634 0.0136 0.0147 FAIL FAIL GCC-C-execute-pr89826 0.0258 0.0187 0.024 0.0 GCC-C-execute-pr90025 0.0163 0.0179 0.0302 FAIL GCC-C-execute-pr90949 0.0134 0.0242 0.0139 0.0 GCC-C-execute-pr91137 0.0145 0.0261 0.0228 FAIL GCC-C-execute-printf-1 0.0452 0.0292 FAIL FAIL GCC-C-execute-printf-2 0.0517 0.0367 FAIL FAIL GCC-C-execute-pta-field-1 0.0142 0.0158 0.0197 0.0 GCC-C-execute-pta-field-2 0.0211 0.0246 FAIL FAIL GCC-C-execute-ptr-arith-1 0.0151 0.0242 FAIL FAIL GCC-C-execute-pure-1 0.0218 0.0273 FAIL FAIL GCC-C-execute-pushpop_macro 0.0178 0.0076 0.0307 0.0 GCC-C-execute-regstack-1 0.017 0.0218 FAIL FAIL GCC-C-execute-return-addr 0.0315 0.0246 FAIL FAIL GCC-C-execute-scal-to-vec1 FAIL FAIL FAIL FAIL GCC-C-execute-scal-to-vec2 0.0203 FAIL FAIL FAIL GCC-C-execute-scal-to-vec3 0.0354 FAIL FAIL FAIL GCC-C-execute-scope-1 0.0133 0.0134 FAIL FAIL GCC-C-execute-shiftdi 0.0194 0.0145 0.0138 0.0 GCC-C-execute-shiftdi-2 0.017 0.0211 FAIL FAIL GCC-C-execute-shiftopt-1 0.0193 0.0152 0.0209 0.0 GCC-C-execute-simd-1 0.0115 FAIL FAIL FAIL GCC-C-execute-simd-2 0.0244 FAIL FAIL FAIL GCC-C-execute-simd-4 0.0187 0.0334 FAIL FAIL GCC-C-execute-simd-5 0.0223 FAIL FAIL FAIL GCC-C-execute-simd-6 0.0174 FAIL FAIL FAIL GCC-C-execute-ssad-run 0.0192 0.0225 FAIL FAIL GCC-C-execute-stdarg-1 0.0206 0.0183 FAIL FAIL GCC-C-execute-stdarg-2 0.0282 0.0297 FAIL FAIL GCC-C-execute-stdarg-3 0.0318 0.0259 FAIL FAIL GCC-C-execute-stdarg-4 0.0289 0.0215 FAIL FAIL GCC-C-execute-stkalign 0.0188 0.0166 FAIL FAIL GCC-C-execute-strcmp-1 0.0273 0.0367 FAIL FAIL GCC-C-execute-strcpy-1 0.0274 0.024 FAIL FAIL GCC-C-execute-strcpy-2 0.0216 0.0237 FAIL FAIL GCC-C-execute-strct-pack-1 0.0133 0.015 0.0379 0.0 GCC-C-execute-strct-pack-2 0.0244 0.0238 0.0173 0.0 GCC-C-execute-strct-pack-3 0.0211 0.0163 FAIL FAIL GCC-C-execute-strct-pack-4 0.0207 0.0216 0.0274 0.0 GCC-C-execute-strct-stdarg-1 0.0174 0.0294 FAIL FAIL GCC-C-execute-strct-varg-1 0.0112 0.0155 FAIL FAIL GCC-C-execute-string-opt-17 0.0132 0.0175 FAIL FAIL GCC-C-execute-string-opt-18 0.008 0.0216 FAIL FAIL GCC-C-execute-string-opt-5 0.0262 0.0206 FAIL FAIL GCC-C-execute-strlen-1 0.0288 0.0167 FAIL FAIL GCC-C-execute-strlen-2 0.0551 0.0491 FAIL FAIL GCC-C-execute-strlen-3 0.0394 0.0322 FAIL FAIL GCC-C-execute-strlen-4 0.0489 0.0734 FAIL FAIL GCC-C-execute-strlen-5 0.1394 0.1399 FAIL FAIL GCC-C-execute-strlen-6 0.0293 0.0383 FAIL FAIL GCC-C-execute-strlen-7 0.0203 0.0152 FAIL FAIL GCC-C-execute-strncmp-1 0.0318 0.0374 FAIL FAIL GCC-C-execute-struct-aliasing-1 0.0081 0.0214 0.0199 0.0 GCC-C-execute-struct-cpy-1 0.0271 0.0209 FAIL FAIL GCC-C-execute-struct-ini-1 0.0219 0.0213 FAIL FAIL GCC-C-execute-struct-ini-2 0.0138 0.0258 0.0259 FAIL GCC-C-execute-struct-ini-3 0.0223 0.0294 0.0196 0.0 GCC-C-execute-struct-ini-4 0.0166 0.0212 0.0272 0.0 GCC-C-execute-struct-ret-1 0.041 0.0402 FAIL FAIL GCC-C-execute-struct-ret-2 0.0164 0.0205 0.0325 0.0 GCC-C-execute-switch-1 0.0189 0.0186 FAIL FAIL GCC-C-execute-tstdi-1 0.0172 0.021 FAIL FAIL GCC-C-execute-usad-run 0.0172 0.0274 FAIL FAIL GCC-C-execute-user-printf 0.0527 0.0476 FAIL FAIL GCC-C-execute-usmul 0.0196 0.0164 0.0155 0.0 GCC-C-execute-va-arg-1 0.0253 0.0323 FAIL FAIL GCC-C-execute-va-arg-10 0.0302 0.0244 FAIL FAIL GCC-C-execute-va-arg-11 0.018 0.0185 FAIL FAIL GCC-C-execute-va-arg-12 0.0283 0.0164 FAIL FAIL GCC-C-execute-va-arg-13 0.0214 0.0216 FAIL FAIL GCC-C-execute-va-arg-14 0.0191 0.02 FAIL FAIL GCC-C-execute-va-arg-15 0.0131 0.0337 FAIL FAIL GCC-C-execute-va-arg-16 0.0171 0.0133 FAIL FAIL GCC-C-execute-va-arg-17 0.0242 0.0094 FAIL FAIL GCC-C-execute-va-arg-18 0.0187 0.0173 FAIL FAIL GCC-C-execute-va-arg-19 0.0128 0.0167 FAIL FAIL GCC-C-execute-va-arg-2 0.0228 0.0318 FAIL FAIL GCC-C-execute-va-arg-20 0.0194 0.0225 FAIL FAIL GCC-C-execute-va-arg-21 0.0418 0.0516 FAIL FAIL GCC-C-execute-va-arg-22 0.0228 0.0364 FAIL FAIL GCC-C-execute-va-arg-23 0.0202 0.0085 FAIL FAIL GCC-C-execute-va-arg-24 0.0539 0.0513 FAIL FAIL GCC-C-execute-va-arg-26 0.0206 0.0213 FAIL FAIL GCC-C-execute-va-arg-4 0.0204 0.0235 FAIL FAIL GCC-C-execute-va-arg-5 0.0156 0.0089 FAIL FAIL GCC-C-execute-va-arg-6 0.0253 0.0217 FAIL FAIL GCC-C-execute-va-arg-9 0.0171 0.0208 FAIL FAIL GCC-C-execute-va-arg-trap-1 0.0139 0.0117 FAIL FAIL GCC-C-execute-vfprintf-1 0.0545 0.0389 FAIL FAIL GCC-C-execute-vla-dealloc-1 0.0178 0.014 FAIL FAIL GCC-C-execute-vprintf-1 0.0417 0.0463 FAIL FAIL GCC-C-execute-vrp-1 0.0142 0.0153 0.0198 0.0 GCC-C-execute-vrp-2 0.0168 0.0124 0.0236 0.0 GCC-C-execute-vrp-3 0.0174 0.0176 0.0206 0.0 GCC-C-execute-vrp-4 0.0104 0.0187 0.0327 0.0 GCC-C-execute-vrp-5 0.0245 0.025 0.0286 0.0 GCC-C-execute-vrp-6 0.0172 0.0189 0.0375 0.0 GCC-C-execute-vrp-7 0.0098 0.0262 0.0174 0.0 GCC-C-execute-wchar_t-1 0.0113 0.0132 FAIL FAIL GCC-C-execute-widechar-1 0.0212 0.0143 0.0238 0.0 GCC-C-execute-widechar-2 0.0224 0.015 FAIL FAIL GCC-C-execute-widechar-3 0.0135 0.0265 FAIL FAIL GCC-C-execute-zero-struct-1 0.0278 0.0119 FAIL FAIL GCC-C-execute-zero-struct-2 0.0207 0.0071 FAIL FAIL GCC-C-execute-zerolen-1 0.0166 0.0206 0.0251 FAIL GCC-C-execute-zerolen-2 0.0163 0.0203 FAIL FAIL IntMM 0.0353 0.0306 0.3426 FAIL Oscar 0.0425 0.0514 FAIL FAIL Perm 0.0375 0.047 0.3222 FAIL Puzzle 0.0401 0.0529 0.6779 FAIL Queens 0.058 0.0453 FAIL FAIL Quicksort 0.0351 0.0469 0.38 FAIL RealMM 0.037 0.0395 0.3412 FAIL ReedSolomon 0.0777 0.1039 FAIL FAIL Regression-C++-2003-05-14-array-init 0.0206 FAIL FAIL FAIL Regression-C++-2003-05-14-expr_stmt 0.0229 FAIL FAIL FAIL Regression-C++-2003-06-08-BaseType 0.0238 FAIL 0.0317 FAIL Regression-C++-2003-06-08-VirtualFunctions FAIL FAIL FAIL FAIL Regression-C++-2003-06-13-Crasher FAIL FAIL FAIL FAIL Regression-C++-2003-08-20-EnumSizeProblem 0.0241 0.0263 0.0211 0.0 Regression-C++-2003-09-29-NonPODsByValue FAIL FAIL FAIL FAIL Regression-C++-2008-01-29-ParamAliasesReturn FAIL FAIL FAIL FAIL Regression-C++-2011-03-28-Bitfield 0.0287 FAIL FAIL FAIL Regression-C++-BuiltinTypeInfo FAIL FAIL FAIL FAIL Regression-C++-ConditionalExpr FAIL FAIL FAIL FAIL Regression-C++-class_hierarchy FAIL FAIL FAIL FAIL Regression-C++-ctor_dtor_count FAIL FAIL FAIL FAIL Regression-C++-ctor_dtor_count-2 FAIL FAIL FAIL FAIL Regression-C++-custom_section_members 0.0225 FAIL FAIL FAIL Regression-C++-dead_try_block 0.0217 FAIL 0.03 FAIL Regression-C++-exception_spec_test FAIL FAIL FAIL FAIL Regression-C++-fixups FAIL FAIL FAIL FAIL Regression-C++-function_try_block FAIL FAIL FAIL FAIL Regression-C++-global_ctor FAIL FAIL FAIL FAIL Regression-C++-global_type 0.0194 0.0169 FAIL FAIL Regression-C++-inlined_cleanup FAIL FAIL FAIL FAIL Regression-C++-ofstream_ctor FAIL FAIL FAIL FAIL Regression-C++-pointer_member FAIL FAIL FAIL FAIL Regression-C++-pointer_method FAIL FAIL FAIL FAIL Regression-C++-pointer_method2 FAIL FAIL FAIL FAIL Regression-C++-recursive-throw FAIL FAIL FAIL FAIL Regression-C++-short_circuit_dtor FAIL FAIL FAIL FAIL Regression-C++-simple_rethrow 0.0292 FAIL FAIL FAIL Regression-C++-simple_throw 0.0242 FAIL FAIL FAIL Regression-C++-throw_rethrow_test FAIL FAIL FAIL FAIL Regression-C-2003-05-14-initialize-string 0.0199 0.0191 FAIL FAIL Regression-C-2003-05-21-BitfieldHandling 0.017 0.0237 FAIL FAIL Regression-C-2003-05-21-UnionBitfields 0.0523 0.0573 FAIL FAIL Regression-C-2003-05-21-UnionTest 0.0234 0.0197 FAIL FAIL Regression-C-2003-05-22-LocalTypeTest 0.0301 0.0253 FAIL FAIL Regression-C-2003-05-22-VarSizeArray 0.0279 0.0186 FAIL FAIL Regression-C-2003-05-23-TransparentUnion 0.0361 0.0192 FAIL FAIL Regression-C-2003-06-16-InvalidInitializer 0.0167 0.0135 0.0242 0.0 Regression-C-2003-06-16-VolatileError 0.018 0.0243 0.0079 0.0 Regression-C-2003-10-12-GlobalVarInitializers 0.0363 0.0192 0.0728 FAIL Regression-C-2004-02-03-AggregateCopy 0.0136 0.0313 0.0839 FAIL Regression-C-2004-03-15-IndirectGoto 0.013 0.0225 FAIL FAIL Regression-C-2004-08-12-InlinerAndAllocas 0.0242 0.0191 0.0639 FAIL Regression-C-2005-05-06-LongLongSignedShift 0.0169 0.0201 0.0226 0.0 Regression-C-2008-01-07-LongDouble 0.0313 0.0325 0.0565 FAIL Regression-C-ConstructorDestructorAttributes 0.0279 FAIL 0.0619 FAIL Regression-C-DuffsDevice 0.0273 0.0315 FAIL FAIL Regression-C-PR10189 0.0165 0.0198 FAIL FAIL Regression-C-PR1386 0.0161 0.0389 FAIL FAIL Regression-C-PR491 0.0194 0.0235 0.0882 FAIL Regression-C-PR640 0.0361 0.0341 FAIL FAIL Regression-C-badidx 0.0442 0.0436 0.2877 FAIL Regression-C-bigstack 0.0401 0.0449 0.3606 FAIL Regression-C-callargs 0.0259 0.0288 0.0689 FAIL Regression-C-casts 0.0418 0.0492 FAIL FAIL Regression-C-compare 0.0356 0.0425 0.3142 FAIL Regression-C-float16-smoke 0.0211 0.0223 0.0746 FAIL Regression-C-globalrefs 0.0328 0.0322 FAIL FAIL Regression-C-matrixTranspose 0.0145 0.0158 FAIL FAIL Regression-C-pointer_arithmetic 0.0168 0.0207 0.0197 0.0 Regression-C-sumarray 0.04 0.0387 0.2745 FAIL Regression-C-sumarray2d 0.0323 0.0327 0.2934 FAIL Regression-C-sumarraymalloc 0.0372 0.0497 FAIL FAIL Regression-C-test_indvars 0.0282 0.0287 0.0896 FAIL Regression-C-testtrace 0.0369 0.0353 0.1015 FAIL Regression-C-uint64_to_float 0.0382 0.0397 FAIL FAIL Shootout-C++-ackermann FAIL FAIL FAIL FAIL Shootout-C++-ary FAIL FAIL FAIL FAIL Shootout-C++-ary2 FAIL FAIL FAIL FAIL Shootout-C++-ary3 FAIL FAIL FAIL FAIL Shootout-C++-except FAIL FAIL FAIL FAIL Shootout-C++-fibo FAIL FAIL FAIL FAIL Shootout-C++-hash FAIL FAIL FAIL FAIL Shootout-C++-hash2 FAIL FAIL FAIL FAIL Shootout-C++-heapsort FAIL FAIL FAIL FAIL Shootout-C++-hello FAIL FAIL FAIL FAIL Shootout-C++-lists FAIL FAIL FAIL FAIL Shootout-C++-lists1 FAIL FAIL FAIL FAIL Shootout-C++-matrix FAIL FAIL FAIL FAIL Shootout-C++-methcall FAIL FAIL FAIL FAIL Shootout-C++-moments FAIL FAIL FAIL FAIL Shootout-C++-nestedloop FAIL FAIL FAIL FAIL Shootout-C++-objinst FAIL FAIL FAIL FAIL Shootout-C++-random FAIL FAIL FAIL FAIL Shootout-C++-reversefile FAIL FAIL FAIL FAIL Shootout-C++-sieve FAIL FAIL FAIL FAIL Shootout-C++-spellcheck FAIL FAIL FAIL FAIL Shootout-C++-strcat FAIL FAIL FAIL FAIL Shootout-C++-sumcol FAIL FAIL FAIL FAIL Shootout-C++-wc FAIL FAIL FAIL FAIL Shootout-C++-wordfreq FAIL FAIL FAIL FAIL Shootout-ackermann 0.03 0.0434 0.2874 FAIL Shootout-ary3 0.0395 0.0428 0.3008 FAIL Shootout-fib2 0.0276 0.0124 FAIL FAIL Shootout-hash 0.0529 0.0432 FAIL FAIL Shootout-heapsort 0.0583 0.0796 FAIL FAIL Shootout-hello 0.0241 0.0248 0.0666 FAIL Shootout-lists 0.0437 0.0475 FAIL FAIL Shootout-matrix 0.0452 0.0469 0.356 FAIL Shootout-methcall 0.0465 0.0522 FAIL FAIL Shootout-nestedloop 0.0498 0.0451 0.2832 FAIL Shootout-objinst 0.0367 0.0485 FAIL FAIL Shootout-random 0.077 0.0708 0.4954 FAIL Shootout-sieve 0.0456 0.0331 0.2898 FAIL Shootout-strcat 0.0313 0.0585 FAIL FAIL StructModifyTest 0.0186 0.0187 0.028 0.0251 TestLoop 0.0378 0.0247 0.0872 FAIL Towers 0.0477 0.0536 0.388 FAIL Treesort 0.0544 0.038 0.3716 FAIL Vector-build 0.0272 FAIL FAIL FAIL Vector-build2 0.028 FAIL FAIL FAIL Vector-constpool 0.2751 FAIL FAIL FAIL Vector-divides 0.0332 FAIL FAIL FAIL Vector-multiplies 0.047 FAIL FAIL FAIL Vector-simple 0.0416 FAIL FAIL FAIL Vector-sse.expandfft 0.1573 FAIL FAIL FAIL Vector-sse.isamax 0.1381 FAIL FAIL FAIL Vector-sse.shift 0.0912 FAIL FAIL FAIL Vector-sse.stepfft 0.1392 FAIL FAIL FAIL Vector-sumarray 0.0212 FAIL FAIL FAIL Vector-sumarray-dbl 0.0331 FAIL FAIL FAIL adi 0.096 0.1049 FAIL FAIL almabench 0.0749 0.085 FAIL FAIL atax 0.0997 0.1118 FAIL FAIL bicg 0.0972 0.1201 FAIL FAIL bigfib FAIL FAIL FAIL FAIL block-byref-cxxobj-test 0.0288 0.021 0.0223 0.0214 block-byref-test 0.0213 0.0165 0.0206 0.017 block-call-r7674133 0.0214 0.0202 0.0255 0.0242 block-copied-in-cxxobj 0.0244 0.0142 0.028 0.0307 block-copied-in-cxxobj-1 0.0104 0.0205 0.0162 0.0152 blockstret 0.0101 0.0165 0.0141 0.0248 byval-alignment 0.0251 0.0163 FAIL FAIL cast 0.0591 FAIL FAIL FAIL cast-bug 0.0199 0.0168 0.0283 0.0366 cast2 0.0249 FAIL FAIL FAIL ccc 0.0592 0.0436 FAIL FAIL cholesky 0.1265 0.1079 FAIL FAIL chomp 0.0637 0.0557 FAIL FAIL classify 2.5793 2.5659 FAIL FAIL conditional-gnu-ext 0.021 0.0171 FAIL FAIL conditional-gnu-ext-cxx FAIL FAIL FAIL FAIL correlation 0.1009 0.1055 FAIL FAIL covariance 0.0929 0.1021 FAIL FAIL deriche 0.1213 0.1145 FAIL FAIL div 0.0361 0.0357 FAIL FAIL doitgen 0.1149 0.1059 FAIL FAIL dry 0.0559 0.0608 FAIL FAIL dt 0.0579 0.0634 0.548 FAIL durbin 0.1027 0.1188 FAIL FAIL evalloop 0.0373 0.0337 FAIL FAIL exptree 0.0397 0.0504 FAIL FAIL factor 0.0419 0.0387 FAIL FAIL fannkuch 0.0398 0.0403 FAIL FAIL fasta 0.0419 0.0547 FAIL FAIL fbench 0.0775 0.0813 FAIL FAIL fdtd-2d 0.1181 0.1053 FAIL FAIL ffbench 0.0777 0.0883 FAIL FAIL fftbench FAIL FAIL FAIL FAIL fldry 0.069 0.0568 FAIL FAIL flops 0.0757 0.0709 FAIL FAIL flops-1 0.0633 0.0494 0.2394 FAIL flops-2 0.0538 0.0555 0.2505 FAIL flops-3 0.0531 0.0557 0.252 FAIL flops-4 0.0449 0.0593 0.2637 FAIL flops-5 0.0595 0.0545 0.2585 FAIL flops-6 0.0774 0.0626 0.2573 FAIL flops-7 0.0658 0.07 0.2376 FAIL flops-8 0.0652 0.0548 0.2656 FAIL floyd-warshall 0.1092 0.104 FAIL FAIL fp-convert 0.0437 0.0455 0.301 FAIL functionobjects FAIL FAIL FAIL FAIL gcc-loops FAIL FAIL FAIL FAIL gemm 0.11 0.1132 FAIL FAIL gemver 0.1126 0.1275 FAIL FAIL gesummv 0.0896 0.101 FAIL FAIL gramschmidt 0.0918 0.1068 FAIL FAIL heat-3d 0.1043 0.1237 FAIL FAIL himenobmtxpa 0.0662 0.0696 FAIL FAIL huffbench 0.0907 0.1004 FAIL FAIL index-select FAIL FAIL FAIL FAIL initp1 FAIL FAIL FAIL FAIL jacobi-1d 0.0979 0.1067 FAIL FAIL jacobi-2d 0.1049 0.0888 FAIL FAIL linpack-pc 0.1133 0.1092 FAIL FAIL loop_unroll FAIL FAIL FAIL FAIL lowercase 0.0472 0.036 FAIL FAIL lpbench 0.0832 0.0832 0.886 FAIL lu 0.1204 0.1036 FAIL FAIL ludcmp 0.1 0.1163 FAIL FAIL mandel 0.0446 0.0583 FAIL FAIL mandel-2 0.0463 0.0401 FAIL FAIL mandel-text 0.0136 FAIL FAIL FAIL matmul_f64_4x4 0.0343 0.0323 FAIL FAIL matrix-types-spec 0.0098 0.0204 0.025 FAIL member-function-pointers FAIL FAIL FAIL FAIL misr 0.0592 0.0577 FAIL FAIL ms_struct-bitfield 0.0257 FAIL FAIL FAIL ms_struct-bitfield-1 0.0223 FAIL FAIL FAIL ms_struct-bitfield-init 0.0313 FAIL FAIL FAIL ms_struct-bitfield-init-1 0.0379 FAIL FAIL FAIL ms_struct_pack_layout 0.0347 FAIL FAIL FAIL ms_struct_pack_layout-1 0.0165 FAIL 0.0205 0.0144 mvt 0.0926 0.1125 FAIL FAIL n-body 0.0807 0.0722 0.7165 FAIL nsieve-bits 0.046 0.056 FAIL FAIL nussinov 0.118 0.1206 FAIL FAIL oopack_v1p8 FAIL FAIL FAIL FAIL oourafft 0.1048 0.1159 FAIL FAIL outer-loop-vect FAIL FAIL FAIL FAIL partialsums 0.0642 FAIL FAIL FAIL perlin 0.0609 0.063 FAIL FAIL pi 0.0437 0.033 0.1068 FAIL printargs 0.0252 0.0302 0.0787 FAIL puzzle 0.0381 0.0372 0.3663 FAIL queens 0.0554 0.0501 FAIL FAIL ray FAIL FAIL FAIL FAIL recurrences FAIL FAIL FAIL FAIL recursive 0.0282 0.03 0.0804 FAIL rem 0.0584 0.0575 FAIL FAIL revertBits 0.0418 0.0374 0.3649 FAIL richards_benchmark 0.0447 0.0394 FAIL FAIL runtime-checks FAIL FAIL FAIL FAIL salsa20 0.0584 0.0556 0.8188 FAIL seidel-2d 0.0999 0.1002 FAIL FAIL shr 0.0402 0.0326 0.1253 FAIL simple_types_constant_folding FAIL FAIL FAIL FAIL simple_types_loop_invariant FAIL FAIL FAIL FAIL smallpt FAIL FAIL FAIL FAIL spectral-norm 0.0757 0.0836 FAIL FAIL sphereflake FAIL FAIL FAIL FAIL spirit FAIL FAIL FAIL FAIL stdthreadbug FAIL FAIL FAIL FAIL stepanov_abstraction FAIL FAIL FAIL FAIL stepanov_container FAIL FAIL FAIL FAIL stepanov_v1p2 FAIL FAIL FAIL FAIL stepanov_vector FAIL FAIL FAIL FAIL stmtexpr FAIL FAIL FAIL FAIL symm 0.0971 0.0988 FAIL FAIL syr2k 0.0968 0.1141 FAIL FAIL syrk 0.1117 0.1047 FAIL FAIL testcase-CGExprConstant 0.0226 0.0294 FAIL FAIL testcase-Expr-1 0.0283 0.0308 0.0913 FAIL testcase-ExprConstant-1 0.0256 0.0257 FAIL FAIL testcase-ExprConstant-2 0.0248 FAIL FAIL FAIL testcase-InstCombine-1 0.0232 0.0361 0.0944 FAIL testcase-Value-1 0.0225 0.0235 FAIL FAIL tls 0.0368 0.0406 FAIL FAIL trisolv 0.1175 0.0971 FAIL FAIL trmm 0.1165 0.1062 FAIL FAIL vla 0.0363 0.0307 FAIL FAIL whetstone 0.0893 0.0804 FAIL FAIL x86-dyn_stack_alloc_realign FAIL FAIL FAIL FAIL x86-dyn_stack_alloc_realign2 FAIL FAIL FAIL FAIL"},{"location":"Benchmarks/sv-comp-results/","title":"SV-Comp","text":"HighLevel with Unsupported HighLevel Total 21910/23190 20374/23190 sv-benchmarks/c/array-cav19 13/13 13/13 sv-benchmarks/c/array-crafted 43/43 43/43 sv-benchmarks/c/array-examples 96/96 96/96 sv-benchmarks/c/array-fpi 138/138 138/138 sv-benchmarks/c/array-industry-pattern 17/17 17/17 sv-benchmarks/c/array-lopstr16 11/11 11/11 sv-benchmarks/c/array-memsafety-realloc 3/3 3/3 sv-benchmarks/c/array-memsafety 65/65 65/65 sv-benchmarks/c/array-multidimensional 20/20 20/20 sv-benchmarks/c/array-patterns 30/30 30/30 sv-benchmarks/c/array-programs 16/16 16/16 sv-benchmarks/c/array-tiling 29/29 29/29 sv-benchmarks/c/aws-c-common 344/344 4/344 sv-benchmarks/c/bitvector-loops 3/3 3/3 sv-benchmarks/c/bitvector-regression 10/10 10/10 sv-benchmarks/c/bitvector 70/70 70/70 sv-benchmarks/c/busybox-1.22.0-todo 6/16 6/16 sv-benchmarks/c/busybox-1.22.0 18/86 18/86 sv-benchmarks/c/combinations 671/671 671/671 sv-benchmarks/c/coreutils-v8.31 0/120 0/120 sv-benchmarks/c/ddv-machzwd 13/13 13/13 sv-benchmarks/c/eca-programs 106/106 106/106 sv-benchmarks/c/eca-rers2012 1140/1140 1140/1140 sv-benchmarks/c/eca-rers2018 9/9 9/9 sv-benchmarks/c/float-benchs 78/82 78/82 sv-benchmarks/c/float-newlib 265/265 265/265 sv-benchmarks/c/floats-cbmc-regression 31/31 31/31 sv-benchmarks/c/floats-cdfpl 40/40 40/40 sv-benchmarks/c/floats-esbmc-regression 44/44 44/44 sv-benchmarks/c/forester-heap 40/40 40/40 sv-benchmarks/c/fuzzle-programs 15/15 15/15 sv-benchmarks/c/goblint-coreutils 0/20 0/20 sv-benchmarks/c/goblint-regression 220/220 220/220 sv-benchmarks/c/hardness-nfm22 4012/4012 4012/4012 sv-benchmarks/c/hardware-verification-array 12/12 12/12 sv-benchmarks/c/hardware-verification-bv 2436/2436 2436/2436 sv-benchmarks/c/heap-data 10/10 10/10 sv-benchmarks/c/heap-manipulation 13/13 13/13 sv-benchmarks/c/ldv-challenges-todo 2/2 2/2 sv-benchmarks/c/ldv-challenges 176/199 176/199 sv-benchmarks/c/ldv-commit-tester-todo 1/1 1/1 sv-benchmarks/c/ldv-commit-tester 35/53 35/53 sv-benchmarks/c/ldv-consumption 132/161 132/161 sv-benchmarks/c/ldv-linux-3.0-todo 1/1 0/1 sv-benchmarks/c/ldv-linux-3.0 32/38 17/38 sv-benchmarks/c/ldv-linux-3.12-rc1-todo 4/4 4/4 sv-benchmarks/c/ldv-linux-3.12-rc1 29/33 29/33 sv-benchmarks/c/ldv-linux-3.14-races 6/6 6/6 sv-benchmarks/c/ldv-linux-3.14-todo 0/1 0/1 sv-benchmarks/c/ldv-linux-3.14 300/320 300/320 sv-benchmarks/c/ldv-linux-3.16-rc1-todo 57/63 57/63 sv-benchmarks/c/ldv-linux-3.16-rc1 78/93 78/93 sv-benchmarks/c/ldv-linux-3.4-simple 1078/1157 551/1157 sv-benchmarks/c/ldv-linux-3.7.3 11/11 11/11 sv-benchmarks/c/ldv-linux-4.0-rc1-mav-todo 14/23 14/23 sv-benchmarks/c/ldv-linux-4.0-rc1-mav 60/76 60/76 sv-benchmarks/c/ldv-linux-4.2-rc1-todo 2/4 2/4 sv-benchmarks/c/ldv-linux-4.2-rc1 299/422 299/422 sv-benchmarks/c/ldv-memsafety-bitfields 10/10 10/10 sv-benchmarks/c/ldv-memsafety 95/95 95/95 sv-benchmarks/c/ldv-multiproperty-todo 0/1 0/1 sv-benchmarks/c/ldv-multiproperty 74/98 74/98 sv-benchmarks/c/ldv-races 19/19 19/19 sv-benchmarks/c/ldv-regression 88/88 88/88 sv-benchmarks/c/ldv-sets 8/8 8/8 sv-benchmarks/c/ldv-validator-v0.6-todo 3/4 3/4 sv-benchmarks/c/ldv-validator-v0.6 15/17 15/17 sv-benchmarks/c/ldv-validator-v0.8-todo 5/6 5/6 sv-benchmarks/c/ldv-validator-v0.8 15/17 15/17 sv-benchmarks/c/list-ext-properties 21/21 21/21 sv-benchmarks/c/list-ext2-properties 6/6 6/6 sv-benchmarks/c/list-ext3-properties 16/16 16/16 sv-benchmarks/c/list-properties 13/13 13/13 sv-benchmarks/c/list-simple 40/40 40/40 sv-benchmarks/c/locks 13/13 13/13 sv-benchmarks/c/longjmp 37/37 37/37 sv-benchmarks/c/loop-acceleration 44/44 44/44 sv-benchmarks/c/loop-crafted 7/9 7/9 sv-benchmarks/c/loop-floats-scientific-comp 7/7 7/7 sv-benchmarks/c/loop-industry-pattern 3/18 3/18 sv-benchmarks/c/loop-invariants 9/9 9/9 sv-benchmarks/c/loop-invgen 28/29 28/29 sv-benchmarks/c/loop-lit 33/33 33/33 sv-benchmarks/c/loop-new 11/11 11/11 sv-benchmarks/c/loop-simple 8/8 8/8 sv-benchmarks/c/loop-zilu 58/58 58/58 sv-benchmarks/c/loops-crafted-1 55/55 55/55 sv-benchmarks/c/loops 0/0 0/0 sv-benchmarks/c/loops/todo 77/77 77/77 sv-benchmarks/c/memory-alloca 1/1 1/1 sv-benchmarks/c/memory-model 2/2 2/2 sv-benchmarks/c/memsafety-bftpd 3/3 3/3 sv-benchmarks/c/memsafety-broom 30/31 30/31 sv-benchmarks/c/memsafety-ext 8/8 8/8 sv-benchmarks/c/memsafety-ext2 10/10 10/10 sv-benchmarks/c/memsafety-ext3 18/18 18/18 sv-benchmarks/c/memsafety 42/43 42/43 sv-benchmarks/c/neural-networks 611/611 611/611 sv-benchmarks/c/nla-digbench-scaling 0/0 0/0 sv-benchmarks/c/nla-digbench-scaling/todo 488/488 488/488 sv-benchmarks/c/nla-digbench 0/0 0/0 sv-benchmarks/c/nla-digbench/todo 57/57 57/57 sv-benchmarks/c/ntdrivers-simplified 10/10 10/10 sv-benchmarks/c/ntdrivers 12/12 12/12 sv-benchmarks/c/openbsd-6.2 5/5 0/5 sv-benchmarks/c/openssl-simplified 26/26 26/26 sv-benchmarks/c/openssl 36/36 36/36 sv-benchmarks/c/product-lines 597/597 597/597 sv-benchmarks/c/psyco 11/11 11/11 sv-benchmarks/c/pthread-C-DAC 5/5 5/5 sv-benchmarks/c/pthread-atomic 18/18 18/18 sv-benchmarks/c/pthread-complex 4/6 4/6 sv-benchmarks/c/pthread-deagle 24/24 24/24 sv-benchmarks/c/pthread-divine 16/16 16/16 sv-benchmarks/c/pthread-driver-races 0/30 0/30 sv-benchmarks/c/pthread-ext 95/95 95/95 sv-benchmarks/c/pthread-lit 16/16 16/16 sv-benchmarks/c/pthread-memsafety 3/3 3/3 sv-benchmarks/c/pthread-nondet 6/6 6/6 sv-benchmarks/c/pthread-race-challenges 63/63 63/63 sv-benchmarks/c/pthread-wmm 283/283 283/283 sv-benchmarks/c/pthread 64/64 64/64 sv-benchmarks/c/recursified_loop-crafted 7/9 7/9 sv-benchmarks/c/recursified_loop-invariants 9/9 9/9 sv-benchmarks/c/recursified_loop-simple 8/8 8/8 sv-benchmarks/c/recursified_nla-digbench 0/0 0/0 sv-benchmarks/c/recursified_nla-digbench/todo 57/57 57/57 sv-benchmarks/c/recursive-simple 77/77 77/77 sv-benchmarks/c/recursive-with-pointer 2/2 2/2 sv-benchmarks/c/recursive 27/27 27/27 sv-benchmarks/c/reducercommutativity 50/50 50/50 sv-benchmarks/c/regression 4024/4438 3439/4438 sv-benchmarks/c/seq-mthreaded-reduced 109/316 109/316 sv-benchmarks/c/seq-mthreaded 192/192 192/192 sv-benchmarks/c/seq-pthread 19/19 19/19 sv-benchmarks/c/signedintegeroverflow-regression 15/15 15/15 sv-benchmarks/c/sqlite 0/1 0/1 sv-benchmarks/c/systemc 62/62 62/62 sv-benchmarks/c/termination-15-todo 2/2 1/2 sv-benchmarks/c/termination-15 62/62 0/62 sv-benchmarks/c/termination-bwb 41/41 41/41 sv-benchmarks/c/termination-crafted-lit-todo 7/7 7/7 sv-benchmarks/c/termination-crafted-lit 159/159 159/159 sv-benchmarks/c/termination-crafted-todo 6/6 6/6 sv-benchmarks/c/termination-crafted 118/118 118/118 sv-benchmarks/c/termination-dietlibc 32/32 32/32 sv-benchmarks/c/termination-memory-alloca-todo 56/56 56/56 sv-benchmarks/c/termination-memory-alloca 147/147 147/147 sv-benchmarks/c/termination-memory-linkedlists-todo 4/4 4/4 sv-benchmarks/c/termination-memory-linkedlists 18/18 18/18 sv-benchmarks/c/termination-nla 78/78 78/78 sv-benchmarks/c/termination-numeric 22/22 22/22 sv-benchmarks/c/termination-recursive-malloc 28/28 28/28 sv-benchmarks/c/termination-restricted-15-todo 82/82 82/82 sv-benchmarks/c/termination-restricted-15 103/103 103/103 sv-benchmarks/c/unsignedintegeroverflow-sas23 5/5 5/5 sv-benchmarks/c/uthash-2.0.2 192/192 192/192 sv-benchmarks/c/verifythis 13/13 13/13 sv-benchmarks/c/weaver 172/172 172/172 sv-benchmarks/c/xcsp 119/119 119/119"},{"location":"Designs/abi/","title":"Abi","text":""},{"location":"Designs/abi/#abi","title":"ABI","text":"<p>VAST partially models ABI specifications for function types and therefore callsites. While the specification goes into details regarding registers, for now VAST only offers lowering similar to what clang codegen does - argument and return types are coerced to types that will easily fit their respective registers once that allocation takes place. There is nothing preventing inclusion of information about registers as well (for example as metadata or separate operations/dialect), however it is not yet implemented.</p> <p>Similar to other transformation in VAST, ABI modelling tries to be as modular as possible and as such can be split into three distinct steps:</p> <ul> <li>Compute classification of types</li> <li>Encode computed classification into module</li> <li>Lower transformed module into some \"executable\" dialect</li> </ul> <p>Main goal for now is to lower function prototypes to match the types produced by clang, so that VAST emitted LLVM can be used as drop-in replacement for clang one.</p> <p>When reading this document please keep in mind that implementation of this feature is still ongoing and therefore particular technical details could change drastically (although we hope that overall design will remain the same).</p>"},{"location":"Designs/abi/#classification","title":"Classification","text":"<p>Mirrors what clang does, but instead of locking the computed information away, we expose the API. In ideal world we would like to keep the algorithm(s, as there may be multiple per different ABIs) generic. This can be achieved by requiring users to implement &amp; provide interface that specifies various details about used types; algorithm will be same when talking about <code>hl</code> or <code>LLVM</code> types after all.</p> <p>Currently, we only provide support for x86 target to assess the approach's  applicability.</p>"},{"location":"Designs/abi/#abi-dialect-vast-emit-abi","title":"ABI Dialect (<code>-vast-emit-abi</code>)","text":"<p>Once classification for a function is computed, we need to:</p> <ul> <li>Change function prototype</li> <li>Encode how new types match to the old types + some oddities such as <code>sret</code>.</li> </ul> <p>To facilitate this, VAST contains <code>abi</code> dialect, which operations encode \"high-level\" descriptions of type transformations that can occur during ABI lowering as operations. This is not very different from what clang does, but VAST does it over multiple steps.</p> <p>For functions, type change itself is easy and to mark that function is transformed, <code>abi.func</code> operation is used instead of original one to define the newly formed function. However, as arguments and return types are different, we introduce <code>abi.prologue</code> and <code>abi.epilogue</code> operations.</p> <p>Consider following function we want to lower:</p> <p>Disclaimer: Since <code>abi</code> dialect does not have nice formatting, therefore examples in this section contain some artistic liberty, but semantics (and operations) are preserved.</p> <pre><code>strut Point{ int; int; int; };\n\nint size( struct Point p ) { ... }\n</code></pre> <p>After running the classification, we discover that type of <code>size</code> should be <code>( i64, i32 ) -&gt; i32</code> - both arguments and returned value are passed directly. Therefore we encode it as follows:</p> <pre><code>abi.func size(i64 %arg0_0, i32 %arg0_1 ) -&gt; i32\n{\n    %arg = abi.prologue {\n      %4 = abi.direct %arg0, %arg1 : i64, i32 -&gt; !hl.record&lt;\"Point\"&gt;\n      %5 = abi.yield %4 : !hl.record&lt;\"Point\"&gt; -&gt; !hl.record&lt;\"Point\"&gt;\n    } : !hl.record&lt;\"Point\"&gt;\n\n    // Computation can continue as before, because %arg has a correct type\n\n    %ret = ... value that was previously returned ... -&gt; i32\n    %out = abi.epilogue\n    {\n        %0 = abi.direct %ret: i32 -&gt; i32\n        abi.yield %0\n    }\n    hl.return %out\n}\n</code></pre> <p>In case, there were multiple function arguments, the <code>abi.prologue</code> would return more values.</p> <pre><code>\n%args = abi.prologue -&gt; (hl.struct&lt; \"Point\" &gt;, i32 )\n{\n    %0 = abi.direct %arg0_0, %arg0_1\n    %1 = abi.direct %arg1\n    abi.yield %0, %1\n}\n</code></pre> <p>This design allows easy analysis and subsequent rewrite (as each function has a prologue and epilogue and returned values are explicitly yielded).</p> <p>Callsites are transformed in the same manner (unfortunately, they look more complicated due to nested regions):</p> <pre><code>\n%x = hl.call&lt; \"size\" &gt; %arg: hl.struct&lt; \"Point\" &gt; -&gt; i32\n\n%x = abi.call&lt; \"size\" &gt;: () -&gt; i32\n{\n    %arg0_0, %arg0_1 = abi.call_args: () -&gt; (i64, i32)\n    {\n        %0, %1 = abi.direct %arg\n        abi.yield %0, %1\n    }\n    %x' = hl.call&lt; \"size\" &gt; %arg0_0, &amp;arg0_1 : (i64, i32) -&gt; i32\n    %0 = abi.call_rets : () -&gt; i32\n    {\n        %0 = abi.direct %x' : i32 -&gt; i32\n        abi.yield %0\n    }\n    abi.yield %0\n}\n\n</code></pre> <p>If we had an argument passed as <code>MEMORY</code> class, we would encode it in a similar manner.</p> <pre><code>  ll.func @foo external (%arg0: !hl.record&lt;\"data\"&gt;) -&gt; si32 {\n</code></pre> <p>Gets transformed to:</p> <pre><code>  abi.func @vast.abi.foo external (%arg0: !hl.ptr&lt;!hl.record&lt;\"data\"&gt;&gt;) -&gt; si32 {\n    %0 = abi.prologue {\n      %5 = abi.indirect %arg0 : !hl.ptr&lt;!hl.record&lt;\"data\"&gt;&gt; -&gt; !hl.record&lt;\"data\"&gt;\n      %6 = abi.yield %5 : !hl.record&lt;\"data\"&gt; -&gt; !hl.record&lt;\"data\"&gt;\n    } : !hl.record&lt;\"data\"&gt;\n</code></pre> <p>Call site:</p> <pre><code>    %2 = abi.call_exec @da(%1) {\n      %3 = abi.call_args {\n        %7 = abi.indirect %1 : !hl.record&lt;\"data\"&gt; -&gt; !hl.ptr&lt;!hl.record&lt;\"data\"&gt;&gt;\n        %8 = abi.yield %7 : !hl.ptr&lt;!hl.record&lt;\"data\"&gt;&gt; -&gt; !hl.ptr&lt;!hl.record&lt;\"data\"&gt;&gt;\n      } : !hl.ptr&lt;!hl.record&lt;\"data\"&gt;&gt;\n      %4 = abi.call @da(%3) : (!hl.ptr&lt;!hl.record&lt;\"data\"&gt;&gt;) -&gt; si32\n      %5 = abi.call_rets {\n        %7 = abi.direct %4 : si32 -&gt; si32\n        %8 = abi.yield %7 : si32 -&gt; si32\n      } : si32\n      %6 = abi.yield %5 : si32 -&gt; si32\n    } : (!hl.record&lt;\"data\"&gt;) -&gt; si32\n</code></pre> <p>For now, same <code>abi</code> operations are used to encode transformation in callsite and function (although they change the value in a \"opposite direction\"), this may be later revisited, but for now it is enough to look at the parent operation to determine whether the transformation lies in a function or callsite.</p>"},{"location":"Designs/abi/#lowering-to-some-executable-dialect-vast-lower-abi","title":"Lowering to some executable dialect (<code>-vast-lower-abi</code>)","text":"<p>While <code>abi</code> dialect provides us with all the information required to do the transformation, it does not \"compute\" anything. Rather this lowering is left to a next pass. We hope by splitting the transformation into 2, we achieve the following:</p> <ul> <li>We can implement multiple \"backends\" - whether back to <code>hl</code>, <code>llvm</code> or totally   random dialect of user choice.</li> <li>Re-use existing implementation of classification algorithm.</li> </ul> <p>Currently we lower into our own dialect stack. To continue with our example - after lowering the prologue:</p> <pre><code>  ll.func @size external (%arg0: i64, %arg1: i32) -&gt; si32 {\n    %0 = ll.extract %arg0 {from = 0 : ui64, to = 32 : ui64} : (i64) -&gt; si32\n    %1 = ll.extract %arg0 {from = 32 : ui64, to = 64 : ui64} : (i64) -&gt; si32\n    %2 = hl.initlist %0, %1, %arg1 : (si32, si32, i32) -&gt; !hl.record&lt;\"Point\"&gt;\n    %3 = ll.alloca : !hl.ptr&lt;!hl.record&lt;\"Point\"&gt;&gt;\n    ll.store %3, %2 : !hl.ptr&lt;!hl.record&lt;\"Point\"&gt;&gt;, !hl.record&lt;\"Point\"&gt;\n</code></pre> <p>And the callsite:</p> <pre><code>    %9 = \"ll.gep\"(%8) &lt;{idx = 0 : i32, name = \"a\"}&gt; : (!hl.ptr&lt;!hl.record&lt;\"Point\"&gt;&gt;) -&gt; !hl.ptr&lt;si32&gt;\n    %10 = ll.load %9 : (!hl.ptr&lt;si32&gt;) -&gt; si32\n    %11 = \"ll.gep\"(%8) &lt;{idx = 1 : i32, name = \"b\"}&gt; : (!hl.ptr&lt;!hl.record&lt;\"Point\"&gt;&gt;) -&gt; !hl.ptr&lt;si32&gt;\n    %12 = ll.load %11 : (!hl.ptr&lt;si32&gt;) -&gt; si32\n    %13 = ll.concat %10, %12 : (si32, si32) -&gt; i64\n    %14 = \"ll.gep\"(%8) &lt;{idx = 2 : i32, name = \"c\"}&gt; : (!hl.ptr&lt;!hl.record&lt;\"Point\"&gt;&gt;) -&gt; !hl.ptr&lt;si32&gt;\n    %15 = ll.load %14 : (!hl.ptr&lt;si32&gt;) -&gt; si32\n    %16 = ll.concat %15 : (si32) -&gt; i32\n    %17 = hl.call @size(%13, %16) : (i64, i32) -&gt; si32\n    ll.store %5, %17 : !hl.ptr&lt;si32&gt;, si32\n    %18 = hl.const #core.integer&lt;0&gt; : si32\n</code></pre> <p>We do not use <code>memcpy</code> as we try to preserve as much explicit data flow as we can but nothing really prevents it.</p>"},{"location":"Designs/cpp2-parameters/","title":"Cpp2 parameters","text":""},{"location":"Designs/cpp2-parameters/#lifting-parameter-passing-httpsgithubcomhsutter708blobmain708pdf","title":"Lifting parameter passing [https://github.com/hsutter/708/blob/main/708.pdf]","text":"<p>The proposed way of parameter passing for next-gen c++ is to use declarative style:</p> <pre><code>f(     in X x) // x can be read from\nf(  inout X x) // x can be used in read and write\nf(    out X x) // x can be writen to\nf(   move X x) // x will be moved from\nf(forward X x) // x will be passed along\n</code></pre> <p>Similar holds for return values:</p> <pre><code>auto f()    move X { /* ... */ } // move X to caller\nauto f()         X { /* ... */ } // possibly same\nauto f() forward X { /* ... */ } // pass along X to the caller\n</code></pre> <p>Using the semantics aware vast dialects, we can design a method to automatically modernize code to use a declarative style of parameter passing.</p>"},{"location":"Designs/cpp2-parameters/#examples","title":"Examples","text":"CPP   CPP2  <pre>\nvoid f(const X&amp; x) {\n    g(x);\n}\n</pre> <pre>\nvoid f(in X x) {\n    g(x);\n}\n</pre>  VAST high-level dialect   Transformed to parameter dialect  <pre>\nhl.func @f(%x: !hl.ref&lt; !hl.lvalue&lt; !hl.struct&lt; \"X\" &gt; &gt;, const &gt;) {\n    %0 = hl.call @g(%x) : (!hl.ref&lt; !hl.lvalue&lt; !hl.struct&lt; \"X\" &gt; &gt;, const &gt;) -&gt; !hl.void\n}\n</pre> <pre>\nhl.func @f(%x: !par.in&lt; !hl.lvalue&lt; !hl.struct&lt; \"X\" &gt; &gt; &gt;) {\n    %0 = hl.call @g(%x) : (!par.in&lt; !hl.lvalue&lt; !hl.struct&lt; \"X\" &gt; &gt; &gt;) -&gt; !hl.void\n}\n</pre> <p>The transformation will be probably overapproximating, in cases when the analysis cannot determine the precise category, i.e., <code>inout</code> oveapproximates <code>in</code> and <code>out</code> parameters.</p>"},{"location":"Designs/cpp2-parameters/#dialect","title":"Dialect","text":"<p>The dialect will define type adaptors for each parameter category:</p> <pre><code>!par.in&lt; T &gt;\n!par.out&lt; T &gt;\n!par.inout&lt; T &gt;\n!par.move&lt; T &gt;\n!par.forward&lt; T &gt;\n</code></pre> <p>Parameter categories can also be present as type attributes not to mess up the rest of the type trait system. This needs further investigation.</p> <p>The advantage of the type adaptors we can enforce the correct usage of values. For example, we can forbid usage of <code>out</code> parameter in other places than assignment.</p>"},{"location":"GettingStarted/build/","title":"Build & Run","text":""},{"location":"GettingStarted/build/#dependencies","title":"Dependencies","text":"<p>Currently, it is necessary to use <code>clang</code> (due to <code>gcc</code> bug) to build VAST. On Linux it is also necessary to use <code>lld</code> at the moment.</p> <p>VAST uses <code>llvm-18</code> which can be obtained from the repository provided by LLVM.</p> <p>Before building (for Ubuntu) get all the necessary dependencies by running</p> <pre><code>apt-get install build-essential cmake ninja-build libstdc++-12-dev llvm-18 libmlir-18 libmlir-18-dev mlir-18-tools libclang-18-dev\n</code></pre> <p>or an equivalent command for your operating system of choice.</p>"},{"location":"GettingStarted/build/#instructions","title":"Instructions","text":"<p>To configure project run <code>cmake</code> with following default options. In case <code>clang</code> isn't your default compiler prefix the command with <code>CC=clang CXX=clang++</code>. If you want to use system installed <code>llvm</code> and <code>mlir</code> (on Ubuntu) use:</p> <p>The simplest way is to run</p> <pre><code>cmake --workflow release\n</code></pre> <p>If this method doesn't work for you, configure the project in the usual way:</p> <pre><code>cmake --preset default\n</code></pre> <p>To use a specific <code>llvm</code> provide <code>-DCMAKE_PREFIX_PATH=&lt;llvm &amp; mlir instalation paths&gt;</code> option, where <code>CMAKE_PREFIX_PATH</code> points to directory containing <code>LLVMConfig.cmake</code> and <code>MLIRConfig.cmake</code>.</p> <p>Note: vast requires LLVM with RTTI enabled. Use <code>LLVM_ENABLE_RTTI=ON</code> if you build your own LLVM.</p> <p>Finally, build the project:</p> <pre><code>cmake --build --preset release\n</code></pre> <p>Use <code>debug</code> preset for debug build.</p>"},{"location":"GettingStarted/build/#run","title":"Run","text":"<p>To run mlir codegen of highlevel dialect use.</p> <pre><code>./builds/default/tools/vast-front/Release/vast-front -vast-emit-mlir=&lt;dialect&gt; &lt;input.c&gt; -o &lt;output.mlir&gt;\n</code></pre> <p>Supported dialects are: <code>hl</code>, <code>ll</code>, <code>llvm</code></p>"},{"location":"GettingStarted/build/#test","title":"Test","text":"<pre><code>ctest --preset debug\n</code></pre>"},{"location":"GettingStarted/debug/","title":"Debug","text":""},{"location":"GettingStarted/debug/#debugging","title":"Debugging","text":"<p>VAST makes use of the MLIR infrastructure to facilitate the reproduction of crashes within the pipeline. You can refer to the MLIR documentation on crash and failure reproduction for more details. We provide a similar set of options in vast-front to aid in debugging.</p>"},{"location":"GettingStarted/debug/#generating-crash-reproducers","title":"Generating Crash Reproducers","text":"<p>To generate a minimal reproducer for a crashed pipeline of <code>vast-front</code>, use the following option:</p> <pre><code>-vast-emit-crash-reproducer=\"reproducer.mlir\" \n</code></pre> <p>This option disables multithreading to ensure a comprehensive crash report. You can then load and examine the crash report using the following command:</p> <pre><code>vast-opt -run-reproducer reproducer.mlir\n</code></pre>"},{"location":"GettingStarted/debug/#pipeline-information","title":"Pipeline Information","text":"<p>To obtain a detailed insight into the pipeline, you can use the following option of <code>vast-front</code>:</p> <pre><code>-vast-print-pipeline\n</code></pre> <p>This option dumps the pipeline string to the standard error stream. You can use this information for a more specific investigation of the pipeline. Execute the pipeline with the printed string using the following command:</p> <pre><code>vast-opt --pass-pipeline=\"pipeline-string\"\n</code></pre>"},{"location":"GettingStarted/debug/#debug-pipeline","title":"Debug Pipeline","text":"<p>With the <code>-vast-debug</code> option, you get more detailed crash reports. It shows MLIR operations when there's an error and provides current stack traces.</p> <p>Sometimes it is needed to examine the results of conversion steps more closely to discover what went wrong. <code>-vast-snapshot-at=pass1;...;passN</code> will instrument conversion pipeline to store a result of <code>passN</code> into a file after it is applied. Name of the file will be in the form of: <code>basename.pass_name</code>. Passing <code>\"*\"</code> in the string will result in output after every step.</p>"},{"location":"GettingStarted/extend/","title":"How to create a new dialect","text":""},{"location":"GettingStarted/extend/#how-to-start-extending-vast","title":"How to Start Extending VAST?","text":"<p>VAST offers a handy script to generate a variety of MLIR primitives. You can find the script at <code>scripts/templater.py</code>. This tool is designed to help you create dialects, passes, operations, types, and attributes interactively.</p>"},{"location":"GettingStarted/extend/#usage","title":"Usage","text":"<p>Just run the script. It has been designed to provide a guided process for generating the desired primitives. If you find anything confusing or unintuitive, please don't hesitate to open an issue so that we can address it.</p> <p>When you run the script, it will generate the basic skeleton for your chosen primitive. It will list the generated files which you can freely modify to provide desired functionality.</p>"},{"location":"GettingStarted/integration/","title":"Driver integration","text":""},{"location":"GettingStarted/integration/#integration-to-custom-tools","title":"Integration to custom tools","text":"<p>VAST is designed with a focus on highly customizable code generation, allowing developers to tailor the process to their specific needs. At the heart of this customization is the <code>CodeGenDriver</code>.</p>"},{"location":"GettingStarted/integration/#using-the-predefined-driver-or-customizing-components","title":"Using the Predefined Driver or Customizing Components","text":"<p>The <code>CodeGenDriver</code> offers the flexibility to either use a predefined driver or customize each of its components according to the requirements of your project. This driver is responsible for generating a single MLIR module, typically corresponding to a single translation unit, although it can also be utilized for partial code generation.</p>"},{"location":"GettingStarted/integration/#components-of-the-codegen-driver","title":"Components of the CodeGen Driver","text":"<ol> <li>Metadata (locations) generator: The <code>vast::cg::meta_generator</code> serves as a configuration point for creating locations attached to MLIR operations. It exposes the following API:</li> </ol> <pre><code>    struct meta_generator {\n        virtual ~meta_generator() = default;\n        virtual loc_t location(const clang_decl *) const = 0;\n        virtual loc_t location(const clang_stmt *) const = 0;\n        virtual loc_t location(const clang_expr *) const = 0;\n    };\n</code></pre> <p>In VAST, two implementations are provided: - <code>default_meta_gen</code>: Translates Clang AST locations to MLIR locations. - <code>id_meta_gen</code>: Assigns consecutive IDs as meta information, providing an alternative approach.</p> <ol> <li>Symbol (names) generator: The <code>vast::cg::symbol_generator</code> serves as a configuration point for naming of program symbols. It exposes the following API:</li> </ol> <pre><code>    struct symbol_generator\n    {\n        virtual ~symbol_generator() = default;\n\n        virtual std::optional&lt; symbol_name &gt; symbol(clang_global decl) = 0;\n        virtual std::optional&lt; symbol_name &gt; symbol(const clang_decl_ref_expr *decl) = 0;\n    };\n</code></pre> <p>The symbol generator handles name mangling and the generation of all symbol names in MLIR. VAST provides a default symbol generator, <code>default_symbol_generator</code>, which implements symbol mangling in a manner similar to Clang.</p> <ol> <li>AST Visitor: Holds the main logic for MLIR generation. Visitor bundles together both location generator and meta generator, it implements the following API:</li> </ol> <pre><code>    struct visitor_base\n    {\n        virtual ~visitor_base() = default;\n\n        virtual operation visit(const clang_decl *, scope_context &amp;scope) = 0;\n        virtual operation visit(const clang_stmt *, scope_context &amp;scope) = 0;\n        virtual mlir_type visit(const clang_type *, scope_context &amp;scope) = 0;\n        virtual mlir_type visit(clang_qual_type, scope_context &amp;scope)    = 0;\n        virtual std::optional&lt; named_attr &gt; visit(const clang_attr *, scope_context &amp;scope) = 0;\n\n        virtual operation visit_prototype(const clang_function *decl, scope_context &amp;scope) = 0;\n\n        virtual std::optional&lt; loc_t &gt; location(const clang_decl *) = 0;\n        virtual std::optional&lt; loc_t &gt; location(const clang_stmt *) = 0;\n        virtual std::optional&lt; loc_t &gt; location(const clang_expr *) = 0;\n\n        virtual std::optional&lt; symbol_name &gt; symbol(clang_global) = 0;\n        virtual std::optional&lt; symbol_name &gt; symbol(const clang_decl_ref_expr *) = 0;\n    };\n</code></pre> <p>Visitors can operate independently, but leveraging multiple visitors in chain often offers advantages of their composition. In VAST, we provide several specialized visitors:</p> <ul> <li><code>default_visitor</code>: This visitor handles the default translation to a high-level dialect.</li> <li><code>unsup_visitor</code>: Generates operations marked as \"unsupported,\" serving as a fallback for default visitation.</li> <li><code>unreach_visitor</code> (unreachable visitor): Yields an error upon visitation and is typically used as the last visitor in the chain.</li> </ul> <p>The visitor API follows a design where its functions return optional results or empty MLIR entities if visitation, location, or symbol generation fails. This design facilitates easy recognition of such cases and enables the passing of visitation to another visitor.</p> <p>For cases where only partial visitor implementation is desired, developers can utilize a helper class called <code>fallthrough_visitor</code> as a base for their visitor. By default, it treats all visitations as unsuccessful but allows for overrides. This empowers developers to implement specialized visitors, such as a dedicated type visitor, for specific use cases.</p> <p>To chain visitors, VAST offers a class to represent a list of visitors called <code>vast::cg::visitor_list</code>. This list satisfies the visitor API and forwards visitation to the head of the list, enabling cascading through its visitors starting from the head.</p> <p>Visitor list nodes serve a dual purpose: they can either solely hold visitors and call them, or they can perform preprocessing on visitation arguments or postprocessing on results.</p> <p>The base class for a visitor list node, which wraps a visitor class, is defined as follows:</p> <pre><code>template &lt;typename visitor&gt;\nvisitor_list_node_adaptor\n</code></pre> <p>This class simply forwards visitation to the internal visitor without performing any additional actions. Notably, it doesn't even forward the visitation to the next node on failure.</p> <p>For cases where a visitor may fail, another class is available:</p> <pre><code>template &lt;typename visitor&gt;\ntry_or_through_list_node\n</code></pre> <p>This class attempts to call its visitor, and if it fails, it returns the application of <code>next-&gt;visit</code> with same arguments.</p> <p>Additionally, a helper class for building partial visitor list nodes is provided:</p> <pre><code>template &lt;typename visitor&gt;\nfallthrough_list_node\n</code></pre> <p>This class, by default, forwards everything to the next visitor but allows for overriding specific visitor methods as needed.</p> <p>To simplify the construction of a chain of visitors, these classes override the <code>operator|</code>, enabling chaining. Additionally, we provide convenient constructor methods for specifying how to build each node:</p> <pre><code>template &lt;typename visitor, typename ...args_t&gt; as_node;\n</code></pre> <p>This method creates a visitor list node with the given visitor and passes arguments to its constructor. Sometimes, visitors need to invoke the head of the visitor list on subelements of the currently visited entity. To achieve this, <code>as_node_with_list_ref</code> can be used, which passes the reference as the first argument to the constructor of the visitor. Finally, <code>optional</code> allows for configuring which visitors to plug into the pipeline at runtime.</p>"},{"location":"GettingStarted/integration/#example-default-visitor-list-construction","title":"Example: Default Visitor List Construction","text":"<p>The construction of the default VAST visitor appears as follows:</p> <pre><code>auto visitors = std::make_shared&lt;visitor_list&gt;()\n    | as_node_with_list_ref&lt;attr_visitor_proxy&gt;()\n    | as_node&lt;type_caching_proxy&gt;()\n    | as_node_with_list_ref&lt;default_visitor&gt;(\n        *mctx, *bld, std::move(mg), std::move(sg), strict_return, missing_return_policy\n    )\n    | optional(enable_unsupported, as_node_with_list_ref&lt;unsup_visitor&gt;(*mctx, *bld))\n    | as_node&lt;unreach_visitor&gt;();\n</code></pre> <p>In this construction:</p> <ul> <li>The first visitor is a proxy responsible for post-processing visitor results and attaching any applicable attributes from clang AST.</li> <li>The <code>type_caching_proxy</code> is utilized to deduplicate generated types. It either returns a stored cached type or forwards the visitation. This proxy enables reusing its cache to generate the data layout at the end of module generation.</li> <li>Next, we have the <code>default_visitor</code>, followed by an optional <code>unsupported_visitor</code>, and lastly, the <code>unreach_visitor</code>, which yields an error if reached.</li> </ul>"},{"location":"GettingStarted/integration/#simple-driver-integration","title":"Simple Driver Integration","text":"<pre><code>// Example usage of the driver class\n\n// Create a driver instance\ndriver drv(actx, mctx, bld, visitors);\n\n// Emit declarations\ndrv.emit(decls);\n\n// Finalize code generation -- this emits e.g., data layout information\ndrv.finalize();\n\n// Verify the generated module\nif (!drv.verify()) {\n    // Handle verification failure\n}\n\n// Retrieve the finalized module\nowning_module_ref mod = drv.freeze();\n</code></pre>"},{"location":"Projects/related/","title":"Related Projects","text":""},{"location":"Projects/related/#llvm-test-suite","title":"LLVM Test Suite","text":"<p>Test suite extended to generate reports for VAST MLIR dialects.</p>"},{"location":"Projects/related/#benchmarks","title":"Benchmarks","text":"<p>C/C++ benchmarks for VAST.</p>"},{"location":"Projects/related/#miller","title":"Miller","text":"<p>VAST MLIR Abstract Interpreter</p>"},{"location":"Projects/related/#vast-checker","title":"VAST-Checker","text":"<p>VAST-based tool that scans C code for variants of the Sequoia bug.</p>"},{"location":"Projects/related/#macroni","title":"Macroni","text":"<p>Compiler frontend for C and C++ that utilizes PASTA for code parsing and VAST for representing the code as MLIR. Notably, it extends VAST MLIR to handle macro expansions in its dialects.</p>"},{"location":"Projects/related/#potato","title":"PoTATo","text":"<p>Dialect-based points-to analysis for MLIR.</p>"},{"location":"Tools/vast-front/","title":"VAST: Compiler Driver","text":"<p><code>vast-front</code> serves as the primary <code>vast</code> compiler driver for compiling C/C++. It functions as an extension to the Clang compiler and generally supports all Clang's options. Moreover, <code>vast-front</code> offers several custom options, primarily designed as points of customization for MLIR generation. All these options are prefixed with <code>-vast</code>.</p>"},{"location":"Tools/vast-front/#vast-output-targets","title":"VAST output targets","text":"<ul> <li><code>-vast-emit-mlir=&lt;dialect&gt;</code></li> <li>Possible dialects: hl, std, llvm, cir</li> <li> <p>This will execute the translation pipeline up to the specified dialect.</p> </li> <li> <p><code>-vast-emit-mlir-after=&lt;pass-argument-name&gt;</code></p> </li> <li>This will execute the translation pipeline up to the specified mlir pass (including).</li> <li> <p>It uses same names as <code>opt</code> to specify passes.</p> </li> <li> <p><code>-vast-emit-mlir-bytecode</code> can be used in conjunction with <code>-vast-emit-mlir=&lt;dialect&gt;</code> to print the bytecode format instead of the pretty form.</p> </li> </ul> <p>Other available outputs:</p> <ul> <li><code>-vast-emit-llvm</code></li> <li><code>-vast-emit-obj</code></li> <li><code>-vast-emit-asm</code></li> </ul> <p>Additional customization options include:</p> <ul> <li><code>-vast-print-pipeline</code></li> <li><code>-vast-disable-&lt;pipeline-step&gt;</code></li> <li> <p>Options for <code>pipeline-step</code>: \"canonicalize\", \"reduce-hl\", \"standard-types\", etc. (see pipelines section below)</p> </li> <li> <p><code>-vast-simplify</code></p> </li> <li> <p>Simplifies high-level output.</p> </li> <li> <p><code>-vast-show-locs</code></p> </li> <li> <p>Displays locations in MLIR module print.</p> </li> <li> <p><code>-vast-locs-as-meta-ids</code></p> </li> <li>Uses metadata identifiers instead of file locations for locations.</li> </ul>"},{"location":"Tools/vast-front/#debuging-and-diagnostics","title":"Debuging and diagnostics","text":"<ul> <li><code>-vast-emit-crash-reproducer=\"reproducer.mlir\"</code></li> <li> <p>Emits an MLIR transformation crash reproducer; refer to debugging docs.</p> </li> <li> <p><code>-vast-disable-multithreading</code></p> </li> <li> <p>Disables multithreading in pipeline transformations for deterministic debugging.</p> </li> <li> <p><code>-vast-debug</code></p> </li> <li>Prints operations in diagnostics.</li> <li> <p>Prints MLIR stack trace in diagnostics.</p> </li> <li> <p><code>-vast-disable-verifier</code></p> </li> <li> <p>Skips verification of the produced VAST MLIR module.</p> </li> <li> <p><code>vast-snapshot-at=\"pass1;...;passN</code></p> </li> <li>After each pass that was specified as an option store MLIR into a file (format is <code>src.pass_name</code>).</li> <li><code>\"*\"</code> stores snapshot after every conversion.</li> </ul>"},{"location":"Tools/vast-front/#pipelines","title":"Pipelines","text":"<p>WIP pipelines documentation</p>"},{"location":"Tools/vast-lsp-server/","title":"VAST: Language Server Protocol","text":"<p>VAST provides an implementation of LSP language server in the form of the <code>vast-lsp-server</code> tool. This tool interacts with the MLIR C++ API to support rich language queries, such as \u201cFind Definition\u201d.</p> <p>The tool easily integrates with VSCode extension MLIR. The user needs to point the extension to <code>mlir-lsp-server</code>. To do so, one can create a symbolic link named <code>mlir-lsp-server</code> to point to built <code>vast-lsp-server</code>.</p>"},{"location":"Tools/vast-lsp-server/#build","title":"Build","text":"<p>To build <code>vast-lsp-server</code> use:</p> <pre><code>cmake --build &lt;build-dir&gt; --target vast-lsp-server\n</code></pre>"},{"location":"Tools/vast-opt/","title":"VAST: Optimizer","text":"<p>After <code>mlir</code> module from <code>vast-cc</code> is produced, we can leverage our optimisation pipeline to transform module in various ways. The lowest level we can do is LLVM dialect, from which we can dump LLVM IR if desired.</p> <p>Overall design philosophy is that passes try to be really modular, self-contained and doing one thing properly - all while trying to preserve provenance metadata. Sometimes this does not exactly hold (transformation from <code>HL</code> into <code>LL</code> is huge) but it is what we strive for. Passes will more often than not have some dependencies between themselves - always consult documentation if unsure and report an issue if wiki is out of date on this.</p>"},{"location":"Tools/vast-opt/#metadata-and-passes","title":"Metadata and passes","text":"<p>TODO: Improve once we have examples</p> <p>TL;DR: Vast provided passes always try to keep metadata (and they should do a good job), but for passes from other sources this does not hold and probably some heuristic will be used to re-compute them in best-effort.</p>"},{"location":"Tools/vast-opt/#passes","title":"Passes","text":"<p>Passes we have implemented can be roughly grouped into several categories. We also note some of the native mlir passes that are needed to continue with transformations to reach LLVM dialect.</p>"},{"location":"Tools/vast-opt/#type-lowering","title":"Type lowering","text":"<p>A common prerequisite for other passes is to lower <code>HL</code> types into standard types. This can be done in two steps:  * <code>--vast-hl-lower-types</code>    - Converts simple (non-struct) types according to provided data layout (embedded in the mlir module metadata).  * <code>--vast-hl-structs-to-tuples</code>    - Converts <code>HL</code> struct types into standard tuples</p> <p>While these should be commutative, the preferred order is <code>--vast-hl-lower-types --vast-hl-structs-to-tuples</code></p>"},{"location":"Tools/vast-opt/#hl-scf","title":"HL -&gt; SCF","text":"<ul> <li><code>--vast-hl-to-scf</code></li> <li>Requires:<ul> <li>Type lowering</li> </ul> </li> <li>Conversion of <code>HL</code> control flow ops (currently only <code>hl.if</code> and <code>hl.while</code>) into their <code>scf</code> equivalents. Since <code>scf</code> requires <code>i1</code> in their conditions, additional casts may be inserted to satisfy this requirement (currently they are emitted in <code>HL</code> however this behaviour should customisable eventually.</li> </ul> <p>To produce an LLVM following addition passes must be run <code>--convert-scf-to-std --convert-std-to-llvm</code> and possibly <code>--vast-hl-to-ll</code> as well (or some equivalent, depending on how conditions are coerced)</p>"},{"location":"Tools/vast-opt/#hl-ll","title":"HL -&gt; LL","text":"<ul> <li><code>--vast-hl-to-ll</code></li> <li>Requires:<ul> <li>Type lowering</li> <li>Some form of control flow lowering</li> </ul> </li> <li>Lower all <code>HL</code> operation into their LLVM dialect equivalents - this is a rather huge pass, for details see its documentation.</li> </ul>"},{"location":"Tools/vast-opt/#llvm-dump","title":"LLVM Dump","text":"<ul> <li><code>--vast-llvm-dump</code></li> <li>Requires:<ul> <li>Entire module must be in LLVM dialect (or have operation for which conversion hooks are provided)</li> </ul> </li> <li>LLVM bitcode is dumped to <code>llvm::errs()</code> in human readable form. Since passes can run in parallel, dump to file is non-trivial.</li> </ul>"},{"location":"Tools/vast-opt/#example-usage","title":"Example Usage","text":"<p>Let's say we have file <code>main.c</code> which we want to lower into some dialect. First let's have a look at some generic invocations we may find handy:</p> <p>To get mlir module via <code>vast-cc</code></p> <pre><code>vast-cc --ccopts -xc --from-source main.c\n</code></pre> <p>A quick remainder  * <code>--ccopts -xc</code> says we are doing <code>C</code> not <code>C++</code>  * <code>--from-source file</code> says that source code comes from the file</p> <p>Once we have the module, we can invoke <code>vast-opt</code>, with easiest way being a simple pipe</p> <pre><code>vast-cc --ccopts -xc --from-source main.c | vast-opt pass-we-want another-pass-we-want\n</code></pre> <p>If we want, we can also chain pipes</p> <pre><code>vast-cc --ccopts -xc --from-source main.c | vast-opt pass | vast-opt another-pass | ...\n</code></pre> <p>Now, let's say we want to lower into LLVM bitcode, therefore the invocation will look as follows</p> <pre><code>vast-cc --ccopts -xc --from-source main.c | vast-opt --vast-hl-lower-types --vast-hl-structs-to-tuples\n                                                     --vast-hl-to-scf --convert-scf-to-std --convert-std-to-llvm\n                                                     --vast-hl-to-ll\n</code></pre>"},{"location":"Tools/vast-query/","title":"VAST: Query","text":"<p><code>vast-query</code> is a command line tool to query symbols in the vast generated MLIR. Its primary purpose is to test symbols and their use edges in the produced MLIR. Example of usage:</p> <pre><code>vast-query [options] &lt;input file&gt;\n</code></pre> <p>Options:</p> <pre><code>  --scope=&lt;function name&gt;      - Show values from scope of a given function\n  --show-symbols=&lt;value&gt;       - Show MLIR symbols\n    =functions                 -   show function symbols\n    =types                     -   show type symbols\n    =records                   -   show record symbols\n    =vars                      -   show variable symbols\n    =globs                     -   show global variable symbols\n    =all                       -   show all symbols\n  --symbol-users=&lt;symbol name&gt; - Show users of a given symbol\n</code></pre>"},{"location":"Tools/vast-repl/","title":"VAST: REPL","text":"<p>WIP <code>vast-repl</code> is an interactive MLIR query and modification tool.</p> <p>Commands:</p> <pre><code>exit            - exits repl\n\nhelp            - prints help\nload &lt;filename&gt; - loads source from file\n\nshow &lt;value&gt;    - displays queried value\n    =source         - loaded source code\n    =ast            - clang ast\n    =module         - current VAST MLIR module\n    =symbols        - present symbols in the module\n\nmeta &lt;action&gt;   - operates on metadata for given symbol\n    =add &lt;symbol&gt; &lt;id&gt; - adds &lt;id&gt; meta to &lt;symbol&gt;\n    =get &lt;id&gt;          - gets symbol with &lt;id&gt; meta\n</code></pre>"},{"location":"dialects/HighLevelPasses/","title":"High Level","text":""},{"location":"dialects/HighLevelPasses/#-vast-export-fn-info","title":"<code>-vast-export-fn-info</code>","text":"<p>Create JSON that exports information about function arguments.</p> <p>Lowers module into llvm IR and dumps it on stderr.</p>"},{"location":"dialects/HighLevelPasses/#options","title":"Options","text":"<pre><code>-o : Output JSON file to be created.\n</code></pre>"},{"location":"dialects/HighLevelPasses/#-vast-hl-dce","title":"<code>-vast-hl-dce</code>","text":"<p>Trim dead code</p> <p>Removes unreachable code, such as code after return or break/continue.</p>"},{"location":"dialects/HighLevelPasses/#-vast-hl-lower-elaborated-types","title":"<code>-vast-hl-lower-elaborated-types</code>","text":"<p>Replace <code>hl::ElaboratedType</code> type by its underlying type.</p> <p>Replaces <code>hl::ElaboratedType</code> types by its underlying type.</p> <p>All <code>hl::ElaboratedType</code> are marked illegal and converted by this pass.</p>"},{"location":"dialects/HighLevelPasses/#-vast-hl-lower-enums","title":"<code>-vast-hl-lower-enums</code>","text":"<p>Lower high level representation of enums.</p> <p>Lower enum values and types into their underlying representations. Definition of enum types are erased once conversion is finished.</p>"},{"location":"dialects/HighLevelPasses/#-vast-hl-lower-typedefs","title":"<code>-vast-hl-lower-typedefs</code>","text":"<p>Replace <code>hl::TypeDef</code> type by its underlying aliased type.</p> <p>Replaces <code>hl::TypeDef</code> types by its underlying aliased types. The conversion resolves nested typedefs.</p> <p>All <code>hl::TypeDef</code> are marked illegal and converted by this pass.</p>"},{"location":"dialects/HighLevelPasses/#-vast-hl-lower-types","title":"<code>-vast-hl-lower-types</code>","text":"<p>Lower high-level types to standard types</p> <p>Lower high-level types into standard types which is usually required first step by other passes in the pipeline.</p> <p>Information about bit sizes of high level types is inferred from the data layout of the module, which is derived from the information provided by clang and emitted automatically by <code>vast-cc</code>.</p> <p>TODO: Named types are not yet supported.</p>"},{"location":"dialects/HighLevelPasses/#-vast-hl-splice-trailing-scopes","title":"<code>-vast-hl-splice-trailing-scopes</code>","text":"<p>Remove trailing <code>core::ScopeOp</code>s.</p> <p>Removes trailing scopes.</p>"},{"location":"dialects/HighLevelPasses/#-vast-hl-ude","title":"<code>-vast-hl-ude</code>","text":"<p>Eliminate unused definitions</p> <p>Removes unused definitions, such as typedefs, structs and functions.</p>"},{"location":"dialects/LowLevelPasses/","title":"Low Level","text":""},{"location":"dialects/LowLevelPasses/#-vast-ll-to-llvm","title":"<code>-vast-ll-to-llvm</code>","text":"<p>Convert low level operations to LLVM dialect.</p> <p>Work in progess.</p>"},{"location":"dialects/ABI/ABI/","title":"ABI","text":""},{"location":"dialects/ABI/ABI/#abi-dialect","title":"'abi' Dialect","text":"<p>A vast ABI dialect. Dialect provides operations to describe how arguments and return values are transformed to better model target abi.</p> <ul> <li>'abi' Dialect<ul> <li>Operations<ul> <li>abi.call (::vast::abi::CallOp)<ul> <li>Attributes:</li> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>abi.call_args (::vast::abi::CallArgsOp)<ul> <li>Results:</li> </ul> </li> <li>abi.call_exec (::vast::abi::CallExecutionOp)<ul> <li>Attributes:</li> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>abi.call_rets (::vast::abi::CallRetsOp)<ul> <li>Results:</li> </ul> </li> <li>abi.direct (::vast::abi::DirectOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>abi.epilogue (::vast::abi::EpilogueOp)<ul> <li>Results:</li> </ul> </li> <li>abi.func (::vast::abi::FuncOp)<ul> <li>Attributes:</li> </ul> </li> <li>abi.indirect (::vast::abi::IndirectOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>abi.prologue (::vast::abi::PrologueOp)<ul> <li>Results:</li> </ul> </li> <li>abi.ret_direct (::vast::abi::RetDirectOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>abi.yield (::vast::abi::YieldOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"dialects/ABI/ABI/#operations","title":"Operations","text":""},{"location":"dialects/ABI/ABI/#abicall-vastabicallop","title":"<code>abi.call</code> (::vast::abi::CallOp)","text":"<p>ABI call operation</p> <p>Syntax:</p> <pre><code>operation ::= `abi.call` $callee `(` $args `)` attr-dict `:` functional-type( $args, $results )\n</code></pre> <p>ABI call operation Interfaces: <code>CallOpInterface</code></p>"},{"location":"dialects/ABI/ABI/#attributes","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>callee</code>::mlir::FlatSymbolRefAttrflat symbol reference attribute"},{"location":"dialects/ABI/ABI/#operands","title":"Operands:","text":"Operand Description <code>args</code> variadic of any type"},{"location":"dialects/ABI/ABI/#results","title":"Results:","text":"Result Description <code>results</code> variadic of any type"},{"location":"dialects/ABI/ABI/#abicall_args-vastabicallargsop","title":"<code>abi.call_args</code> (::vast::abi::CallArgsOp)","text":"<p>Not implement yet.</p> <p>Syntax:</p> <pre><code>operation ::= `abi.call_args` $body attr-dict `:` type($results)\n</code></pre> <p>WIP</p>"},{"location":"dialects/ABI/ABI/#results_1","title":"Results:","text":"Result Description <code>results</code> variadic of any type"},{"location":"dialects/ABI/ABI/#abicall_exec-vastabicallexecutionop","title":"<code>abi.call_exec</code> (::vast::abi::CallExecutionOp)","text":"<p>WIP</p> <p>Syntax:</p> <pre><code>operation ::= `abi.call_exec` $callee `(` $args `)` $body attr-dict `:` functional-type($args, $result)\n</code></pre> <p>WIP Interfaces: <code>CallOpInterface</code></p>"},{"location":"dialects/ABI/ABI/#attributes_1","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>callee</code>::mlir::FlatSymbolRefAttrflat symbol reference attribute"},{"location":"dialects/ABI/ABI/#operands_1","title":"Operands:","text":"Operand Description <code>args</code> variadic of any type"},{"location":"dialects/ABI/ABI/#results_2","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/ABI/ABI/#abicall_rets-vastabicallretsop","title":"<code>abi.call_rets</code> (::vast::abi::CallRetsOp)","text":"<p>Not implement yet.</p> <p>Syntax:</p> <pre><code>operation ::= `abi.call_rets` $body attr-dict `:` type($results)\n</code></pre> <p>WIP</p>"},{"location":"dialects/ABI/ABI/#results_3","title":"Results:","text":"Result Description <code>results</code> variadic of any type"},{"location":"dialects/ABI/ABI/#abidirect-vastabidirectop","title":"<code>abi.direct</code> (::vast::abi::DirectOp)","text":"<p>Pass value directly - usually means by register</p> <p>Syntax:</p> <pre><code>operation ::= `abi.direct` $value attr-dict `:` type($value) `-&gt;` type($result)\n</code></pre> <p>Pass value directly - usually means by register.</p>"},{"location":"dialects/ABI/ABI/#operands_2","title":"Operands:","text":"Operand Description <code>value</code> variadic of any type"},{"location":"dialects/ABI/ABI/#results_4","title":"Results:","text":"Result Description <code>result</code> variadic of any type"},{"location":"dialects/ABI/ABI/#abiepilogue-vastabiepilogueop","title":"<code>abi.epilogue</code> (::vast::abi::EpilogueOp)","text":"<p>WIP</p> <p>Syntax:</p> <pre><code>operation ::= `abi.epilogue` $body attr-dict `:` type($results)\n</code></pre> <p>WIP</p>"},{"location":"dialects/ABI/ABI/#results_5","title":"Results:","text":"Result Description <code>results</code> variadic of any type"},{"location":"dialects/ABI/ABI/#abifunc-vastabifuncop","title":"<code>abi.func</code> (::vast::abi::FuncOp)","text":"<p>Function with transformed type.</p> <p>Syntax:</p> <pre><code>operation ::= `abi.func` $sym_name custom&lt; FunctionSignatureAndBody &gt;($function_type, attr-dict, $body)\n</code></pre> <p>Inspired by <code>cir::FuncOp</code> and <code>mlir::func::FuncOp</code>:</p> <p>Operations within the function cannot implicitly capture values defined outside of the function, i.e. Functions are <code>IsolatedFromAbove</code>. All external references must use function arguments or attributes that establish a symbolic connection (e.g. symbols referenced by name via a string attribute like SymbolRefAttr). An external function declaration (used when referring to a function declared in some other module) has no body.</p> <p>The function linkage information is specified by <code>linkage</code>, as defined by <code>GlobalLinkageKind</code> attribute.</p> <p>Traits: <code>AutomaticAllocationScope</code>, <code>IsolatedFromAbove</code>, <code>NoTerminator</code></p> <p>Interfaces: <code>CallableOpInterface</code>, <code>FuncSymbol</code>, <code>FunctionOpInterface</code>, <code>RegionKindInterface</code>, <code>Symbol</code>, <code>VastSymbol</code></p>"},{"location":"dialects/ABI/ABI/#attributes_2","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>sym_name</code>::mlir::StringAttrstring attribute <code>function_type</code>::mlir::TypeAttrtype attribute of function type <code>linkage</code>::vast::core::GlobalLinkageKindAttrglobal linkage kind <code>sym_visibility</code>::mlir::StringAttrstring attribute <code>arg_attrs</code>::mlir::ArrayAttrArray of dictionary attributes <code>res_attrs</code>::mlir::ArrayAttrArray of dictionary attributes"},{"location":"dialects/ABI/ABI/#abiindirect-vastabiindirectop","title":"<code>abi.indirect</code> (::vast::abi::IndirectOp)","text":"<p>Value is passed indirectly via memory</p> <p>Syntax:</p> <pre><code>operation ::= `abi.indirect` $value attr-dict `:` type($value) `-&gt;` type($result)\n</code></pre> <p>Value is passed indirectly via memory</p>"},{"location":"dialects/ABI/ABI/#operands_3","title":"Operands:","text":"Operand Description <code>value</code> any type"},{"location":"dialects/ABI/ABI/#results_6","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/ABI/ABI/#abiprologue-vastabiprologueop","title":"<code>abi.prologue</code> (::vast::abi::PrologueOp)","text":"<p>WIP</p> <p>Syntax:</p> <pre><code>operation ::= `abi.prologue` $body attr-dict `:` type($results)\n</code></pre> <p>WIP</p>"},{"location":"dialects/ABI/ABI/#results_7","title":"Results:","text":"Result Description <code>results</code> variadic of any type"},{"location":"dialects/ABI/ABI/#abiret_direct-vastabiretdirectop","title":"<code>abi.ret_direct</code> (::vast::abi::RetDirectOp)","text":"<p>Value is returned directly.</p> <p>Syntax:</p> <pre><code>operation ::= `abi.ret_direct` $value attr-dict `:` type($value) `-&gt;` type($result)\n</code></pre> <p>Value is returned directly.</p>"},{"location":"dialects/ABI/ABI/#operands_4","title":"Operands:","text":"Operand Description <code>value</code> any type"},{"location":"dialects/ABI/ABI/#results_8","title":"Results:","text":"Result Description <code>result</code> variadic of any type"},{"location":"dialects/ABI/ABI/#abiyield-vastabiyieldop","title":"<code>abi.yield</code> (::vast::abi::YieldOp)","text":"<p>WIP</p> <p>Syntax:</p> <pre><code>operation ::= `abi.yield` $values attr-dict `:` type($values) `-&gt;` type($result)\n</code></pre> <p>WIP Traits: <code>Terminator</code></p>"},{"location":"dialects/ABI/ABI/#operands_5","title":"Operands:","text":"Operand Description <code>values</code> variadic of any type"},{"location":"dialects/ABI/ABI/#results_9","title":"Results:","text":"Result Description <code>result</code> variadic of any type"},{"location":"dialects/Builtin/Builtin/","title":"Builtin","text":""},{"location":"dialects/Builtin/Builtin/#hlbi-dialect","title":"'hlbi' Dialect","text":"<p>Dialect for representing compiler builtin constructs Dialect for representing compiler builtin constructs.</p> <ul> <li>'hlbi' Dialect<ul> <li>Operations<ul> <li>hlbi.dbgtrap (::vast::hlbi::DebugTrapOp)<ul> <li>Results:</li> </ul> </li> <li>hlbi.trap (::vast::hlbi::TrapOp)<ul> <li>Results:</li> </ul> </li> <li>hlbi.va_copy (::vast::hlbi::VACopyOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hlbi.va_end (::vast::hlbi::VAEndOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hlbi.va_start (::vast::hlbi::VAStartOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> </ul> </li> <li>Types<ul> <li>VAListType</li> </ul> </li> </ul> </li> </ul>"},{"location":"dialects/Builtin/Builtin/#operations","title":"Operations","text":""},{"location":"dialects/Builtin/Builtin/#hlbidbgtrap-vasthlbidebugtrapop","title":"<code>hlbi.dbgtrap</code> (::vast::hlbi::DebugTrapOp)","text":"<p>Builtin debug trap op</p> <p>Syntax:</p> <pre><code>operation ::= `hlbi.dbgtrap` `:` type($result) attr-dict\n</code></pre>"},{"location":"dialects/Builtin/Builtin/#results","title":"Results:","text":"Result Description <code>result</code> Type with VoidTrit"},{"location":"dialects/Builtin/Builtin/#hlbitrap-vasthlbitrapop","title":"<code>hlbi.trap</code> (::vast::hlbi::TrapOp)","text":"<p>Builtin trap op</p> <p>Syntax:</p> <pre><code>operation ::= `hlbi.trap` `:` type($result) attr-dict\n</code></pre>"},{"location":"dialects/Builtin/Builtin/#results_1","title":"Results:","text":"Result Description <code>result</code> Type with VoidTrit"},{"location":"dialects/Builtin/Builtin/#hlbiva_copy-vasthlbivacopyop","title":"<code>hlbi.va_copy</code> (::vast::hlbi::VACopyOp)","text":"<p>Start of the variable argument list</p> <p>Syntax:</p> <pre><code>operation ::= `hlbi.va_copy` $src_list `to` $trg_list `:` functional-type(operands, $result) attr-dict\n</code></pre>"},{"location":"dialects/Builtin/Builtin/#operands","title":"Operands:","text":"Operand Description <code>src_list</code> any type <code>trg_list</code> any type"},{"location":"dialects/Builtin/Builtin/#results_2","title":"Results:","text":"Result Description <code>result</code> Type with VoidTrit"},{"location":"dialects/Builtin/Builtin/#hlbiva_end-vasthlbivaendop","title":"<code>hlbi.va_end</code> (::vast::hlbi::VAEndOp)","text":"<p>End of the variable argument list</p> <p>Syntax:</p> <pre><code>operation ::= `hlbi.va_end` $arg_list `:` functional-type(operands, $result) attr-dict\n</code></pre>"},{"location":"dialects/Builtin/Builtin/#operands_1","title":"Operands:","text":"Operand Description <code>arg_list</code> any type"},{"location":"dialects/Builtin/Builtin/#results_3","title":"Results:","text":"Result Description <code>result</code> Type with VoidTrit"},{"location":"dialects/Builtin/Builtin/#hlbiva_start-vasthlbivastartop","title":"<code>hlbi.va_start</code> (::vast::hlbi::VAStartOp)","text":"<p>Start of the variable argument list</p> <p>Syntax:</p> <pre><code>operation ::= `hlbi.va_start` $arg_list `size` $count `:` functional-type(operands, $result) attr-dict\n</code></pre>"},{"location":"dialects/Builtin/Builtin/#operands_2","title":"Operands:","text":"Operand Description <code>arg_list</code> any type <code>count</code> any type"},{"location":"dialects/Builtin/Builtin/#results_4","title":"Results:","text":"Result Description <code>result</code> Type with VoidTrit"},{"location":"dialects/Builtin/Builtin/#types","title":"Types","text":""},{"location":"dialects/Builtin/Builtin/#valisttype","title":"VAListType","text":"<p>va_list type</p> <p>Syntax: <code>!hlbi.va_list</code></p> <p>Represents target-agnostic va_list type.</p>"},{"location":"dialects/Core/Core/","title":"Core","text":""},{"location":"dialects/Core/Core/#core-dialect","title":"'core' Dialect","text":"<p>Utility dialect to provide common features for other dialects. Dialect providing features that may be used by other dialects. These features can be used by including \"vast/Dialect/Core/Utils.td\" It also provides lazy.op for lazy evaluation of expressions and binary logical operations that make use of it.</p> <ul> <li>'core' Dialect<ul> <li>Operations<ul> <li>core.bin.land (::vast::core::BinLAndOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>core.bin.lor (::vast::core::BinLOrOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>core.implicit.return (::vast::core::ImplicitReturnOp)<ul> <li>Operands:</li> </ul> </li> <li>core.lazy.op (::vast::core::LazyOp)<ul> <li>Results:</li> </ul> </li> <li>core.scope (::vast::core::ScopeOp)</li> <li>core.select (::vast::core::SelectOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> </ul> </li> <li>Attributes<ul> <li>BooleanAttr<ul> <li>Parameters:</li> </ul> </li> <li>FloatAttr<ul> <li>Parameters:</li> </ul> </li> <li>GlobalLinkageKindAttr<ul> <li>Parameters:</li> </ul> </li> <li>IntegerAttr<ul> <li>Parameters:</li> </ul> </li> <li>SourceLanguageAttr<ul> <li>Parameters:</li> </ul> </li> <li>VoidAttr<ul> <li>Parameters:</li> </ul> </li> </ul> </li> <li>Types<ul> <li>FunctionType<ul> <li>Parameters:</li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"dialects/Core/Core/#operations","title":"Operations","text":""},{"location":"dialects/Core/Core/#corebinland-vastcorebinlandop","title":"<code>core.bin.land</code> (::vast::core::BinLAndOp)","text":"<p>VAST core dialect logical binary operation</p> <p>Syntax:</p> <pre><code>operation ::= `core.bin.land` $lhs `,` $rhs attr-dict `:` functional-type(operands, results)\n</code></pre> <p>Core dialect logical binary operation. This operation takes two operands and returns one result, each of these is required to be of the same type.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  %lhs, %rhs  : type"},{"location":"dialects/Core/Core/#operands","title":"Operands:","text":"Operand Description <code>lhs</code> any type <code>rhs</code> any type"},{"location":"dialects/Core/Core/#results","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/Core/Core/#corebinlor-vastcorebinlorop","title":"<code>core.bin.lor</code> (::vast::core::BinLOrOp)","text":"<p>VAST core dialect logical binary operation</p> <p>Syntax:</p> <pre><code>operation ::= `core.bin.lor` $lhs `,` $rhs attr-dict `:` functional-type(operands, results)\n</code></pre> <p>Core dialect logical binary operation. This operation takes two operands and returns one result, each of these is required to be of the same type.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  %lhs, %rhs  : type"},{"location":"dialects/Core/Core/#operands_1","title":"Operands:","text":"Operand Description <code>lhs</code> any type <code>rhs</code> any type"},{"location":"dialects/Core/Core/#results_1","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/Core/Core/#coreimplicitreturn-vastcoreimplicitreturnop","title":"<code>core.implicit.return</code> (::vast::core::ImplicitReturnOp)","text":"<p>VAST implicit return</p> <p>Syntax:</p> <pre><code>operation ::= `core.implicit.return` $result `:` type($result) attr-dict\n</code></pre> <p>Op representing return that wasn't explicitely written in the source (e.g. in void fun(){}).</p> <p>Traits: <code>ReturnLikeTrait</code>, <code>SoftTerminatorTrait</code></p>"},{"location":"dialects/Core/Core/#operands_2","title":"Operands:","text":"Operand Description <code>result</code> variadic of any type"},{"location":"dialects/Core/Core/#corelazyop-vastcorelazyop","title":"<code>core.lazy.op</code> (::vast::core::LazyOp)","text":"<p>Lazily evaluate a region.</p> <p>Syntax:</p> <pre><code>operation ::= `core.lazy.op` $lazy attr-dict `:` type(results)\n</code></pre> <p>The operation serves to encapsulate delayed evaluation in its region.</p> <p>Traits: <code>NoTerminator</code></p>"},{"location":"dialects/Core/Core/#results_2","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/Core/Core/#corescope-vastcorescopeop","title":"<code>core.scope</code> (::vast::core::ScopeOp)","text":"<p>VAST scope declaration</p> <p>Syntax:</p> <pre><code>operation ::= `core.scope` $body attr-dict\n</code></pre> <p>Scope operation servers to represent explicitly high-level code scope. Other control flow operations represent scopes implicitly.  It is a single-region operation.</p> <p>Traits: <code>NoTerminator</code></p> <p>Interfaces: <code>RegionKindInterface</code></p>"},{"location":"dialects/Core/Core/#coreselect-vastcoreselectop","title":"<code>core.select</code> (::vast::core::SelectOp)","text":"<p>Select a value based on condition.</p> <p>Syntax:</p> <pre><code>operation ::= `core.select` $cond `,` $thenRegion `,` $elseRegion attr-dict `:` functional-type(operands, results)\n</code></pre> <p>Usual select operation. First operand is selected if predicate is true, second otherwise (to mirror how ternary works in C).</p> <p>%result =  %cond %lhs, %rhs  : type"},{"location":"dialects/Core/Core/#operands_3","title":"Operands:","text":"Operand Description <code>cond</code> any type <code>thenRegion</code> any type <code>elseRegion</code> any type"},{"location":"dialects/Core/Core/#results_3","title":"Results:","text":"Result Description <code>results</code> variadic of any type"},{"location":"dialects/Core/Core/#attributes","title":"Attributes","text":""},{"location":"dialects/Core/Core/#booleanattr","title":"BooleanAttr","text":"<p>An Attribute containing a boolean value</p> <p>Syntax:</p> <pre><code>#core.bool&lt;\n  ::mlir::Type,   # type\n  bool   # value\n&gt;\n</code></pre> <p>An boolean attribute is a literal attribute that represents a boolean value.</p>"},{"location":"dialects/Core/Core/#parameters","title":"Parameters:","text":"Parameter C++ type Description type <code>::mlir::Type</code> value <code>bool</code>"},{"location":"dialects/Core/Core/#floatattr","title":"FloatAttr","text":"<p>An Attribute containing a floating point value</p> <p>Syntax:</p> <pre><code>#core.float&lt;\n  ::mlir::Type,   # type\n  ::llvm::APFloat   # value\n&gt;\n</code></pre> <p>A float attribute is a literal attribute that represents a floating point value of the specified floating point type.</p>"},{"location":"dialects/Core/Core/#parameters_1","title":"Parameters:","text":"Parameter C++ type Description type <code>::mlir::Type</code> value <code>::llvm::APFloat</code>"},{"location":"dialects/Core/Core/#globallinkagekindattr","title":"GlobalLinkageKindAttr","text":"<p>Linkage type/kind</p> <p>Syntax:</p> <pre><code>#core.global_linkage_kind&lt;\n  ::vast::core::GlobalLinkageKind   # value\n&gt;\n</code></pre> <p>Enum cases: * external (<code>ExternalLinkage</code>) * available_externally (<code>AvailableExternallyLinkage</code>) * linkonce (<code>LinkOnceAnyLinkage</code>) * linkonce_odr (<code>LinkOnceODRLinkage</code>) * weak (<code>WeakAnyLinkage</code>) * weak_odr (<code>WeakODRLinkage</code>) * internal (<code>InternalLinkage</code>) * private (<code>PrivateLinkage</code>) * extern_weak (<code>ExternalWeakLinkage</code>) * common (<code>CommonLinkage</code>) * appending (<code>AppendingLinkage</code>)</p>"},{"location":"dialects/Core/Core/#parameters_2","title":"Parameters:","text":"Parameter C++ type Description value <code>::vast::core::GlobalLinkageKind</code> an enum of type GlobalLinkageKind"},{"location":"dialects/Core/Core/#integerattr","title":"IntegerAttr","text":"<p>An Attribute containing a integer value</p> <p>Syntax:</p> <pre><code>#core.integer&lt;\n  ::mlir::Type,   # type\n  ::llvm::APSInt   # value\n&gt;\n</code></pre> <p>An integer attribute is a literal attribute that represents an integral value of the specified integer type.</p>"},{"location":"dialects/Core/Core/#parameters_3","title":"Parameters:","text":"Parameter C++ type Description type <code>::mlir::Type</code> value <code>::llvm::APSInt</code>"},{"location":"dialects/Core/Core/#sourcelanguageattr","title":"SourceLanguageAttr","text":"<p>Module source language</p> <p>Syntax:</p> <pre><code>#core.lang&lt;\n  ::vast::core::SourceLanguage   # value\n&gt;\n</code></pre> <p>Represents the source language used to generate the module.</p> <p>Example:</p> <pre><code>// Module compiled from C.\nmodule attributes {vast.core.lang = vast.core.lang&lt;c&gt;} {}\n// Module compiled from C++.\nmodule attributes {vast.core.lang = vast.core.lang&lt;cxx&gt;} {}\n</code></pre>"},{"location":"dialects/Core/Core/#parameters_4","title":"Parameters:","text":"Parameter C++ type Description value <code>::vast::core::SourceLanguage</code> an enum of type SourceLanguage"},{"location":"dialects/Core/Core/#voidattr","title":"VoidAttr","text":"<p>Attribute to represent void value.</p> <p>Syntax:</p> <pre><code>#core.void&lt;\n  ::mlir::Type   # type\n&gt;\n</code></pre> <p>The VoidAttr is used to return void from statements uniformly.</p>"},{"location":"dialects/Core/Core/#parameters_5","title":"Parameters:","text":"Parameter C++ type Description type <code>::mlir::Type</code>"},{"location":"dialects/Core/Core/#types","title":"Types","text":""},{"location":"dialects/Core/Core/#functiontype","title":"FunctionType","text":"<p>Vast function type</p> <p>Syntax:</p> <pre><code>!core.fn&lt;\n  ::llvm::ArrayRef&lt;Type&gt;,   # inputs\n  ::llvm::ArrayRef&lt;Type&gt;,   # results\n  bool   # varArg\n&gt;\n</code></pre> <p>The <code>!core.fn</code> is a function type. It consists of a variadic return type, and list of parameter types and can optionally be variadic.</p> <p>Example:</p> <pre><code>!core.fn&lt;!hl.bool ()&gt;\n!core.fn&lt;!hl.int (!hl.char, !hl.char)&gt;\n!core.fn&lt;!i32 (!i32, ...)&gt;\n</code></pre>"},{"location":"dialects/Core/Core/#parameters_6","title":"Parameters:","text":"Parameter C++ type Description inputs <code>::llvm::ArrayRef&lt;Type&gt;</code> results <code>::llvm::ArrayRef&lt;Type&gt;</code> varArg <code>bool</code>"},{"location":"dialects/HighLevel/HighLevel/","title":"High Level","text":""},{"location":"dialects/HighLevel/HighLevel/#hl-dialect","title":"'hl' Dialect","text":"<p>A high-level verbose program analysis MLIR dialect. This dialect intends capture highevel constructs of C/C++ for further program analysis.</p> <ul> <li>'hl' Dialect<ul> <li>Operations<ul> <li>hl.access (::vast::hl::AccessSpecifierOp)<ul> <li>Attributes:</li> </ul> </li> <li>hl.add (::vast::hl::AddIOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.addressof (::vast::hl::AddressOf)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.alias (::vast::hl::TypeAliasOp)<ul> <li>Attributes:</li> </ul> </li> <li>hl.alignof.expr (::vast::hl::AlignOfExprOp)<ul> <li>Results:</li> </ul> </li> <li>hl.alignof.type (::vast::hl::AlignOfTypeOp)<ul> <li>Attributes:</li> <li>Results:</li> </ul> </li> <li>hl.asm (::vast::hl::AsmOp)<ul> <li>Attributes:</li> <li>Operands:</li> </ul> </li> <li>hl.assign (::vast::hl::AssignOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.assign.add (::vast::hl::AddIAssignOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.assign.bin.and (::vast::hl::BinAndAssignOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.assign.bin.ashr (::vast::hl::BinAShrAssignOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.assign.bin.lshr (::vast::hl::BinLShrAssignOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.assign.bin.or (::vast::hl::BinOrAssignOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.assign.bin.shl (::vast::hl::BinShlAssignOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.assign.bin.xor (::vast::hl::BinXorAssignOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.assign.fadd (::vast::hl::AddFAssignOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.assign.fdiv (::vast::hl::DivFAssignOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.assign.fmul (::vast::hl::MulFAssignOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.assign.frem (::vast::hl::RemFAssignOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.assign.fsub (::vast::hl::SubFAssignOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.assign.mul (::vast::hl::MulIAssignOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.assign.sdiv (::vast::hl::DivSAssignOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.assign.srem (::vast::hl::RemSAssignOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.assign.sub (::vast::hl::SubIAssignOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.assign.udiv (::vast::hl::DivUAssignOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.assign.urem (::vast::hl::RemUAssignOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.base (::vast::hl::CxxBaseSpecifierOp)<ul> <li>Attributes:</li> </ul> </li> <li>hl.bin.and (::vast::hl::BinAndOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.bin.ashr (::vast::hl::BinAShrOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.bin.comma (::vast::hl::BinComma)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.bin.land (::vast::hl::BinLAndOp)<ul> <li>Results:</li> </ul> </li> <li>hl.bin.lor (::vast::hl::BinLOrOp)<ul> <li>Results:</li> </ul> </li> <li>hl.bin.lshr (::vast::hl::BinLShrOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.bin.or (::vast::hl::BinOrOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.bin.shl (::vast::hl::BinShlOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.bin.xor (::vast::hl::BinXorOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.binary_cond (::vast::hl::BinaryCondOp)<ul> <li>Results:</li> </ul> </li> <li>hl.break (::vast::hl::BreakOp)</li> <li>hl.builtin_bitcast (::vast::hl::BuiltinBitCastOp)<ul> <li>Attributes:</li> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.call (::vast::hl::CallOp)<ul> <li>Attributes:</li> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.case (::vast::hl::CaseOp)</li> <li>hl.class (::vast::hl::ClassDeclOp)<ul> <li>Attributes:</li> </ul> </li> <li>hl.cmp (::vast::hl::CmpOp)<ul> <li>Attributes:</li> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.compound_literal (::vast::hl::CompoundLiteralOp)<ul> <li>Results:</li> </ul> </li> <li>hl.cond (::vast::hl::CondOp)<ul> <li>Results:</li> </ul> </li> <li>hl.cond.yield (::vast::hl::CondYieldOp)<ul> <li>Operands:</li> </ul> </li> <li>hl.const (::vast::hl::ConstantOp)<ul> <li>Attributes:</li> <li>Results:</li> </ul> </li> <li>hl.const.init (::vast::hl::InitializedConstantOp)<ul> <li>Results:</li> </ul> </li> <li>hl.continue (::vast::hl::ContinueOp)</li> <li>hl.cstyle_cast (::vast::hl::CStyleCastOp)<ul> <li>Attributes:</li> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.cxxstruct (::vast::hl::CxxStructDeclOp)<ul> <li>Attributes:</li> </ul> </li> <li>hl.default (::vast::hl::DefaultOp)</li> <li>hl.deref (::vast::hl::Deref)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.do (::vast::hl::DoOp)</li> <li>hl.empty.decl (::vast::hl::EmptyDeclOp)</li> <li>hl.enum (::vast::hl::EnumDeclOp)<ul> <li>Attributes:</li> </ul> </li> <li>hl.enum.const (::vast::hl::EnumConstantOp)<ul> <li>Attributes:</li> </ul> </li> <li>hl.enumref (::vast::hl::EnumRefOp)<ul> <li>Attributes:</li> <li>Results:</li> </ul> </li> <li>hl.expr (::vast::hl::ExprOp)<ul> <li>Results:</li> </ul> </li> <li>hl.fadd (::vast::hl::AddFOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.fcmp (::vast::hl::FCmpOp)<ul> <li>Attributes:</li> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.fdiv (::vast::hl::DivFOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.field (::vast::hl::FieldDeclOp)<ul> <li>Attributes:</li> </ul> </li> <li>hl.fmul (::vast::hl::MulFOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.for (::vast::hl::ForOp)</li> <li>hl.frem (::vast::hl::RemFOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.fsub (::vast::hl::SubFOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.func (::vast::hl::FuncOp)<ul> <li>Attributes:</li> </ul> </li> <li>hl.funcref (::vast::hl::FuncRefOp)<ul> <li>Attributes:</li> <li>Results:</li> </ul> </li> <li>hl.globref (::vast::hl::GlobalRefOp)<ul> <li>Attributes:</li> <li>Results:</li> </ul> </li> <li>hl.gnu.extension (::vast::hl::ExtensionOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.goto (::vast::hl::GotoStmt)<ul> <li>Operands:</li> </ul> </li> <li>hl.if (::vast::hl::IfOp)</li> <li>hl.imag (::vast::hl::ImagOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.implicit_cast (::vast::hl::ImplicitCastOp)<ul> <li>Attributes:</li> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.indirect_call (::vast::hl::IndirectCallOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.indirect_goto (::vast::hl::IndirectGotoStmt)</li> <li>hl.initlist (::vast::hl::InitListExpr)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.label (::vast::hl::LabelStmt)<ul> <li>Operands:</li> </ul> </li> <li>hl.label.decl (::vast::hl::LabelDeclOp)<ul> <li>Attributes:</li> <li>Results:</li> </ul> </li> <li>hl.labeladdr (::vast::hl::AddrLabelExpr)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.lnot (::vast::hl::LNotOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.member (::vast::hl::RecordMemberOp)<ul> <li>Attributes:</li> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.minus (::vast::hl::MinusOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.mul (::vast::hl::MulIOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.not (::vast::hl::NotOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.offsetof.expr (::vast::hl::OffsetOfExprOp)<ul> <li>Attributes:</li> <li>Results:</li> </ul> </li> <li>hl.opaque_expr (::vast::hl::OpaqueValueExpr)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.plus (::vast::hl::PlusOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.post.dec (::vast::hl::PostDecOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.post.inc (::vast::hl::PostIncOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.pre.dec (::vast::hl::PreDecOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.pre.inc (::vast::hl::PreIncOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.predefined.expr (::vast::hl::PredefinedExpr)<ul> <li>Attributes:</li> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.preferred_alignof.expr (::vast::hl::PreferredAlignOfExprOp)<ul> <li>Results:</li> </ul> </li> <li>hl.preferred_alignof.type (::vast::hl::PreferredAlignOfTypeOp)<ul> <li>Attributes:</li> <li>Results:</li> </ul> </li> <li>hl.real (::vast::hl::RealOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.ref (::vast::hl::DeclRefOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.return (::vast::hl::ReturnOp)<ul> <li>Operands:</li> </ul> </li> <li>hl.sdiv (::vast::hl::DivSOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.sizeof.expr (::vast::hl::SizeOfExprOp)<ul> <li>Results:</li> </ul> </li> <li>hl.sizeof.type (::vast::hl::SizeOfTypeOp)<ul> <li>Attributes:</li> <li>Results:</li> </ul> </li> <li>hl.skip (::vast::hl::SkipStmt)</li> <li>hl.srem (::vast::hl::RemSOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.stmt.expr (::vast::hl::StmtExprOp)<ul> <li>Results:</li> </ul> </li> <li>hl.struct (::vast::hl::StructDeclOp)<ul> <li>Attributes:</li> </ul> </li> <li>hl.sub (::vast::hl::SubIOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.subscript (::vast::hl::SubscriptOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.switch (::vast::hl::SwitchOp)</li> <li>hl.this (::vast::hl::ThisOp)<ul> <li>Results:</li> </ul> </li> <li>hl.translation_unit (::vast::hl::TranslationUnitOp)</li> <li>hl.type (::vast::hl::TypeDeclOp)<ul> <li>Attributes:</li> </ul> </li> <li>hl.type.yield (::vast::hl::TypeYieldOp)<ul> <li>Operands:</li> </ul> </li> <li>hl.typedef (::vast::hl::TypeDefOp)<ul> <li>Attributes:</li> </ul> </li> <li>hl.typeof.expr (::vast::hl::TypeOfExprOp)<ul> <li>Attributes:</li> </ul> </li> <li>hl.udiv (::vast::hl::DivUOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.union (::vast::hl::UnionDeclOp)<ul> <li>Attributes:</li> </ul> </li> <li>hl.unreachable (::vast::hl::UnreachableOp)</li> <li>hl.urem (::vast::hl::RemUOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.va_arg_expr (::vast::hl::VAArgExpr)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.value.yield (::vast::hl::ValueYieldOp)<ul> <li>Operands:</li> </ul> </li> <li>hl.var (::vast::hl::VarDeclOp)<ul> <li>Attributes:</li> <li>Results:</li> </ul> </li> <li>hl.while (::vast::hl::WhileOp)</li> </ul> </li> <li>Attributes<ul> <li>AliasAttr<ul> <li>Parameters:</li> </ul> </li> <li>AlignedAttr</li> <li>AllocAlignAttr<ul> <li>Parameters:</li> </ul> </li> <li>AllocSizeAttr<ul> <li>Parameters:</li> </ul> </li> <li>AlwaysInlineAttr</li> <li>AnnotationAttr<ul> <li>Parameters:</li> </ul> </li> <li>AsmLabelAttr<ul> <li>Parameters:</li> </ul> </li> <li>AvailabilityAttrAttr</li> <li>AvailableOnlyInDefaultEvalMethodAttr</li> <li>BuiltinAttr<ul> <li>Parameters:</li> </ul> </li> <li>CVQualifiersAttr<ul> <li>Parameters:</li> </ul> </li> <li>CVRQualifiersAttr<ul> <li>Parameters:</li> </ul> </li> <li>ColdAttr</li> <li>ConstAttr</li> <li>DeprecatedAttr<ul> <li>Parameters:</li> </ul> </li> <li>FormatAttr<ul> <li>Parameters:</li> </ul> </li> <li>LeafAttr</li> <li>LoaderUninitializedAttr</li> <li>MaxFieldAlignmentAttr<ul> <li>Parameters:</li> </ul> </li> <li>MayAliasAttr</li> <li>ModeAttr<ul> <li>Parameters:</li> </ul> </li> <li>NoInlineAttr</li> <li>NoInstrumentFunctionAttr</li> <li>NoThrowAttr</li> <li>NonNullAttr</li> <li>OffsetOfNodeAttr<ul> <li>Parameters:</li> </ul> </li> <li>PackedAttr</li> <li>PureAttr</li> <li>RestrictAttr</li> <li>ReturnsTwiceAttr</li> <li>SectionAttr<ul> <li>Parameters:</li> </ul> </li> <li>TransparentUnionAttr</li> <li>UCVQualifiersAttr<ul> <li>Parameters:</li> </ul> </li> <li>WarnUnusedResultAttr</li> </ul> </li> <li>Types<ul> <li>AdjustedType<ul> <li>Parameters:</li> </ul> </li> <li>ArrayType<ul> <li>Parameters:</li> </ul> </li> <li>AtomicType<ul> <li>Parameters:</li> </ul> </li> <li>AttributedType<ul> <li>Parameters:</li> </ul> </li> <li>BFloat16Type<ul> <li>Parameters:</li> </ul> </li> <li>BoolType<ul> <li>Parameters:</li> </ul> </li> <li>CharType<ul> <li>Parameters:</li> </ul> </li> <li>ComplexType<ul> <li>Parameters:</li> </ul> </li> <li>DecayedType<ul> <li>Parameters:</li> </ul> </li> <li>DoubleType<ul> <li>Parameters:</li> </ul> </li> <li>ElaboratedType<ul> <li>Parameters:</li> </ul> </li> <li>EnumType<ul> <li>Parameters:</li> </ul> </li> <li>Float128Type<ul> <li>Parameters:</li> </ul> </li> <li>FloatType<ul> <li>Parameters:</li> </ul> </li> <li>HalfType<ul> <li>Parameters:</li> </ul> </li> <li>Int128Type<ul> <li>Parameters:</li> </ul> </li> <li>IntType<ul> <li>Parameters:</li> </ul> </li> <li>LValueType<ul> <li>Parameters:</li> </ul> </li> <li>LabelType</li> <li>LongDoubleType<ul> <li>Parameters:</li> </ul> </li> <li>LongLongType<ul> <li>Parameters:</li> </ul> </li> <li>LongType<ul> <li>Parameters:</li> </ul> </li> <li>ParenType<ul> <li>Parameters:</li> </ul> </li> <li>PointerType<ul> <li>Parameters:</li> </ul> </li> <li>RValueType<ul> <li>Parameters:</li> </ul> </li> <li>RecordType<ul> <li>Parameters:</li> </ul> </li> <li>ReferenceType<ul> <li>Parameters:</li> </ul> </li> <li>ShortType<ul> <li>Parameters:</li> </ul> </li> <li>TypeOfExprType<ul> <li>Parameters:</li> </ul> </li> <li>TypeOfTypeType<ul> <li>Parameters:</li> </ul> </li> <li>TypedefType<ul> <li>Parameters:</li> </ul> </li> <li>VectorType<ul> <li>Parameters:</li> </ul> </li> <li>VoidType<ul> <li>Parameters:</li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"dialects/HighLevel/HighLevel/#operations","title":"Operations","text":""},{"location":"dialects/HighLevel/HighLevel/#hlaccess-vasthlaccessspecifierop","title":"<code>hl.access</code> (::vast::hl::AccessSpecifierOp)","text":"<p>VAST C++ access specifier declaration</p> <p>Syntax:</p> <pre><code>operation ::= `hl.access` attr-dict $spec\n</code></pre> <p>VAST C++ access specifier declaration</p>"},{"location":"dialects/HighLevel/HighLevel/#attributes","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>spec</code>::vast::hl::AccessSpecifierAttrAccess specifier"},{"location":"dialects/HighLevel/HighLevel/#hladd-vasthladdiop","title":"<code>hl.add</code> (::vast::hl::AddIOp)","text":"<p>VAST arithmetic binary operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.add` $lhs `,` $rhs attr-dict `:` functional-type(operands, results)\n</code></pre> <p>High-level arithmetic binary operation. This operation takes two operands and returns one result, each of these is required to be of the same type.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  %lhs, %rhs  : functional-type(operands, results) <p>Traits: <code>Commutative</code></p>"},{"location":"dialects/HighLevel/HighLevel/#operands","title":"Operands:","text":"Operand Description <code>lhs</code> any type <code>rhs</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hladdressof-vasthladdressof","title":"<code>hl.addressof</code> (::vast::hl::AddressOf)","text":"<p>VAST addressof operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.addressof` $value attr-dict `:` type($value) `-&gt;` type($result)\n</code></pre> <p>VAST addressof operation</p>"},{"location":"dialects/HighLevel/HighLevel/#operands_1","title":"Operands:","text":"Operand Description <code>value</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_1","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlalias-vasthltypealiasop","title":"<code>hl.alias</code> (::vast::hl::TypeAliasOp)","text":"<p>VAST type alias operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.alias` $name attr-dict `:` $type\n</code></pre> <p>This operation corresponds to <code>clang::TypeAliasDecl</code>.</p> <p>Interfaces: <code>TypeSymbol</code>, <code>VastSymbol</code></p>"},{"location":"dialects/HighLevel/HighLevel/#attributes_1","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>name</code>::mlir::StringAttrstring attribute <code>type</code>::mlir::TypeAttrany type attribute"},{"location":"dialects/HighLevel/HighLevel/#hlalignofexpr-vasthlalignofexprop","title":"<code>hl.alignof.expr</code> (::vast::hl::AlignOfExprOp)","text":"<p>VAST expr alignof operator</p> <p>Syntax:</p> <pre><code>operation ::= `hl.alignof.expr` attr-dict `-&gt;` type($result) $expr\n</code></pre> <p>VAST expr alignof operator Traits: <code>AlwaysSpeculatableImplTrait</code></p> <p>Interfaces: <code>ConditionallySpeculatable</code>, <code>NoMemoryEffect (MemoryEffectOpInterface)</code></p> <p>Effects: <code>MemoryEffects::Effect{}</code></p>"},{"location":"dialects/HighLevel/HighLevel/#results_2","title":"Results:","text":"Result Description <code>result</code> integer like type"},{"location":"dialects/HighLevel/HighLevel/#hlalignoftype-vasthlalignoftypeop","title":"<code>hl.alignof.type</code> (::vast::hl::AlignOfTypeOp)","text":"<p>VAST type alignof operator</p> <p>Syntax:</p> <pre><code>operation ::= `hl.alignof.type` $arg attr-dict `-&gt;` type($result)\n</code></pre> <p>VAST type alignof operator Traits: <code>AlwaysSpeculatableImplTrait</code></p> <p>Interfaces: <code>ConditionallySpeculatable</code>, <code>NoMemoryEffect (MemoryEffectOpInterface)</code></p> <p>Effects: <code>MemoryEffects::Effect{}</code></p>"},{"location":"dialects/HighLevel/HighLevel/#attributes_2","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>arg</code>::mlir::TypeAttrany type attribute"},{"location":"dialects/HighLevel/HighLevel/#results_3","title":"Results:","text":"Result Description <code>result</code> integer like type"},{"location":"dialects/HighLevel/HighLevel/#hlasm-vasthlasmop","title":"<code>hl.asm</code> (::vast::hl::AsmOp)","text":"<p>VAST operation for inline assembly</p> <p>Syntax:</p> <pre><code>operation ::= `hl.asm` attr-dict $asm_template `(`($output_names $asm_outputs^ `:` $output_constraints)? `)` `(` (`ins` `:`$input_names $asm_inputs^ `:` $input_constraints)? `)` `(`( $clobbers^)?`)` `(`( $labels^)?`)` `:` functional-type(operands, results)\n</code></pre> <p>VAST operation mirroring the GCCAsmStmt in clang AST. It prints a name for every operand (either its id or user-supplied string).</p> <p>Traits: <code>AttrSizedOperandSegments</code></p>"},{"location":"dialects/HighLevel/HighLevel/#attributes_3","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>asm_template</code>::mlir::StringAttrstring attribute <code>is_volatile</code>::mlir::UnitAttrunit attribute <code>has_goto</code>::mlir::UnitAttrunit attribute <code>output_names</code>::mlir::ArrayAttrarray attribute <code>input_names</code>::mlir::ArrayAttrarray attribute <code>output_constraints</code>::mlir::ArrayAttrarray attribute <code>input_constraints</code>::mlir::ArrayAttrarray attribute <code>clobbers</code>::mlir::ArrayAttrarray attribute"},{"location":"dialects/HighLevel/HighLevel/#operands_2","title":"Operands:","text":"Operand Description <code>asm_outputs</code> variadic of any type <code>asm_inputs</code> variadic of any type <code>labels</code> variadic of any type"},{"location":"dialects/HighLevel/HighLevel/#hlassign-vasthlassignop","title":"<code>hl.assign</code> (::vast::hl::AssignOp)","text":"<p>VAST compound assign operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.assign` $src `to` $dst attr-dict `:` type(operands) `-&gt;` type(results)\n</code></pre> <p>A compound assign operation represents an assignment operation joined with an arithmetic operation. It requires the same types for both source and destination arguments.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  src to dst : functional-type(operands, results) <p>It represents C compound assignment statement:</p> <p>dst = src; <p>Interfaces: <code>InferTypeOpInterface</code></p>"},{"location":"dialects/HighLevel/HighLevel/#operands_3","title":"Operands:","text":"Operand Description <code>src</code> lvalue to any type <code>dst</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_4","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlassignadd-vasthladdiassignop","title":"<code>hl.assign.add</code> (::vast::hl::AddIAssignOp)","text":"<p>VAST compound assign operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.assign.add` $src `to` $dst attr-dict `:` type(operands) `-&gt;` type(results)\n</code></pre> <p>A compound assign operation represents an assignment operation joined with an arithmetic operation. It requires the same types for both source and destination arguments.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  src to dst : functional-type(operands, results) <p>It represents C compound assignment statement:</p> <p>dst = src; <p>Interfaces: <code>InferTypeOpInterface</code></p>"},{"location":"dialects/HighLevel/HighLevel/#operands_4","title":"Operands:","text":"Operand Description <code>src</code> lvalue to any type <code>dst</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_5","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlassignbinand-vasthlbinandassignop","title":"<code>hl.assign.bin.and</code> (::vast::hl::BinAndAssignOp)","text":"<p>VAST compound assign operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.assign.bin.and` $src `to` $dst attr-dict `:` type(operands) `-&gt;` type(results)\n</code></pre> <p>A compound assign operation represents an assignment operation joined with an arithmetic operation. It requires the same types for both source and destination arguments.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  src to dst : functional-type(operands, results) <p>It represents C compound assignment statement:</p> <p>dst = src; <p>Interfaces: <code>InferTypeOpInterface</code></p>"},{"location":"dialects/HighLevel/HighLevel/#operands_5","title":"Operands:","text":"Operand Description <code>src</code> lvalue to any type <code>dst</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_6","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlassignbinashr-vasthlbinashrassignop","title":"<code>hl.assign.bin.ashr</code> (::vast::hl::BinAShrAssignOp)","text":"<p>VAST compound assign operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.assign.bin.ashr` $src `to` $dst attr-dict `:` type(operands) `-&gt;` type(results)\n</code></pre> <p>A compound assign operation represents an assignment operation joined with an arithmetic operation. It requires the same types for both source and destination arguments.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  src to dst : functional-type(operands, results) <p>It represents C compound assignment statement:</p> <p>dst = src; <p>Interfaces: <code>InferTypeOpInterface</code></p>"},{"location":"dialects/HighLevel/HighLevel/#operands_6","title":"Operands:","text":"Operand Description <code>src</code> lvalue to integer like type <code>dst</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_7","title":"Results:","text":"Result Description <code>result</code> integer like type"},{"location":"dialects/HighLevel/HighLevel/#hlassignbinlshr-vasthlbinlshrassignop","title":"<code>hl.assign.bin.lshr</code> (::vast::hl::BinLShrAssignOp)","text":"<p>VAST compound assign operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.assign.bin.lshr` $src `to` $dst attr-dict `:` type(operands) `-&gt;` type(results)\n</code></pre> <p>A compound assign operation represents an assignment operation joined with an arithmetic operation. It requires the same types for both source and destination arguments.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  src to dst : functional-type(operands, results) <p>It represents C compound assignment statement:</p> <p>dst = src; <p>Interfaces: <code>InferTypeOpInterface</code></p>"},{"location":"dialects/HighLevel/HighLevel/#operands_7","title":"Operands:","text":"Operand Description <code>src</code> lvalue to integer like type <code>dst</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_8","title":"Results:","text":"Result Description <code>result</code> integer like type"},{"location":"dialects/HighLevel/HighLevel/#hlassignbinor-vasthlbinorassignop","title":"<code>hl.assign.bin.or</code> (::vast::hl::BinOrAssignOp)","text":"<p>VAST compound assign operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.assign.bin.or` $src `to` $dst attr-dict `:` type(operands) `-&gt;` type(results)\n</code></pre> <p>A compound assign operation represents an assignment operation joined with an arithmetic operation. It requires the same types for both source and destination arguments.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  src to dst : functional-type(operands, results) <p>It represents C compound assignment statement:</p> <p>dst = src; <p>Interfaces: <code>InferTypeOpInterface</code></p>"},{"location":"dialects/HighLevel/HighLevel/#operands_8","title":"Operands:","text":"Operand Description <code>src</code> lvalue to any type <code>dst</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_9","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlassignbinshl-vasthlbinshlassignop","title":"<code>hl.assign.bin.shl</code> (::vast::hl::BinShlAssignOp)","text":"<p>VAST compound assign operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.assign.bin.shl` $src `to` $dst attr-dict `:` type(operands) `-&gt;` type(results)\n</code></pre> <p>A compound assign operation represents an assignment operation joined with an arithmetic operation. It requires the same types for both source and destination arguments.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  src to dst : functional-type(operands, results) <p>It represents C compound assignment statement:</p> <p>dst = src; <p>Interfaces: <code>InferTypeOpInterface</code></p>"},{"location":"dialects/HighLevel/HighLevel/#operands_9","title":"Operands:","text":"Operand Description <code>src</code> lvalue to integer like type <code>dst</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_10","title":"Results:","text":"Result Description <code>result</code> integer like type"},{"location":"dialects/HighLevel/HighLevel/#hlassignbinxor-vasthlbinxorassignop","title":"<code>hl.assign.bin.xor</code> (::vast::hl::BinXorAssignOp)","text":"<p>VAST compound assign operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.assign.bin.xor` $src `to` $dst attr-dict `:` type(operands) `-&gt;` type(results)\n</code></pre> <p>A compound assign operation represents an assignment operation joined with an arithmetic operation. It requires the same types for both source and destination arguments.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  src to dst : functional-type(operands, results) <p>It represents C compound assignment statement:</p> <p>dst = src; <p>Interfaces: <code>InferTypeOpInterface</code></p>"},{"location":"dialects/HighLevel/HighLevel/#operands_10","title":"Operands:","text":"Operand Description <code>src</code> lvalue to any type <code>dst</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_11","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlassignfadd-vasthladdfassignop","title":"<code>hl.assign.fadd</code> (::vast::hl::AddFAssignOp)","text":"<p>VAST compound assign operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.assign.fadd` $src `to` $dst attr-dict `:` type(operands) `-&gt;` type(results)\n</code></pre> <p>A compound assign operation represents an assignment operation joined with an arithmetic operation. It requires the same types for both source and destination arguments.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  src to dst : functional-type(operands, results) <p>It represents C compound assignment statement:</p> <p>dst = src; <p>Interfaces: <code>InferTypeOpInterface</code></p>"},{"location":"dialects/HighLevel/HighLevel/#operands_11","title":"Operands:","text":"Operand Description <code>src</code> lvalue to any type <code>dst</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_12","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlassignfdiv-vasthldivfassignop","title":"<code>hl.assign.fdiv</code> (::vast::hl::DivFAssignOp)","text":"<p>VAST compound assign operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.assign.fdiv` $src `to` $dst attr-dict `:` type(operands) `-&gt;` type(results)\n</code></pre> <p>A compound assign operation represents an assignment operation joined with an arithmetic operation. It requires the same types for both source and destination arguments.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  src to dst : functional-type(operands, results) <p>It represents C compound assignment statement:</p> <p>dst = src; <p>Interfaces: <code>InferTypeOpInterface</code></p>"},{"location":"dialects/HighLevel/HighLevel/#operands_12","title":"Operands:","text":"Operand Description <code>src</code> lvalue to any type <code>dst</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_13","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlassignfmul-vasthlmulfassignop","title":"<code>hl.assign.fmul</code> (::vast::hl::MulFAssignOp)","text":"<p>VAST compound assign operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.assign.fmul` $src `to` $dst attr-dict `:` type(operands) `-&gt;` type(results)\n</code></pre> <p>A compound assign operation represents an assignment operation joined with an arithmetic operation. It requires the same types for both source and destination arguments.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  src to dst : functional-type(operands, results) <p>It represents C compound assignment statement:</p> <p>dst = src; <p>Interfaces: <code>InferTypeOpInterface</code></p>"},{"location":"dialects/HighLevel/HighLevel/#operands_13","title":"Operands:","text":"Operand Description <code>src</code> lvalue to any type <code>dst</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_14","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlassignfrem-vasthlremfassignop","title":"<code>hl.assign.frem</code> (::vast::hl::RemFAssignOp)","text":"<p>VAST compound assign operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.assign.frem` $src `to` $dst attr-dict `:` type(operands) `-&gt;` type(results)\n</code></pre> <p>A compound assign operation represents an assignment operation joined with an arithmetic operation. It requires the same types for both source and destination arguments.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  src to dst : functional-type(operands, results) <p>It represents C compound assignment statement:</p> <p>dst = src; <p>Interfaces: <code>InferTypeOpInterface</code></p>"},{"location":"dialects/HighLevel/HighLevel/#operands_14","title":"Operands:","text":"Operand Description <code>src</code> lvalue to any type <code>dst</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_15","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlassignfsub-vasthlsubfassignop","title":"<code>hl.assign.fsub</code> (::vast::hl::SubFAssignOp)","text":"<p>VAST compound assign operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.assign.fsub` $src `to` $dst attr-dict `:` type(operands) `-&gt;` type(results)\n</code></pre> <p>A compound assign operation represents an assignment operation joined with an arithmetic operation. It requires the same types for both source and destination arguments.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  src to dst : functional-type(operands, results) <p>It represents C compound assignment statement:</p> <p>dst = src; <p>Interfaces: <code>InferTypeOpInterface</code></p>"},{"location":"dialects/HighLevel/HighLevel/#operands_15","title":"Operands:","text":"Operand Description <code>src</code> lvalue to any type <code>dst</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_16","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlassignmul-vasthlmuliassignop","title":"<code>hl.assign.mul</code> (::vast::hl::MulIAssignOp)","text":"<p>VAST compound assign operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.assign.mul` $src `to` $dst attr-dict `:` type(operands) `-&gt;` type(results)\n</code></pre> <p>A compound assign operation represents an assignment operation joined with an arithmetic operation. It requires the same types for both source and destination arguments.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  src to dst : functional-type(operands, results) <p>It represents C compound assignment statement:</p> <p>dst = src; <p>Interfaces: <code>InferTypeOpInterface</code></p>"},{"location":"dialects/HighLevel/HighLevel/#operands_16","title":"Operands:","text":"Operand Description <code>src</code> lvalue to any type <code>dst</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_17","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlassignsdiv-vasthldivsassignop","title":"<code>hl.assign.sdiv</code> (::vast::hl::DivSAssignOp)","text":"<p>VAST compound assign operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.assign.sdiv` $src `to` $dst attr-dict `:` type(operands) `-&gt;` type(results)\n</code></pre> <p>A compound assign operation represents an assignment operation joined with an arithmetic operation. It requires the same types for both source and destination arguments.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  src to dst : functional-type(operands, results) <p>It represents C compound assignment statement:</p> <p>dst = src; <p>Interfaces: <code>InferTypeOpInterface</code></p>"},{"location":"dialects/HighLevel/HighLevel/#operands_17","title":"Operands:","text":"Operand Description <code>src</code> lvalue to any type <code>dst</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_18","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlassignsrem-vasthlremsassignop","title":"<code>hl.assign.srem</code> (::vast::hl::RemSAssignOp)","text":"<p>VAST compound assign operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.assign.srem` $src `to` $dst attr-dict `:` type(operands) `-&gt;` type(results)\n</code></pre> <p>A compound assign operation represents an assignment operation joined with an arithmetic operation. It requires the same types for both source and destination arguments.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  src to dst : functional-type(operands, results) <p>It represents C compound assignment statement:</p> <p>dst = src; <p>Interfaces: <code>InferTypeOpInterface</code></p>"},{"location":"dialects/HighLevel/HighLevel/#operands_18","title":"Operands:","text":"Operand Description <code>src</code> lvalue to any type <code>dst</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_19","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlassignsub-vasthlsubiassignop","title":"<code>hl.assign.sub</code> (::vast::hl::SubIAssignOp)","text":"<p>VAST compound assign operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.assign.sub` $src `to` $dst attr-dict `:` type(operands) `-&gt;` type(results)\n</code></pre> <p>A compound assign operation represents an assignment operation joined with an arithmetic operation. It requires the same types for both source and destination arguments.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  src to dst : functional-type(operands, results) <p>It represents C compound assignment statement:</p> <p>dst = src; <p>Interfaces: <code>InferTypeOpInterface</code></p>"},{"location":"dialects/HighLevel/HighLevel/#operands_19","title":"Operands:","text":"Operand Description <code>src</code> lvalue to any type <code>dst</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_20","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlassignudiv-vasthldivuassignop","title":"<code>hl.assign.udiv</code> (::vast::hl::DivUAssignOp)","text":"<p>VAST compound assign operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.assign.udiv` $src `to` $dst attr-dict `:` type(operands) `-&gt;` type(results)\n</code></pre> <p>A compound assign operation represents an assignment operation joined with an arithmetic operation. It requires the same types for both source and destination arguments.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  src to dst : functional-type(operands, results) <p>It represents C compound assignment statement:</p> <p>dst = src; <p>Interfaces: <code>InferTypeOpInterface</code></p>"},{"location":"dialects/HighLevel/HighLevel/#operands_20","title":"Operands:","text":"Operand Description <code>src</code> lvalue to any type <code>dst</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_21","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlassignurem-vasthlremuassignop","title":"<code>hl.assign.urem</code> (::vast::hl::RemUAssignOp)","text":"<p>VAST compound assign operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.assign.urem` $src `to` $dst attr-dict `:` type(operands) `-&gt;` type(results)\n</code></pre> <p>A compound assign operation represents an assignment operation joined with an arithmetic operation. It requires the same types for both source and destination arguments.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  src to dst : functional-type(operands, results) <p>It represents C compound assignment statement:</p> <p>dst = src; <p>Interfaces: <code>InferTypeOpInterface</code></p>"},{"location":"dialects/HighLevel/HighLevel/#operands_21","title":"Operands:","text":"Operand Description <code>src</code> lvalue to any type <code>dst</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_22","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlbase-vasthlcxxbasespecifierop","title":"<code>hl.base</code> (::vast::hl::CxxBaseSpecifierOp)","text":"<p>VAST base class specifier</p> <p>Syntax:</p> <pre><code>operation ::= `hl.base` $type attr-dict $access (`virtual` $is_virtual^)?\n</code></pre> <p>VAST base class specifier</p>"},{"location":"dialects/HighLevel/HighLevel/#attributes_4","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>type</code>::mlir::TypeAttrany type attribute <code>access</code>::vast::hl::AccessSpecifierAttrAccess specifier <code>is_virtual</code>::mlir::UnitAttrunit attribute"},{"location":"dialects/HighLevel/HighLevel/#hlbinand-vasthlbinandop","title":"<code>hl.bin.and</code> (::vast::hl::BinAndOp)","text":"<p>VAST arithmetic binary operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.bin.and` $lhs `,` $rhs attr-dict `:` functional-type(operands, results)\n</code></pre> <p>High-level arithmetic binary operation. This operation takes two operands and returns one result, each of these is required to be of the same type.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  %lhs, %rhs  : functional-type(operands, results)"},{"location":"dialects/HighLevel/HighLevel/#operands_22","title":"Operands:","text":"Operand Description <code>lhs</code> any type <code>rhs</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_23","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlbinashr-vasthlbinashrop","title":"<code>hl.bin.ashr</code> (::vast::hl::BinAShrOp)","text":"<p>VAST binary shift operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.bin.ashr` $lhs `,` $rhs attr-dict `:` functional-type(operands, results)\n</code></pre> <p>High-level binary shift operation. This operation takes two operands and returns one result.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  %lhs, %rhs  : functional-type(operands, results)"},{"location":"dialects/HighLevel/HighLevel/#operands_23","title":"Operands:","text":"Operand Description <code>lhs</code> integer like type <code>rhs</code> integer like type"},{"location":"dialects/HighLevel/HighLevel/#results_24","title":"Results:","text":"Result Description <code>result</code> integer like type"},{"location":"dialects/HighLevel/HighLevel/#hlbincomma-vasthlbincomma","title":"<code>hl.bin.comma</code> (::vast::hl::BinComma)","text":"<p>VAST binary operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.bin.comma` $lhs `,` $rhs attr-dict `:` functional-type(operands, results)\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#operands_24","title":"Operands:","text":"Operand Description <code>lhs</code> any type <code>rhs</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_25","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlbinland-vasthlbinlandop","title":"<code>hl.bin.land</code> (::vast::hl::BinLAndOp)","text":"<p>VAST logical binary operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.bin.land` $lhs`,` $rhs attr-dict `:` type(results)\n</code></pre> <p>High-level logical binary operation. This operation takes two operands and returns one result, each of these is required to be of the same type.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  %lhs, %rhs  : type"},{"location":"dialects/HighLevel/HighLevel/#results_26","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlbinlor-vasthlbinlorop","title":"<code>hl.bin.lor</code> (::vast::hl::BinLOrOp)","text":"<p>VAST logical binary operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.bin.lor` $lhs`,` $rhs attr-dict `:` type(results)\n</code></pre> <p>High-level logical binary operation. This operation takes two operands and returns one result, each of these is required to be of the same type.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  %lhs, %rhs  : type"},{"location":"dialects/HighLevel/HighLevel/#results_27","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlbinlshr-vasthlbinlshrop","title":"<code>hl.bin.lshr</code> (::vast::hl::BinLShrOp)","text":"<p>VAST binary shift operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.bin.lshr` $lhs `,` $rhs attr-dict `:` functional-type(operands, results)\n</code></pre> <p>High-level binary shift operation. This operation takes two operands and returns one result.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  %lhs, %rhs  : functional-type(operands, results)"},{"location":"dialects/HighLevel/HighLevel/#operands_25","title":"Operands:","text":"Operand Description <code>lhs</code> integer like type <code>rhs</code> integer like type"},{"location":"dialects/HighLevel/HighLevel/#results_28","title":"Results:","text":"Result Description <code>result</code> integer like type"},{"location":"dialects/HighLevel/HighLevel/#hlbinor-vasthlbinorop","title":"<code>hl.bin.or</code> (::vast::hl::BinOrOp)","text":"<p>VAST arithmetic binary operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.bin.or` $lhs `,` $rhs attr-dict `:` functional-type(operands, results)\n</code></pre> <p>High-level arithmetic binary operation. This operation takes two operands and returns one result, each of these is required to be of the same type.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  %lhs, %rhs  : functional-type(operands, results)"},{"location":"dialects/HighLevel/HighLevel/#operands_26","title":"Operands:","text":"Operand Description <code>lhs</code> any type <code>rhs</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_29","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlbinshl-vasthlbinshlop","title":"<code>hl.bin.shl</code> (::vast::hl::BinShlOp)","text":"<p>VAST binary shift operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.bin.shl` $lhs `,` $rhs attr-dict `:` functional-type(operands, results)\n</code></pre> <p>High-level binary shift operation. This operation takes two operands and returns one result.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  %lhs, %rhs  : functional-type(operands, results)"},{"location":"dialects/HighLevel/HighLevel/#operands_27","title":"Operands:","text":"Operand Description <code>lhs</code> integer like type <code>rhs</code> integer like type"},{"location":"dialects/HighLevel/HighLevel/#results_30","title":"Results:","text":"Result Description <code>result</code> integer like type"},{"location":"dialects/HighLevel/HighLevel/#hlbinxor-vasthlbinxorop","title":"<code>hl.bin.xor</code> (::vast::hl::BinXorOp)","text":"<p>VAST arithmetic binary operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.bin.xor` $lhs `,` $rhs attr-dict `:` functional-type(operands, results)\n</code></pre> <p>High-level arithmetic binary operation. This operation takes two operands and returns one result, each of these is required to be of the same type.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  %lhs, %rhs  : functional-type(operands, results)"},{"location":"dialects/HighLevel/HighLevel/#operands_28","title":"Operands:","text":"Operand Description <code>lhs</code> any type <code>rhs</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_31","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlbinary_cond-vasthlbinarycondop","title":"<code>hl.binary_cond</code> (::vast::hl::BinaryCondOp)","text":"<p>VAST binary conditional statement</p> <p>Syntax:</p> <pre><code>operation ::= `hl.binary_cond` attr-dict `:` type(results) $commonRegion `,` $condRegion `?` $thenRegion `:` $elseRegion\n</code></pre> <p>Binary Conditional operator defined by the GNU extension of C. This operation holds in total 4 regions: 1) The <code>common</code> region holds the common subexpression of the condition and result 2) The <code>cond</code> region takes an argument, which should be the result of <code>common</code>,    and yields the condition result. 2) The <code>then</code> region takes an argument, which should be the result of <code>common</code>,    and yields the result (it may potentially contain implicit casts). 3) The <code>else</code> region contains the right hand side expression and yields the result.</p> <p>Traits: <code>NoTerminator</code></p> <p>Interfaces: <code>RegionKindInterface</code></p>"},{"location":"dialects/HighLevel/HighLevel/#results_32","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlbreak-vasthlbreakop","title":"<code>hl.break</code> (::vast::hl::BreakOp)","text":"<p>VAST break statement</p> <p>Syntax:</p> <pre><code>operation ::= `hl.break` attr-dict\n</code></pre> <p>VAST break statement Traits: <code>NoRegionArguments</code>, <code>NoTerminator</code>, <code>SoftTerminatorTrait</code></p> <p>Interfaces: <code>RegionKindInterface</code></p>"},{"location":"dialects/HighLevel/HighLevel/#hlbuiltin_bitcast-vasthlbuiltinbitcastop","title":"<code>hl.builtin_bitcast</code> (::vast::hl::BuiltinBitCastOp)","text":"<p>VAST cast operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.builtin_bitcast` $value $kind attr-dict `:` type($value) `-&gt;` type($result)\n</code></pre> <p>VAST cast operation</p>"},{"location":"dialects/HighLevel/HighLevel/#attributes_5","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>kind</code>::vast::hl::CastKindAttrcast kind"},{"location":"dialects/HighLevel/HighLevel/#operands_29","title":"Operands:","text":"Operand Description <code>value</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_33","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlcall-vasthlcallop","title":"<code>hl.call</code> (::vast::hl::CallOp)","text":"<p>VAST call operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.call` $callee `(` $argOperands `)` attr-dict `:` functional-type( $argOperands, $results )\n</code></pre> <p>VAST call operation Interfaces: <code>CallOpInterface</code></p>"},{"location":"dialects/HighLevel/HighLevel/#attributes_6","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>callee</code>::mlir::FlatSymbolRefAttrflat symbol reference attribute"},{"location":"dialects/HighLevel/HighLevel/#operands_30","title":"Operands:","text":"Operand Description <code>argOperands</code> variadic of any type"},{"location":"dialects/HighLevel/HighLevel/#results_34","title":"Results:","text":"Result Description <code>results</code> variadic of any type"},{"location":"dialects/HighLevel/HighLevel/#hlcase-vasthlcaseop","title":"<code>hl.case</code> (::vast::hl::CaseOp)","text":"<p>VAST case statement</p> <p>Syntax:</p> <pre><code>operation ::= `hl.case` $lhs $body attr-dict\n</code></pre> <p>The operation represents a single case of a switch statement.</p> <p>The generic form of the operation is as follows:</p> <p>hl.case {   ... / lhs/check region /   hl.value.yield %val : !hl.type } {   ... / body region / }</p> <p>It represents a C statement of form <code>case lhs: body;</code>.</p> <p>Traits: <code>NoRegionArguments</code>, <code>NoTerminator</code></p> <p>Interfaces: <code>RegionKindInterface</code></p>"},{"location":"dialects/HighLevel/HighLevel/#hlclass-vasthlclassdeclop","title":"<code>hl.class</code> (::vast::hl::ClassDeclOp)","text":"<p>VAST C++ class declaration</p> <p>Syntax:</p> <pre><code>operation ::= `hl.class` $name attr-dict `:` `bases` $bases $fields\n</code></pre> <p>VAST C++ class declaration Traits: <code>NoTerminator</code></p> <p>Interfaces: <code>TypeSymbol</code>, <code>VastSymbol</code></p>"},{"location":"dialects/HighLevel/HighLevel/#attributes_7","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>name</code>::mlir::StringAttrstring attribute"},{"location":"dialects/HighLevel/HighLevel/#hlcmp-vasthlcmpop","title":"<code>hl.cmp</code> (::vast::hl::CmpOp)","text":"<p>VAST comparison operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.cmp` $predicate $lhs `,` $rhs  attr-dict `:` type(operands) `-&gt;` type($result)\n</code></pre> <p>VAST comparison operation</p>"},{"location":"dialects/HighLevel/HighLevel/#attributes_8","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>predicate</code>::vast::hl::PredicateAttrcomparison predicate"},{"location":"dialects/HighLevel/HighLevel/#operands_31","title":"Operands:","text":"Operand Description <code>lhs</code> any type <code>rhs</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_35","title":"Results:","text":"Result Description <code>result</code> bool or integer like type"},{"location":"dialects/HighLevel/HighLevel/#hlcompound_literal-vasthlcompoundliteralop","title":"<code>hl.compound_literal</code> (::vast::hl::CompoundLiteralOp)","text":"<p>VAST compound literals operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.compound_literal` attr-dict `:` type($result) `=` $init\n</code></pre> <p>Creates a compound literal that represents an unnamed object and is initialzied by initializer-list.</p> <p>Is used to represetnt <code>clang::CompoundLiteralExpr</code>.</p>"},{"location":"dialects/HighLevel/HighLevel/#results_36","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlcond-vasthlcondop","title":"<code>hl.cond</code> (::vast::hl::CondOp)","text":"<p>VAST conditional statement</p> <p>Syntax:</p> <pre><code>operation ::= `hl.cond` attr-dict `:` type(results) $condRegion `?` $thenRegion `:` $elseRegion\n</code></pre> <p>The operation takes builders of three regions -- condition, true branch and false branch. Builders, given the location, build a particular region.</p> <p>The generic form of the operation is as follows:</p> <p>hl.cond {   ... / condition region /   hl.cond.yield %cond : !hl.bool } ? {   ... / true region / } : {   ... / false region / }</p> <p>Traits: <code>NoRegionArguments</code>, <code>NoTerminator</code></p> <p>Interfaces: <code>RegionKindInterface</code></p>"},{"location":"dialects/HighLevel/HighLevel/#results_37","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlcondyield-vasthlcondyieldop","title":"<code>hl.cond.yield</code> (::vast::hl::CondYieldOp)","text":"<p>Condition yield operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.cond.yield` attr-dict $result `:` type($result)\n</code></pre> <p>A condition yield operation is used to terminate the region representing condition expression of control flow operations <code>IfOp</code>, <code>WhileOp</code>, <code>ForOp</code> and <code>DoOp</code>. It yields a boolean value for the conditional branch.</p> <p>The custom assembly form of the operation is as follows:</p> <p>hl.cond.yield result : BoolType</p> <p>Traits: <code>HasParent&lt;IfOp, WhileOp, ForOp, DoOp, CondOp, BinaryCondOp&gt;</code>, <code>Terminator</code></p>"},{"location":"dialects/HighLevel/HighLevel/#operands_32","title":"Operands:","text":"Operand Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlconst-vasthlconstantop","title":"<code>hl.const</code> (::vast::hl::ConstantOp)","text":"<p>VAST value constant</p> <p>Syntax:</p> <pre><code>operation ::= `hl.const` $value attr-dict\n</code></pre> <p>VAST value constant Traits: <code>AlwaysSpeculatableImplTrait</code>, <code>ConstantLike</code></p> <p>Interfaces: <code>ConditionallySpeculatable</code>, <code>InferTypeOpInterface</code>, <code>NoMemoryEffect (MemoryEffectOpInterface)</code></p> <p>Effects: <code>MemoryEffects::Effect{}</code></p>"},{"location":"dialects/HighLevel/HighLevel/#attributes_9","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>value</code>::mlir::TypedAttrTypedAttr instance"},{"location":"dialects/HighLevel/HighLevel/#results_38","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlconstinit-vasthlinitializedconstantop","title":"<code>hl.const.init</code> (::vast::hl::InitializedConstantOp)","text":"<p>VAST constant with non-trivial initialization</p> <p>Syntax:</p> <pre><code>operation ::= `hl.const.init` attr-dict `:` type($result) `=` $init\n</code></pre> <p>InitializedConstantOp is used to represent a constant with non-trivial initialization. The initialization is represented by a region that represents initialization expression.</p> <p>Traits: <code>AlwaysSpeculatableImplTrait</code>, <code>ConstantLike</code></p> <p>Interfaces: <code>ConditionallySpeculatable</code>, <code>NoMemoryEffect (MemoryEffectOpInterface)</code></p> <p>Effects: <code>MemoryEffects::Effect{}</code></p>"},{"location":"dialects/HighLevel/HighLevel/#results_39","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlcontinue-vasthlcontinueop","title":"<code>hl.continue</code> (::vast::hl::ContinueOp)","text":"<p>VAST continue statement</p> <p>Syntax:</p> <pre><code>operation ::= `hl.continue` attr-dict\n</code></pre> <p>VAST continue statement Traits: <code>NoRegionArguments</code>, <code>NoTerminator</code>, <code>SoftTerminatorTrait</code></p> <p>Interfaces: <code>RegionKindInterface</code></p>"},{"location":"dialects/HighLevel/HighLevel/#hlcstyle_cast-vasthlcstylecastop","title":"<code>hl.cstyle_cast</code> (::vast::hl::CStyleCastOp)","text":"<p>VAST cast operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.cstyle_cast` $value $kind attr-dict `:` type($value) `-&gt;` type($result)\n</code></pre> <p>VAST cast operation</p>"},{"location":"dialects/HighLevel/HighLevel/#attributes_10","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>kind</code>::vast::hl::CastKindAttrcast kind"},{"location":"dialects/HighLevel/HighLevel/#operands_33","title":"Operands:","text":"Operand Description <code>value</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_40","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlcxxstruct-vasthlcxxstructdeclop","title":"<code>hl.cxxstruct</code> (::vast::hl::CxxStructDeclOp)","text":"<p>VAST C++ struct declaration</p> <p>Syntax:</p> <pre><code>operation ::= `hl.cxxstruct` $name attr-dict `:` `bases` $bases $fields\n</code></pre> <p>VAST C++ struct declaration Traits: <code>NoTerminator</code></p> <p>Interfaces: <code>TypeSymbol</code>, <code>VastSymbol</code></p>"},{"location":"dialects/HighLevel/HighLevel/#attributes_11","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>name</code>::mlir::StringAttrstring attribute"},{"location":"dialects/HighLevel/HighLevel/#hldefault-vasthldefaultop","title":"<code>hl.default</code> (::vast::hl::DefaultOp)","text":"<p>VAST default statement</p> <p>Syntax:</p> <pre><code>operation ::= `hl.default` $body attr-dict\n</code></pre> <p>VAST default statement Traits: <code>NoRegionArguments</code>, <code>NoTerminator</code></p> <p>Interfaces: <code>RegionKindInterface</code></p>"},{"location":"dialects/HighLevel/HighLevel/#hlderef-vasthlderef","title":"<code>hl.deref</code> (::vast::hl::Deref)","text":"<p>VAST deref operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.deref` $addr attr-dict `:` type($addr) `-&gt;` type($result)\n</code></pre> <p>VAST deref operation</p>"},{"location":"dialects/HighLevel/HighLevel/#operands_34","title":"Operands:","text":"Operand Description <code>addr</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_41","title":"Results:","text":"Result Description <code>result</code> lvalue to any type"},{"location":"dialects/HighLevel/HighLevel/#hldo-vasthldoop","title":"<code>hl.do</code> (::vast::hl::DoOp)","text":"<p>VAST do-while statement</p> <p>Syntax:</p> <pre><code>operation ::= `hl.do` $bodyRegion `while` $condRegion attr-dict\n</code></pre> <p>The operation represents a do-while statement.</p> <p>The generic form of the operation is as follows:</p> <p>hl.do {   ... / body region / } cond {   ... / cond region /   hl.cond.yield %cond : !hl.bool }</p> <p>Traits: <code>NoRegionArguments</code>, <code>NoTerminator</code></p> <p>Interfaces: <code>RegionKindInterface</code></p>"},{"location":"dialects/HighLevel/HighLevel/#hlemptydecl-vasthlemptydeclop","title":"<code>hl.empty.decl</code> (::vast::hl::EmptyDeclOp)","text":"<p>Syntax:</p> <pre><code>operation ::= `hl.empty.decl` attr-dict\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#hlenum-vasthlenumdeclop","title":"<code>hl.enum</code> (::vast::hl::EnumDeclOp)","text":"<p>VAST enum declaration</p> <p>Syntax:</p> <pre><code>operation ::= `hl.enum` $name attr-dict (`:` $type^ $constants)?\n</code></pre> <p>Enum declaration serves to declare region for enum constant declarations. It also defines an underlying type.</p> <p>Traits: <code>NoTerminator</code></p> <p>Interfaces: <code>TypeSymbol</code>, <code>VastSymbol</code></p>"},{"location":"dialects/HighLevel/HighLevel/#attributes_12","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>name</code>::mlir::StringAttrstring attribute <code>type</code>::mlir::TypeAttrany type attribute"},{"location":"dialects/HighLevel/HighLevel/#hlenumconst-vasthlenumconstantop","title":"<code>hl.enum.const</code> (::vast::hl::EnumConstantOp)","text":"<p>VAST enum constant declaration</p> <p>Syntax:</p> <pre><code>operation ::= `hl.enum.const` $name `=` $value attr-dict (`init` $init^)?\n</code></pre> <p>Enumeration constant servers to link name to an enum value. It is required to be scoped in Enum operation. For example:</p> <pre><code>hl.enum.const \"F\" = 2 : !hl.int\n</code></pre> <p>A constant can have a constant expression initializer:</p> <pre><code>hl.enum.const \"G\" = #core.integer&lt;12&gt; : !hl.int init  {\n  %0 = hl.enumref \"F\" : !hl.int\n  %1 = hl.enumref \"C\" : !hl.int\n  %2 = hl.add %0, %1 : !hl.int\n  hl.value.yield %2 : !hl.int\n}\n</code></pre> <p>Interfaces: <code>EnumConstantSymbol</code>, <code>VastSymbol</code></p>"},{"location":"dialects/HighLevel/HighLevel/#attributes_13","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>name</code>::mlir::StringAttrstring attribute <code>value</code>::mlir::TypedAttrTypedAttr instance"},{"location":"dialects/HighLevel/HighLevel/#hlenumref-vasthlenumrefop","title":"<code>hl.enumref</code> (::vast::hl::EnumRefOp)","text":"<p>VAST variable reference declaration</p> <p>Syntax:</p> <pre><code>operation ::= `hl.enumref` $value attr-dict `:` type($result)\n</code></pre> <p>VAST variable reference declaration</p>"},{"location":"dialects/HighLevel/HighLevel/#attributes_14","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>value</code>::mlir::StringAttrstring attribute"},{"location":"dialects/HighLevel/HighLevel/#results_42","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlexpr-vasthlexprop","title":"<code>hl.expr</code> (::vast::hl::ExprOp)","text":"<p>VAST expression</p> <p>Syntax:</p> <pre><code>operation ::= `hl.expr` attr-dict `:` type($result) $subexpr\n</code></pre> <p>VAST expression Traits: <code>SingleBlock</code></p>"},{"location":"dialects/HighLevel/HighLevel/#results_43","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlfadd-vasthladdfop","title":"<code>hl.fadd</code> (::vast::hl::AddFOp)","text":"<p>VAST arithmetic binary operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.fadd` $lhs `,` $rhs attr-dict `:` functional-type(operands, results)\n</code></pre> <p>High-level arithmetic binary operation. This operation takes two operands and returns one result, each of these is required to be of the same type.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  %lhs, %rhs  : functional-type(operands, results)"},{"location":"dialects/HighLevel/HighLevel/#operands_35","title":"Operands:","text":"Operand Description <code>lhs</code> any type <code>rhs</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_44","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlfcmp-vasthlfcmpop","title":"<code>hl.fcmp</code> (::vast::hl::FCmpOp)","text":"<p>VAST flaoting point comparison operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.fcmp` $predicate $lhs `,` $rhs  attr-dict `:` type(operands) `-&gt;` type($result)\n</code></pre> <p>VAST floating point comparison operation</p>"},{"location":"dialects/HighLevel/HighLevel/#attributes_15","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>predicate</code>::vast::hl::FPredicateAttrfloating point comparison predicate"},{"location":"dialects/HighLevel/HighLevel/#operands_36","title":"Operands:","text":"Operand Description <code>lhs</code> any type <code>rhs</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_45","title":"Results:","text":"Result Description <code>result</code> bool or integer like type"},{"location":"dialects/HighLevel/HighLevel/#hlfdiv-vasthldivfop","title":"<code>hl.fdiv</code> (::vast::hl::DivFOp)","text":"<p>VAST arithmetic binary operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.fdiv` $lhs `,` $rhs attr-dict `:` functional-type(operands, results)\n</code></pre> <p>High-level arithmetic binary operation. This operation takes two operands and returns one result, each of these is required to be of the same type.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  %lhs, %rhs  : functional-type(operands, results)"},{"location":"dialects/HighLevel/HighLevel/#operands_37","title":"Operands:","text":"Operand Description <code>lhs</code> any type <code>rhs</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_46","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlfield-vasthlfielddeclop","title":"<code>hl.field</code> (::vast::hl::FieldDeclOp)","text":"<p>VAST record field declaration</p> <p>Syntax:</p> <pre><code>operation ::= `hl.field` $name attr-dict (`bw` $bits^)? `:` $type\n</code></pre> <p>VAST record field declaration Interfaces: <code>MemberVarSymbol</code>, <code>VastSymbol</code></p>"},{"location":"dialects/HighLevel/HighLevel/#attributes_16","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>name</code>::mlir::StringAttrstring attribute <code>type</code>::mlir::TypeAttrany type attribute <code>bits</code>::mlir::IntegerAttr32-bit signless integer attribute"},{"location":"dialects/HighLevel/HighLevel/#hlfmul-vasthlmulfop","title":"<code>hl.fmul</code> (::vast::hl::MulFOp)","text":"<p>VAST arithmetic binary operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.fmul` $lhs `,` $rhs attr-dict `:` functional-type(operands, results)\n</code></pre> <p>High-level arithmetic binary operation. This operation takes two operands and returns one result, each of these is required to be of the same type.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  %lhs, %rhs  : functional-type(operands, results)"},{"location":"dialects/HighLevel/HighLevel/#operands_38","title":"Operands:","text":"Operand Description <code>lhs</code> any type <code>rhs</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_47","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlfor-vasthlforop","title":"<code>hl.for</code> (::vast::hl::ForOp)","text":"<p>VAST for statement</p> <p>Syntax:</p> <pre><code>operation ::= `hl.for` $condRegion `incr` $incrRegion attr-dict `do` $bodyRegion\n</code></pre> <p>Operation represents a for-loop statement.</p> <p>The generic form of the operation is as follows:</p> <p>hl.for {   ... / cond region /   hl.cond.yield %cond : !hl.bool } incr {   ... / increment/update region / } do {   ... / body region / }</p> <p>Traits: <code>NoRegionArguments</code>, <code>NoTerminator</code></p> <p>Interfaces: <code>RegionKindInterface</code></p>"},{"location":"dialects/HighLevel/HighLevel/#hlfrem-vasthlremfop","title":"<code>hl.frem</code> (::vast::hl::RemFOp)","text":"<p>VAST arithmetic binary operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.frem` $lhs `,` $rhs attr-dict `:` functional-type(operands, results)\n</code></pre> <p>High-level arithmetic binary operation. This operation takes two operands and returns one result, each of these is required to be of the same type.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  %lhs, %rhs  : functional-type(operands, results)"},{"location":"dialects/HighLevel/HighLevel/#operands_39","title":"Operands:","text":"Operand Description <code>lhs</code> any type <code>rhs</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_48","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlfsub-vasthlsubfop","title":"<code>hl.fsub</code> (::vast::hl::SubFOp)","text":"<p>VAST arithmetic binary operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.fsub` $lhs `,` $rhs attr-dict `:` functional-type(operands, results)\n</code></pre> <p>High-level arithmetic binary operation. This operation takes two operands and returns one result, each of these is required to be of the same type.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  %lhs, %rhs  : functional-type(operands, results)"},{"location":"dialects/HighLevel/HighLevel/#operands_40","title":"Operands:","text":"Operand Description <code>lhs</code> any type <code>rhs</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_49","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlfunc-vasthlfuncop","title":"<code>hl.func</code> (::vast::hl::FuncOp)","text":"<p>VAST function template</p> <p>Syntax:</p> <pre><code>operation ::= `hl.func` $sym_name custom&lt; FunctionSignatureAndBody &gt;($function_type, attr-dict, $body)\n</code></pre> <p>Inspired by <code>cir::FuncOp</code> and <code>mlir::func::FuncOp</code>:</p> <p>Operations within the function cannot implicitly capture values defined outside of the function, i.e. Functions are <code>IsolatedFromAbove</code>. All external references must use function arguments or attributes that establish a symbolic connection (e.g. symbols referenced by name via a string attribute like SymbolRefAttr). An external function declaration (used when referring to a function declared in some other module) has no body.</p> <p>The function linkage information is specified by <code>linkage</code>, as defined by <code>GlobalLinkageKind</code> attribute.</p> <p>Traits: <code>AutomaticAllocationScope</code>, <code>IsolatedFromAbove</code>, <code>NoTerminator</code></p> <p>Interfaces: <code>CallableOpInterface</code>, <code>FuncSymbol</code>, <code>FunctionOpInterface</code>, <code>RegionKindInterface</code>, <code>Symbol</code>, <code>VastSymbol</code></p>"},{"location":"dialects/HighLevel/HighLevel/#attributes_17","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>sym_name</code>::mlir::StringAttrstring attribute <code>function_type</code>::mlir::TypeAttrtype attribute of function type <code>linkage</code>::vast::core::GlobalLinkageKindAttrglobal linkage kind <code>sym_visibility</code>::mlir::StringAttrstring attribute <code>arg_attrs</code>::mlir::ArrayAttrArray of dictionary attributes <code>res_attrs</code>::mlir::ArrayAttrArray of dictionary attributes"},{"location":"dialects/HighLevel/HighLevel/#hlfuncref-vasthlfuncrefop","title":"<code>hl.funcref</code> (::vast::hl::FuncRefOp)","text":"<p>VAST function reference declaration</p> <p>Syntax:</p> <pre><code>operation ::= `hl.funcref` $function attr-dict `:` type($result)\n</code></pre> <p>VAST function reference declaration</p>"},{"location":"dialects/HighLevel/HighLevel/#attributes_18","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>function</code>::mlir::FlatSymbolRefAttrflat symbol reference attribute"},{"location":"dialects/HighLevel/HighLevel/#results_50","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlglobref-vasthlglobalrefop","title":"<code>hl.globref</code> (::vast::hl::GlobalRefOp)","text":"<p>VAST global variable reference declaration</p> <p>Syntax:</p> <pre><code>operation ::= `hl.globref` $global attr-dict `:` type($result)\n</code></pre> <p>VAST global variable reference declaration</p>"},{"location":"dialects/HighLevel/HighLevel/#attributes_19","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>global</code>::mlir::StringAttrstring attribute"},{"location":"dialects/HighLevel/HighLevel/#results_51","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlgnuextension-vasthlextensionop","title":"<code>hl.gnu.extension</code> (::vast::hl::ExtensionOp)","text":"<p>VAST extension (__extension__) keyword</p> <p>Syntax:</p> <pre><code>operation ::= `hl.gnu.extension` $value attr-dict `:` type($value) `-&gt;` type($result)\n</code></pre> <p>VAST op corresponding to GNU extension keyword.</p>"},{"location":"dialects/HighLevel/HighLevel/#operands_41","title":"Operands:","text":"Operand Description <code>value</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_52","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlgoto-vasthlgotostmt","title":"<code>hl.goto</code> (::vast::hl::GotoStmt)","text":"<p>Syntax:</p> <pre><code>operation ::= `hl.goto` $label attr-dict\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#operands_42","title":"Operands:","text":"Operand Description <code>label</code>"},{"location":"dialects/HighLevel/HighLevel/#hlif-vasthlifop","title":"<code>hl.if</code> (::vast::hl::IfOp)","text":"<p>VAST if statement</p> <p>The operation takes builders of two mandatory regions -- condition and then region -- and one builder optional region representing else block of C if statement. Builders, given the location, build a particular region.</p> <p>The generic form of the operation is as follows:</p> <p>hl.if {   ... / condition region /   hl.cond.yield %cond : !hl.bool } then {   ... / then region / } else {   ... / else region / }</p> <p>Traits: <code>NoRegionArguments</code>, <code>NoTerminator</code></p> <p>Interfaces: <code>RegionKindInterface</code></p>"},{"location":"dialects/HighLevel/HighLevel/#hlimag-vasthlimagop","title":"<code>hl.imag</code> (::vast::hl::ImagOp)","text":"<p>Syntax:</p> <pre><code>operation ::= `hl.imag` $arg attr-dict `:` functional-type(operands, results)\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#operands_43","title":"Operands:","text":"Operand Description <code>arg</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_53","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlimplicit_cast-vasthlimplicitcastop","title":"<code>hl.implicit_cast</code> (::vast::hl::ImplicitCastOp)","text":"<p>VAST cast operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.implicit_cast` $value $kind attr-dict `:` type($value) `-&gt;` type($result)\n</code></pre> <p>VAST cast operation</p>"},{"location":"dialects/HighLevel/HighLevel/#attributes_20","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>kind</code>::vast::hl::CastKindAttrcast kind"},{"location":"dialects/HighLevel/HighLevel/#operands_44","title":"Operands:","text":"Operand Description <code>value</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_54","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlindirect_call-vasthlindirectcallop","title":"<code>hl.indirect_call</code> (::vast::hl::IndirectCallOp)","text":"<p>VAST call operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.indirect_call` $callee `:` type($callee)  `(` $argOperands `)` attr-dict `:` functional-type( $argOperands, $results )\n</code></pre> <p>VAST call operation Interfaces: <code>CallOpInterface</code></p>"},{"location":"dialects/HighLevel/HighLevel/#operands_45","title":"Operands:","text":"Operand Description <code>callee</code> any type <code>argOperands</code> variadic of any type"},{"location":"dialects/HighLevel/HighLevel/#results_55","title":"Results:","text":"Result Description <code>results</code> variadic of any type"},{"location":"dialects/HighLevel/HighLevel/#hlindirect_goto-vasthlindirectgotostmt","title":"<code>hl.indirect_goto</code> (::vast::hl::IndirectGotoStmt)","text":"<p>Syntax:</p> <pre><code>operation ::= `hl.indirect_goto` attr-dict `:` $target\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#hlinitlist-vasthlinitlistexpr","title":"<code>hl.initlist</code> (::vast::hl::InitListExpr)","text":"<p>VAST initializer list expression</p> <p>Syntax:</p> <pre><code>operation ::= `hl.initlist` $elements attr-dict `:` functional-type($elements, results)\n</code></pre> <p>VAST initializer list expression</p>"},{"location":"dialects/HighLevel/HighLevel/#operands_46","title":"Operands:","text":"Operand Description <code>elements</code> variadic of any type"},{"location":"dialects/HighLevel/HighLevel/#results_56","title":"Results:","text":"Result Description \u00abunnamed\u00bb variadic of any type"},{"location":"dialects/HighLevel/HighLevel/#hllabel-vasthllabelstmt","title":"<code>hl.label</code> (::vast::hl::LabelStmt)","text":"<p>VAST control flow operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.label` $label $body attr-dict\n</code></pre> <p>VAST control flow operation Traits: <code>NoRegionArguments</code>, <code>NoTerminator</code></p> <p>Interfaces: <code>RegionKindInterface</code></p>"},{"location":"dialects/HighLevel/HighLevel/#operands_47","title":"Operands:","text":"Operand Description <code>label</code>"},{"location":"dialects/HighLevel/HighLevel/#hllabeldecl-vasthllabeldeclop","title":"<code>hl.label.decl</code> (::vast::hl::LabelDeclOp)","text":"<p>Syntax:</p> <pre><code>operation ::= `hl.label.decl` $name attr-dict `:` type($result)\n</code></pre> <p>Interfaces: <code>InferTypeOpInterface</code>, <code>LabelSymbol</code>, <code>VastSymbol</code></p>"},{"location":"dialects/HighLevel/HighLevel/#attributes_21","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>name</code>::mlir::StringAttrstring attribute"},{"location":"dialects/HighLevel/HighLevel/#results_57","title":"Results:","text":"Result Description <code>result</code>"},{"location":"dialects/HighLevel/HighLevel/#hllabeladdr-vasthladdrlabelexpr","title":"<code>hl.labeladdr</code> (::vast::hl::AddrLabelExpr)","text":"<p>VAST address of label extension</p> <p>Syntax:</p> <pre><code>operation ::= `hl.labeladdr` $label attr-dict `:` type($result)\n</code></pre> <p>VAST address of label extension</p>"},{"location":"dialects/HighLevel/HighLevel/#operands_48","title":"Operands:","text":"Operand Description <code>label</code>"},{"location":"dialects/HighLevel/HighLevel/#results_58","title":"Results:","text":"Result Description <code>result</code> pointer like type"},{"location":"dialects/HighLevel/HighLevel/#hllnot-vasthllnotop","title":"<code>hl.lnot</code> (::vast::hl::LNotOp)","text":"<p>VAST unary logical operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.lnot` $arg attr-dict `:` type($arg) `-&gt;` type($res)\n</code></pre> <p>High-level unary logical operation assures that result has the right type.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  %arg : type -&gt; ret_type"},{"location":"dialects/HighLevel/HighLevel/#operands_49","title":"Operands:","text":"Operand Description <code>arg</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_59","title":"Results:","text":"Result Description <code>res</code> bool or integer like type"},{"location":"dialects/HighLevel/HighLevel/#hlmember-vasthlrecordmemberop","title":"<code>hl.member</code> (::vast::hl::RecordMemberOp)","text":"<p>VAST record element access operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.member` $record `at` $name attr-dict `:` type($record) `-&gt;` type($element)\n</code></pre> <p>VAST record element access operation</p>"},{"location":"dialects/HighLevel/HighLevel/#attributes_22","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>name</code>::mlir::StringAttrstring attribute"},{"location":"dialects/HighLevel/HighLevel/#operands_50","title":"Operands:","text":"Operand Description <code>record</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_60","title":"Results:","text":"Result Description <code>element</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlminus-vasthlminusop","title":"<code>hl.minus</code> (::vast::hl::MinusOp)","text":"<p>VAST unary type preserving operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.minus` $arg attr-dict `:` type($result)\n</code></pre> <p>Type preserving high-level unary operation assures that argument and result has the same type.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  %arg : type <p>Traits: <code>SameOperandsAndResultType</code></p> <p>Interfaces: <code>InferTypeOpInterface</code></p>"},{"location":"dialects/HighLevel/HighLevel/#operands_51","title":"Operands:","text":"Operand Description <code>arg</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_61","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlmul-vasthlmuliop","title":"<code>hl.mul</code> (::vast::hl::MulIOp)","text":"<p>VAST arithmetic binary operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.mul` $lhs `,` $rhs attr-dict `:` functional-type(operands, results)\n</code></pre> <p>High-level arithmetic binary operation. This operation takes two operands and returns one result, each of these is required to be of the same type.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  %lhs, %rhs  : functional-type(operands, results) <p>Traits: <code>Commutative</code></p>"},{"location":"dialects/HighLevel/HighLevel/#operands_52","title":"Operands:","text":"Operand Description <code>lhs</code> any type <code>rhs</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_62","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlnot-vasthlnotop","title":"<code>hl.not</code> (::vast::hl::NotOp)","text":"<p>VAST unary type preserving operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.not` $arg attr-dict `:` type($result)\n</code></pre> <p>Type preserving high-level unary operation assures that argument and result has the same type.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  %arg : type <p>Traits: <code>SameOperandsAndResultType</code></p> <p>Interfaces: <code>InferTypeOpInterface</code></p>"},{"location":"dialects/HighLevel/HighLevel/#operands_53","title":"Operands:","text":"Operand Description <code>arg</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_63","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hloffsetofexpr-vasthloffsetofexprop","title":"<code>hl.offsetof.expr</code> (::vast::hl::OffsetOfExprOp)","text":"<p>VAST expr offsetof operator</p> <p>Syntax:</p> <pre><code>operation ::= `hl.offsetof.expr` attr-dict `type` `:` $source `,` `member` `:` $components `:` type($result) $array_index_exprs\n</code></pre> <p>VAST expr offsetof operator. The operation holds an array of components - identifiers or indexes of array indexing expressions and an array of regions - each corresponding to one indexing expression.</p>"},{"location":"dialects/HighLevel/HighLevel/#attributes_23","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>source</code>::mlir::TypeAttrany type attribute <code>components</code>::mlir::ArrayAttrarray attribute"},{"location":"dialects/HighLevel/HighLevel/#results_64","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlopaque_expr-vasthlopaquevalueexpr","title":"<code>hl.opaque_expr</code> (::vast::hl::OpaqueValueExpr)","text":"<p>Opaque value expression from clang AST.</p> <p>Syntax:</p> <pre><code>operation ::= `hl.opaque_expr` $arg `:` functional-type(operands, $result) attr-dict\n</code></pre> <p>This op takes an argument and returns it. According to clang documentation it is \"usually\" a copy operation with no special semantings. The current use in VAST is to have the opaque value computed in some region and then using this op to extract the computed value from region argument (see BinaryCondOp).</p>"},{"location":"dialects/HighLevel/HighLevel/#operands_54","title":"Operands:","text":"Operand Description <code>arg</code> variadic of any type"},{"location":"dialects/HighLevel/HighLevel/#results_65","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlplus-vasthlplusop","title":"<code>hl.plus</code> (::vast::hl::PlusOp)","text":"<p>VAST unary type preserving operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.plus` $arg attr-dict `:` type($result)\n</code></pre> <p>Type preserving high-level unary operation assures that argument and result has the same type.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  %arg : type <p>Traits: <code>SameOperandsAndResultType</code></p> <p>Interfaces: <code>InferTypeOpInterface</code></p>"},{"location":"dialects/HighLevel/HighLevel/#operands_55","title":"Operands:","text":"Operand Description <code>arg</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_66","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlpostdec-vasthlpostdecop","title":"<code>hl.post.dec</code> (::vast::hl::PostDecOp)","text":"<p>VAST unary inplace operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.post.dec` $arg attr-dict `:` type($arg) `-&gt;` type($result)\n</code></pre> <p>Inplace high-level unary operation changes its single argument in place. It does not produce a new value.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  %arg : type <p>Interfaces: <code>InferTypeOpInterface</code></p>"},{"location":"dialects/HighLevel/HighLevel/#operands_56","title":"Operands:","text":"Operand Description <code>arg</code> lvalue to any type"},{"location":"dialects/HighLevel/HighLevel/#results_67","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlpostinc-vasthlpostincop","title":"<code>hl.post.inc</code> (::vast::hl::PostIncOp)","text":"<p>VAST unary inplace operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.post.inc` $arg attr-dict `:` type($arg) `-&gt;` type($result)\n</code></pre> <p>Inplace high-level unary operation changes its single argument in place. It does not produce a new value.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  %arg : type <p>Interfaces: <code>InferTypeOpInterface</code></p>"},{"location":"dialects/HighLevel/HighLevel/#operands_57","title":"Operands:","text":"Operand Description <code>arg</code> lvalue to any type"},{"location":"dialects/HighLevel/HighLevel/#results_68","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlpredec-vasthlpredecop","title":"<code>hl.pre.dec</code> (::vast::hl::PreDecOp)","text":"<p>VAST unary inplace operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.pre.dec` $arg attr-dict `:` type($arg) `-&gt;` type($result)\n</code></pre> <p>Inplace high-level unary operation changes its single argument in place. It does not produce a new value.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  %arg : type <p>Interfaces: <code>InferTypeOpInterface</code></p>"},{"location":"dialects/HighLevel/HighLevel/#operands_58","title":"Operands:","text":"Operand Description <code>arg</code> lvalue to any type"},{"location":"dialects/HighLevel/HighLevel/#results_69","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlpreinc-vasthlpreincop","title":"<code>hl.pre.inc</code> (::vast::hl::PreIncOp)","text":"<p>VAST unary inplace operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.pre.inc` $arg attr-dict `:` type($arg) `-&gt;` type($result)\n</code></pre> <p>Inplace high-level unary operation changes its single argument in place. It does not produce a new value.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  %arg : type <p>Interfaces: <code>InferTypeOpInterface</code></p>"},{"location":"dialects/HighLevel/HighLevel/#operands_59","title":"Operands:","text":"Operand Description <code>arg</code> lvalue to any type"},{"location":"dialects/HighLevel/HighLevel/#results_70","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlpredefinedexpr-vasthlpredefinedexpr","title":"<code>hl.predefined.expr</code> (::vast::hl::PredefinedExpr)","text":"<p>VAT predefined expr ( such as __func__ )</p> <p>Syntax:</p> <pre><code>operation ::= `hl.predefined.expr` $value $kind attr-dict `:` type($value) `-&gt;` type($result)\n</code></pre> <p>VAT predefined expr ( such as func )</p>"},{"location":"dialects/HighLevel/HighLevel/#attributes_24","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>kind</code>::vast::hl::IdentKindAttrident kind"},{"location":"dialects/HighLevel/HighLevel/#operands_60","title":"Operands:","text":"Operand Description <code>value</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_71","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlpreferred_alignofexpr-vasthlpreferredalignofexprop","title":"<code>hl.preferred_alignof.expr</code> (::vast::hl::PreferredAlignOfExprOp)","text":"<p>VAST expr alignof operator</p> <p>Syntax:</p> <pre><code>operation ::= `hl.preferred_alignof.expr` attr-dict `-&gt;` type($result) $expr\n</code></pre> <p>VAST expr alignof operator Traits: <code>AlwaysSpeculatableImplTrait</code></p> <p>Interfaces: <code>ConditionallySpeculatable</code>, <code>NoMemoryEffect (MemoryEffectOpInterface)</code></p> <p>Effects: <code>MemoryEffects::Effect{}</code></p>"},{"location":"dialects/HighLevel/HighLevel/#results_72","title":"Results:","text":"Result Description <code>result</code> integer like type"},{"location":"dialects/HighLevel/HighLevel/#hlpreferred_alignoftype-vasthlpreferredalignoftypeop","title":"<code>hl.preferred_alignof.type</code> (::vast::hl::PreferredAlignOfTypeOp)","text":"<p>VAST type alignof operator</p> <p>Syntax:</p> <pre><code>operation ::= `hl.preferred_alignof.type` $arg attr-dict `-&gt;` type($result)\n</code></pre> <p>VAST type alignof operator Traits: <code>AlwaysSpeculatableImplTrait</code></p> <p>Interfaces: <code>ConditionallySpeculatable</code>, <code>NoMemoryEffect (MemoryEffectOpInterface)</code></p> <p>Effects: <code>MemoryEffects::Effect{}</code></p>"},{"location":"dialects/HighLevel/HighLevel/#attributes_25","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>arg</code>::mlir::TypeAttrany type attribute"},{"location":"dialects/HighLevel/HighLevel/#results_73","title":"Results:","text":"Result Description <code>result</code> integer like type"},{"location":"dialects/HighLevel/HighLevel/#hlreal-vasthlrealop","title":"<code>hl.real</code> (::vast::hl::RealOp)","text":"<p>Syntax:</p> <pre><code>operation ::= `hl.real` $arg attr-dict `:` functional-type(operands, results)\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#operands_61","title":"Operands:","text":"Operand Description <code>arg</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_74","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlref-vasthldeclrefop","title":"<code>hl.ref</code> (::vast::hl::DeclRefOp)","text":"<p>VAST variable reference declaration</p> <p>Syntax:</p> <pre><code>operation ::= `hl.ref` $decl attr-dict `:` functional-type(operands, results)\n</code></pre> <p>VAST variable reference declaration</p>"},{"location":"dialects/HighLevel/HighLevel/#operands_62","title":"Operands:","text":"Operand Description <code>decl</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_75","title":"Results:","text":"Result Description <code>result</code> lvalue to any type"},{"location":"dialects/HighLevel/HighLevel/#hlreturn-vasthlreturnop","title":"<code>hl.return</code> (::vast::hl::ReturnOp)","text":"<p>Syntax:</p> <pre><code>operation ::= `hl.return` ($result^ `:` type($result))? attr-dict\n</code></pre> <p>Traits: <code>ReturnLikeTrait</code>, <code>SoftTerminatorTrait</code></p>"},{"location":"dialects/HighLevel/HighLevel/#operands_63","title":"Operands:","text":"Operand Description <code>result</code> variadic of any type"},{"location":"dialects/HighLevel/HighLevel/#hlsdiv-vasthldivsop","title":"<code>hl.sdiv</code> (::vast::hl::DivSOp)","text":"<p>VAST arithmetic binary operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.sdiv` $lhs `,` $rhs attr-dict `:` functional-type(operands, results)\n</code></pre> <p>High-level arithmetic binary operation. This operation takes two operands and returns one result, each of these is required to be of the same type.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  %lhs, %rhs  : functional-type(operands, results)"},{"location":"dialects/HighLevel/HighLevel/#operands_64","title":"Operands:","text":"Operand Description <code>lhs</code> any type <code>rhs</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_76","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlsizeofexpr-vasthlsizeofexprop","title":"<code>hl.sizeof.expr</code> (::vast::hl::SizeOfExprOp)","text":"<p>VAST expr sizeof operator</p> <p>Syntax:</p> <pre><code>operation ::= `hl.sizeof.expr` attr-dict `-&gt;` type($result) $expr\n</code></pre> <p>VAST expr sizeof operator Traits: <code>AlwaysSpeculatableImplTrait</code></p> <p>Interfaces: <code>ConditionallySpeculatable</code>, <code>NoMemoryEffect (MemoryEffectOpInterface)</code></p> <p>Effects: <code>MemoryEffects::Effect{}</code></p>"},{"location":"dialects/HighLevel/HighLevel/#results_77","title":"Results:","text":"Result Description <code>result</code> integer like type"},{"location":"dialects/HighLevel/HighLevel/#hlsizeoftype-vasthlsizeoftypeop","title":"<code>hl.sizeof.type</code> (::vast::hl::SizeOfTypeOp)","text":"<p>VAST type sizeof operator</p> <p>Syntax:</p> <pre><code>operation ::= `hl.sizeof.type` $arg attr-dict `-&gt;` type($result)\n</code></pre> <p>Corresponds to sizeof() expression. Traits: <code>AlwaysSpeculatableImplTrait</code> <p>Interfaces: <code>ConditionallySpeculatable</code>, <code>NoMemoryEffect (MemoryEffectOpInterface)</code></p> <p>Effects: <code>MemoryEffects::Effect{}</code></p>"},{"location":"dialects/HighLevel/HighLevel/#attributes_26","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>arg</code>::mlir::TypeAttrany type attribute"},{"location":"dialects/HighLevel/HighLevel/#results_78","title":"Results:","text":"Result Description <code>result</code> integer like type"},{"location":"dialects/HighLevel/HighLevel/#hlskip-vasthlskipstmt","title":"<code>hl.skip</code> (::vast::hl::SkipStmt)","text":"<p>VAST skip statement</p> <p>Syntax:</p> <pre><code>operation ::= `hl.skip` attr-dict\n</code></pre> <p>VAST skip statement</p>"},{"location":"dialects/HighLevel/HighLevel/#hlsrem-vasthlremsop","title":"<code>hl.srem</code> (::vast::hl::RemSOp)","text":"<p>VAST arithmetic binary operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.srem` $lhs `,` $rhs attr-dict `:` functional-type(operands, results)\n</code></pre> <p>High-level arithmetic binary operation. This operation takes two operands and returns one result, each of these is required to be of the same type.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  %lhs, %rhs  : functional-type(operands, results)"},{"location":"dialects/HighLevel/HighLevel/#operands_65","title":"Operands:","text":"Operand Description <code>lhs</code> any type <code>rhs</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_79","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlstmtexpr-vasthlstmtexprop","title":"<code>hl.stmt.expr</code> (::vast::hl::StmtExprOp)","text":"<p>VAST statement expression</p> <p>Syntax:</p> <pre><code>operation ::= `hl.stmt.expr` attr-dict `:` type($result) $substmt\n</code></pre> <p>VAST statement expression Traits: <code>SingleBlock</code></p> <p>Interfaces: <code>RegionKindInterface</code></p>"},{"location":"dialects/HighLevel/HighLevel/#results_80","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlstruct-vasthlstructdeclop","title":"<code>hl.struct</code> (::vast::hl::StructDeclOp)","text":"<p>VAST struct declaration</p> <p>Syntax:</p> <pre><code>operation ::= `hl.struct` $name attr-dict `:` $fields\n</code></pre> <p>VAST struct declaration Traits: <code>NoTerminator</code></p> <p>Interfaces: <code>AggregateTypeDefinitionInterface</code>, <code>TypeSymbol</code>, <code>VAST_RecordDeclInterface</code>, <code>VAST_TagDeclInterface</code>, <code>VastSymbol</code></p>"},{"location":"dialects/HighLevel/HighLevel/#attributes_27","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>name</code>::mlir::StringAttrstring attribute"},{"location":"dialects/HighLevel/HighLevel/#hlsub-vasthlsubiop","title":"<code>hl.sub</code> (::vast::hl::SubIOp)","text":"<p>VAST arithmetic binary operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.sub` $lhs `,` $rhs attr-dict `:` functional-type(operands, results)\n</code></pre> <p>High-level arithmetic binary operation. This operation takes two operands and returns one result, each of these is required to be of the same type.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  %lhs, %rhs  : functional-type(operands, results)"},{"location":"dialects/HighLevel/HighLevel/#operands_66","title":"Operands:","text":"Operand Description <code>lhs</code> any type <code>rhs</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_81","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlsubscript-vasthlsubscriptop","title":"<code>hl.subscript</code> (::vast::hl::SubscriptOp)","text":"<p>VAST array subscript operator</p> <p>Syntax:</p> <pre><code>operation ::= `hl.subscript` $array `at` ` ` `[` $index `:` type($index) `]` attr-dict\n              `:` type($array) `-&gt;` type($result)\n</code></pre> <p>VAST array subscript operator</p>"},{"location":"dialects/HighLevel/HighLevel/#operands_67","title":"Operands:","text":"Operand Description <code>array</code> lvalue to subscriptable type <code>index</code> integer like type"},{"location":"dialects/HighLevel/HighLevel/#results_82","title":"Results:","text":"Result Description <code>result</code> lvalue to any type"},{"location":"dialects/HighLevel/HighLevel/#hlswitch-vasthlswitchop","title":"<code>hl.switch</code> (::vast::hl::SwitchOp)","text":"<p>VAST switch statement</p> <p>Syntax:</p> <pre><code>operation ::= `hl.switch` $condRegion `cases` $cases attr-dict\n</code></pre> <p>The operation represents a switch statement.</p> <p>The generic form of the operation is as follows:</p> <p>hl.switch {   ... / cond region /   hl.value.yield %val : !hl.type } cases {   ... / casesregion / }</p> <p>Traits: <code>NoRegionArguments</code>, <code>NoTerminator</code></p> <p>Interfaces: <code>RegionKindInterface</code></p>"},{"location":"dialects/HighLevel/HighLevel/#hlthis-vasthlthisop","title":"<code>hl.this</code> (::vast::hl::ThisOp)","text":"<p>VAST this operator</p> <p>Syntax:</p> <pre><code>operation ::= `hl.this` attr-dict `:` type($result)\n</code></pre> <p>VAST this operator</p>"},{"location":"dialects/HighLevel/HighLevel/#results_83","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hltranslation_unit-vasthltranslationunitop","title":"<code>hl.translation_unit</code> (::vast::hl::TranslationUnitOp)","text":"<p>VAST translation unit</p> <p>Syntax:</p> <pre><code>operation ::= `hl.translation_unit` $body attr-dict\n</code></pre> <p>VAST tranaslation unit Traits: <code>IsolatedFromAbove</code>, <code>NoTerminator</code>, <code>SymbolTable</code></p>"},{"location":"dialects/HighLevel/HighLevel/#hltype-vasthltypedeclop","title":"<code>hl.type</code> (::vast::hl::TypeDeclOp)","text":"<p>VAST type declaration</p> <p>Syntax:</p> <pre><code>operation ::= `hl.type` $name attr-dict\n</code></pre> <p>VAST type declaration Interfaces: <code>TypeSymbol</code>, <code>VastSymbol</code></p>"},{"location":"dialects/HighLevel/HighLevel/#attributes_28","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>name</code>::mlir::StringAttrstring attribute"},{"location":"dialects/HighLevel/HighLevel/#hltypeyield-vasthltypeyieldop","title":"<code>hl.type.yield</code> (::vast::hl::TypeYieldOp)","text":"<p>Type yield operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.type.yield` attr-dict $result `:` type($result)\n</code></pre> <p>A type yield operation is used to terminate the underlying expression region of a typeof(expr) statement.</p> <p>The custom assembly form of the operation is as follows:</p> <p>hl.type.yield result : type</p> <p>Traits: <code>Terminator</code></p>"},{"location":"dialects/HighLevel/HighLevel/#operands_68","title":"Operands:","text":"Operand Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hltypedef-vasthltypedefop","title":"<code>hl.typedef</code> (::vast::hl::TypeDefOp)","text":"<p>VAST typedef operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.typedef` $name attr-dict `:` $type\n</code></pre> <p>Typedef operation servers to declare named types. It creates a new type symbol in the current scope to be referenced as NamedType later.</p> <p>This operation corresponds to <code>clang::TypedefDecl</code>.</p> <p>Interfaces: <code>TypeSymbol</code>, <code>VastSymbol</code></p>"},{"location":"dialects/HighLevel/HighLevel/#attributes_29","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>name</code>::mlir::StringAttrstring attribute <code>type</code>::mlir::TypeAttrany type attribute"},{"location":"dialects/HighLevel/HighLevel/#hltypeofexpr-vasthltypeofexprop","title":"<code>hl.typeof.expr</code> (::vast::hl::TypeOfExprOp)","text":"<p>VAST typeof(expr) operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.typeof.expr` $name $expr `:` $type attr-dict\n</code></pre> <p>The Typeof operation serves to declare a type using type introspection. It evaluates its underlying expression, creates a new type symbol in the current scope, assigns it to the type of the underlying expression, and returns the type symbol to be referenced later</p> <p>Traits: <code>SingleBlock</code></p>"},{"location":"dialects/HighLevel/HighLevel/#attributes_30","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>name</code>::mlir::StringAttrstring attribute <code>type</code>::mlir::TypeAttrany type attribute"},{"location":"dialects/HighLevel/HighLevel/#hludiv-vasthldivuop","title":"<code>hl.udiv</code> (::vast::hl::DivUOp)","text":"<p>VAST arithmetic binary operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.udiv` $lhs `,` $rhs attr-dict `:` functional-type(operands, results)\n</code></pre> <p>High-level arithmetic binary operation. This operation takes two operands and returns one result, each of these is required to be of the same type.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  %lhs, %rhs  : functional-type(operands, results)"},{"location":"dialects/HighLevel/HighLevel/#operands_69","title":"Operands:","text":"Operand Description <code>lhs</code> any type <code>rhs</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_84","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlunion-vasthluniondeclop","title":"<code>hl.union</code> (::vast::hl::UnionDeclOp)","text":"<p>VAST record declaration</p> <p>Syntax:</p> <pre><code>operation ::= `hl.union` $name attr-dict `:` $fields\n</code></pre> <p>VAST record declaration Traits: <code>NoTerminator</code></p> <p>Interfaces: <code>AggregateTypeDefinitionInterface</code>, <code>TypeSymbol</code>, <code>VastSymbol</code></p>"},{"location":"dialects/HighLevel/HighLevel/#attributes_31","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>name</code>::mlir::StringAttrstring attribute"},{"location":"dialects/HighLevel/HighLevel/#hlunreachable-vasthlunreachableop","title":"<code>hl.unreachable</code> (::vast::hl::UnreachableOp)","text":"<p>VAST unreachable operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.unreachable` attr-dict\n</code></pre> <p>VAST unreachable operation Traits: <code>Terminator</code></p>"},{"location":"dialects/HighLevel/HighLevel/#hlurem-vasthlremuop","title":"<code>hl.urem</code> (::vast::hl::RemUOp)","text":"<p>VAST arithmetic binary operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.urem` $lhs `,` $rhs attr-dict `:` functional-type(operands, results)\n</code></pre> <p>High-level arithmetic binary operation. This operation takes two operands and returns one result, each of these is required to be of the same type.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  %lhs, %rhs  : functional-type(operands, results)"},{"location":"dialects/HighLevel/HighLevel/#operands_70","title":"Operands:","text":"Operand Description <code>lhs</code> any type <code>rhs</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_85","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlva_arg_expr-vasthlvaargexpr","title":"<code>hl.va_arg_expr</code> (::vast::hl::VAArgExpr)","text":"<p>Fetch next variadic element.</p> <p>Syntax:</p> <pre><code>operation ::= `hl.va_arg_expr` $arg_list `:` functional-type(operands, $result) attr-dict\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#operands_71","title":"Operands:","text":"Operand Description <code>arg_list</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_86","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlvalueyield-vasthlvalueyieldop","title":"<code>hl.value.yield</code> (::vast::hl::ValueYieldOp)","text":"<p>Value yield operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.value.yield` attr-dict $result `:` type($result)\n</code></pre> <p>A value yield operation is used to terminate the case region of a switch statement. The yielded value triggers the parent case statement region.</p> <p>The custom assembly form of the operation is as follows:</p> <p>hl.value.yield result : type</p> <p>Traits: <code>Terminator</code></p>"},{"location":"dialects/HighLevel/HighLevel/#operands_72","title":"Operands:","text":"Operand Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlvar-vasthlvardeclop","title":"<code>hl.var</code> (::vast::hl::VarDeclOp)","text":"<p>VAST variable declaration</p> <p>Syntax:</p> <pre><code>operation ::= `hl.var` $name attr-dict ($storageClass^)? ($threadStorageClass^)? `:` type($result)\n              (`=` $initializer^)?\n              (`allocation_size` $allocation_size^)?\n</code></pre> <p>VAST variable declaration Interfaces: <code>VarSymbol</code>, <code>VastSymbol</code></p>"},{"location":"dialects/HighLevel/HighLevel/#attributes_32","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>name</code>::mlir::StringAttrstring attribute <code>storageClass</code>::vast::hl::StorageClassAttrstorage class <code>threadStorageClass</code>::vast::hl::TSClassAttrthread storage class"},{"location":"dialects/HighLevel/HighLevel/#results_87","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlwhile-vasthlwhileop","title":"<code>hl.while</code> (::vast::hl::WhileOp)","text":"<p>VAST while statement</p> <p>Syntax:</p> <pre><code>operation ::= `hl.while` $condRegion `do` $bodyRegion attr-dict\n</code></pre> <p>The operation takes builders of two mandatory regions -- condition and body region. Builders, given the location, build a particular region.</p> <p>The generic form of the operation is as follows:</p> <p>hl.while {   ... / condition region /   hl.cond.yield %cond : !hl.bool } do {   ... / body region / }</p> <p>Traits: <code>NoRegionArguments</code>, <code>NoTerminator</code></p> <p>Interfaces: <code>RegionKindInterface</code></p>"},{"location":"dialects/HighLevel/HighLevel/#attributes_33","title":"Attributes","text":""},{"location":"dialects/HighLevel/HighLevel/#aliasattr","title":"AliasAttr","text":"<p>Syntax:</p> <pre><code>#hl.alias&lt;\n  ::mlir::StringAttr   # name\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters","title":"Parameters:","text":"Parameter C++ type Description name <code>::mlir::StringAttr</code>"},{"location":"dialects/HighLevel/HighLevel/#alignedattr","title":"AlignedAttr","text":"<p>Syntax: <code>#hl.aligned</code></p>"},{"location":"dialects/HighLevel/HighLevel/#allocalignattr","title":"AllocAlignAttr","text":"<p>Syntax:</p> <pre><code>#hl.alloc_align&lt;\n  int   # alignment\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_1","title":"Parameters:","text":"Parameter C++ type Description alignment <code>int</code>"},{"location":"dialects/HighLevel/HighLevel/#allocsizeattr","title":"AllocSizeAttr","text":"<p>Syntax:</p> <pre><code>#hl.alloc_size&lt;\n  int,   # size_arg_pos\n  int   # num_arg_pos\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_2","title":"Parameters:","text":"Parameter C++ type Description size_arg_pos <code>int</code> num_arg_pos <code>int</code>"},{"location":"dialects/HighLevel/HighLevel/#alwaysinlineattr","title":"AlwaysInlineAttr","text":"<p>Syntax: <code>#hl.always_inline</code></p>"},{"location":"dialects/HighLevel/HighLevel/#annotationattr","title":"AnnotationAttr","text":"<p>Syntax:</p> <pre><code>#hl.annotation&lt;\n  ::mlir::StringAttr   # name\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_3","title":"Parameters:","text":"Parameter C++ type Description name <code>::mlir::StringAttr</code>"},{"location":"dialects/HighLevel/HighLevel/#asmlabelattr","title":"AsmLabelAttr","text":"<p>Syntax:</p> <pre><code>#hl.asm&lt;\n  ::mlir::StringAttr,   # label\n  bool   # isLiteral\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_4","title":"Parameters:","text":"Parameter C++ type Description label <code>::mlir::StringAttr</code> isLiteral <code>bool</code>"},{"location":"dialects/HighLevel/HighLevel/#availabilityattrattr","title":"AvailabilityAttrAttr","text":"<p>Syntax: <code>#hl.availability</code></p>"},{"location":"dialects/HighLevel/HighLevel/#availableonlyindefaultevalmethodattr","title":"AvailableOnlyInDefaultEvalMethodAttr","text":"<p>Syntax: <code>#hl.available_only_in_default_eval_method</code></p>"},{"location":"dialects/HighLevel/HighLevel/#builtinattr","title":"BuiltinAttr","text":"<p>Syntax:</p> <pre><code>#hl.builtin&lt;\n  unsigned   # ID\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_5","title":"Parameters:","text":"Parameter C++ type Description ID <code>unsigned</code>"},{"location":"dialects/HighLevel/HighLevel/#cvqualifiersattr","title":"CVQualifiersAttr","text":"<p>Syntax:</p> <pre><code>#hl.quals&lt;\n  bool,   # is_const\n  bool   # is_volatile\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_6","title":"Parameters:","text":"Parameter C++ type Description is_const <code>bool</code> const qualifier is_volatile <code>bool</code> volatile qualifier"},{"location":"dialects/HighLevel/HighLevel/#cvrqualifiersattr","title":"CVRQualifiersAttr","text":"<p>Syntax:</p> <pre><code>#hl.quals&lt;\n  bool,   # is_const\n  bool,   # is_volatile\n  bool   # is_restrict\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_7","title":"Parameters:","text":"Parameter C++ type Description is_const <code>bool</code> const qualifier is_volatile <code>bool</code> volatile qualifier is_restrict <code>bool</code> restrict qualifier"},{"location":"dialects/HighLevel/HighLevel/#coldattr","title":"ColdAttr","text":"<p>Syntax: <code>#hl.cold</code></p>"},{"location":"dialects/HighLevel/HighLevel/#constattr","title":"ConstAttr","text":"<p>Syntax: <code>#hl.const</code></p>"},{"location":"dialects/HighLevel/HighLevel/#deprecatedattr","title":"DeprecatedAttr","text":"<p>Syntax:</p> <pre><code>#hl.deprecated&lt;\n  ::mlir::StringAttr,   # message\n  ::mlir::StringAttr   # fixit\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_8","title":"Parameters:","text":"Parameter C++ type Description message <code>::mlir::StringAttr</code> fixit <code>::mlir::StringAttr</code>"},{"location":"dialects/HighLevel/HighLevel/#formatattr","title":"FormatAttr","text":"<p>Syntax:</p> <pre><code>#hl.format&lt;\n  ::mlir::StringAttr   # name\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_9","title":"Parameters:","text":"Parameter C++ type Description name <code>::mlir::StringAttr</code>"},{"location":"dialects/HighLevel/HighLevel/#leafattr","title":"LeafAttr","text":"<p>Syntax: <code>#hl.leaf</code></p>"},{"location":"dialects/HighLevel/HighLevel/#loaderuninitializedattr","title":"LoaderUninitializedAttr","text":"<p>Syntax: <code>#hl.loader_uninitialized</code></p>"},{"location":"dialects/HighLevel/HighLevel/#maxfieldalignmentattr","title":"MaxFieldAlignmentAttr","text":"<p>Syntax:</p> <pre><code>#hl.max_field_alignment&lt;\n  unsigned   # alignment\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_10","title":"Parameters:","text":"Parameter C++ type Description alignment <code>unsigned</code>"},{"location":"dialects/HighLevel/HighLevel/#mayaliasattr","title":"MayAliasAttr","text":"<p>Syntax: <code>#hl.may_alias</code></p>"},{"location":"dialects/HighLevel/HighLevel/#modeattr","title":"ModeAttr","text":"<p>Syntax:</p> <pre><code>#hl.mode&lt;\n  ::mlir::StringAttr   # mode\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_11","title":"Parameters:","text":"Parameter C++ type Description mode <code>::mlir::StringAttr</code>"},{"location":"dialects/HighLevel/HighLevel/#noinlineattr","title":"NoInlineAttr","text":"<p>Syntax: <code>#hl.noinline</code></p>"},{"location":"dialects/HighLevel/HighLevel/#noinstrumentfunctionattr","title":"NoInstrumentFunctionAttr","text":"<p>Syntax: <code>#hl.no_instrument_function</code></p>"},{"location":"dialects/HighLevel/HighLevel/#nothrowattr","title":"NoThrowAttr","text":"<p>Syntax: <code>#hl.nothrow</code></p>"},{"location":"dialects/HighLevel/HighLevel/#nonnullattr","title":"NonNullAttr","text":"<p>Syntax: <code>#hl.nonnull</code></p>"},{"location":"dialects/HighLevel/HighLevel/#offsetofnodeattr","title":"OffsetOfNodeAttr","text":"<p>VAST expr offsetofnode </p> <p>This attribute corresponds to OffsetOfExprNode used by Clang AST. It can containt either an index into the list of expressions(regions) that index arrays or a field identifier or base class specifier.</p>"},{"location":"dialects/HighLevel/HighLevel/#parameters_12","title":"Parameters:","text":"Parameter C++ type Description value <code>std::variant&lt; unsigned int, ::mlir::StringAttr &gt;</code>"},{"location":"dialects/HighLevel/HighLevel/#packedattr","title":"PackedAttr","text":"<p>Syntax: <code>#hl.packed</code></p>"},{"location":"dialects/HighLevel/HighLevel/#pureattr","title":"PureAttr","text":"<p>Syntax: <code>#hl.pure</code></p>"},{"location":"dialects/HighLevel/HighLevel/#restrictattr","title":"RestrictAttr","text":"<p>Syntax: <code>#hl.restrict</code></p>"},{"location":"dialects/HighLevel/HighLevel/#returnstwiceattr","title":"ReturnsTwiceAttr","text":"<p>Syntax: <code>#hl.returns_twice</code></p>"},{"location":"dialects/HighLevel/HighLevel/#sectionattr","title":"SectionAttr","text":"<p>Syntax:</p> <pre><code>#hl.section&lt;\n  ::mlir::StringAttr   # name\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_13","title":"Parameters:","text":"Parameter C++ type Description name <code>::mlir::StringAttr</code>"},{"location":"dialects/HighLevel/HighLevel/#transparentunionattr","title":"TransparentUnionAttr","text":"<p>Syntax: <code>#hl.transparent_union</code></p>"},{"location":"dialects/HighLevel/HighLevel/#ucvqualifiersattr","title":"UCVQualifiersAttr","text":"<p>Syntax:</p> <pre><code>#hl.quals&lt;\n  bool,   # is_unsigned\n  bool,   # is_const\n  bool   # is_volatile\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_14","title":"Parameters:","text":"Parameter C++ type Description is_unsigned <code>bool</code> unsigned qualifier is_const <code>bool</code> const qualifier is_volatile <code>bool</code> volatile qualifier"},{"location":"dialects/HighLevel/HighLevel/#warnunusedresultattr","title":"WarnUnusedResultAttr","text":"<p>Syntax: <code>#hl.warn_unused_result</code></p>"},{"location":"dialects/HighLevel/HighLevel/#types","title":"Types","text":""},{"location":"dialects/HighLevel/HighLevel/#adjustedtype","title":"AdjustedType","text":"<p>Syntax:</p> <pre><code>!hl.adjusted&lt;\n  Type,   # original\n  Type   # adjusted\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_15","title":"Parameters:","text":"Parameter C++ type Description original <code>Type</code> adjusted <code>Type</code>"},{"location":"dialects/HighLevel/HighLevel/#arraytype","title":"ArrayType","text":"<p>Syntax:</p> <pre><code>!hl.array&lt;\n  SizeParam,   # size\n  Type,   # elementType\n  CVRQualifiersAttr   # quals\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_16","title":"Parameters:","text":"Parameter C++ type Description size <code>SizeParam</code> size parameter for arrays elementType <code>Type</code> quals <code>CVRQualifiersAttr</code>"},{"location":"dialects/HighLevel/HighLevel/#atomictype","title":"AtomicType","text":"<p>Syntax:</p> <pre><code>!hl.atomic&lt;\n  Type,   # elementType\n  CVRQualifiersAttr   # quals\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_17","title":"Parameters:","text":"Parameter C++ type Description elementType <code>Type</code> quals <code>CVRQualifiersAttr</code>"},{"location":"dialects/HighLevel/HighLevel/#attributedtype","title":"AttributedType","text":"<p>Syntax:</p> <pre><code>!hl.attributed&lt;\n  Type   # elementType\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_18","title":"Parameters:","text":"Parameter C++ type Description elementType <code>Type</code>"},{"location":"dialects/HighLevel/HighLevel/#bfloat16type","title":"BFloat16Type","text":"<p>Syntax:</p> <pre><code>!hl.bfloat16&lt;\n  CVQualifiersAttr   # quals\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_19","title":"Parameters:","text":"Parameter C++ type Description quals <code>CVQualifiersAttr</code>"},{"location":"dialects/HighLevel/HighLevel/#booltype","title":"BoolType","text":"<p>Syntax:</p> <pre><code>!hl.bool&lt;\n  CVQualifiersAttr   # quals\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_20","title":"Parameters:","text":"Parameter C++ type Description quals <code>CVQualifiersAttr</code>"},{"location":"dialects/HighLevel/HighLevel/#chartype","title":"CharType","text":"<p>Syntax:</p> <pre><code>!hl.char&lt;\n  UCVQualifiersAttr   # quals\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_21","title":"Parameters:","text":"Parameter C++ type Description quals <code>UCVQualifiersAttr</code>"},{"location":"dialects/HighLevel/HighLevel/#complextype","title":"ComplexType","text":"<p>Syntax:</p> <pre><code>!hl.complex&lt;\n  Type,   # elementType\n  CVRQualifiersAttr   # quals\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_22","title":"Parameters:","text":"Parameter C++ type Description elementType <code>Type</code> quals <code>CVRQualifiersAttr</code>"},{"location":"dialects/HighLevel/HighLevel/#decayedtype","title":"DecayedType","text":"<p>Syntax:</p> <pre><code>!hl.decayed&lt;\n  Type   # elementType\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_23","title":"Parameters:","text":"Parameter C++ type Description elementType <code>Type</code>"},{"location":"dialects/HighLevel/HighLevel/#doubletype","title":"DoubleType","text":"<p>Syntax:</p> <pre><code>!hl.double&lt;\n  CVQualifiersAttr   # quals\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_24","title":"Parameters:","text":"Parameter C++ type Description quals <code>CVQualifiersAttr</code>"},{"location":"dialects/HighLevel/HighLevel/#elaboratedtype","title":"ElaboratedType","text":"<p>Syntax:</p> <pre><code>!hl.elaborated&lt;\n  Type,   # elementType\n  CVRQualifiersAttr   # quals\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_25","title":"Parameters:","text":"Parameter C++ type Description elementType <code>Type</code> quals <code>CVRQualifiersAttr</code>"},{"location":"dialects/HighLevel/HighLevel/#enumtype","title":"EnumType","text":"<p>Syntax:</p> <pre><code>!hl.enum&lt;\n  ::llvm::StringRef,   # name\n  CVQualifiersAttr   # quals\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_26","title":"Parameters:","text":"Parameter C++ type Description name <code>::llvm::StringRef</code> quals <code>CVQualifiersAttr</code>"},{"location":"dialects/HighLevel/HighLevel/#float128type","title":"Float128Type","text":"<p>Syntax:</p> <pre><code>!hl.float128&lt;\n  CVQualifiersAttr   # quals\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_27","title":"Parameters:","text":"Parameter C++ type Description quals <code>CVQualifiersAttr</code>"},{"location":"dialects/HighLevel/HighLevel/#floattype","title":"FloatType","text":"<p>Syntax:</p> <pre><code>!hl.float&lt;\n  CVQualifiersAttr   # quals\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_28","title":"Parameters:","text":"Parameter C++ type Description quals <code>CVQualifiersAttr</code>"},{"location":"dialects/HighLevel/HighLevel/#halftype","title":"HalfType","text":"<p>Syntax:</p> <pre><code>!hl.half&lt;\n  CVQualifiersAttr   # quals\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_29","title":"Parameters:","text":"Parameter C++ type Description quals <code>CVQualifiersAttr</code>"},{"location":"dialects/HighLevel/HighLevel/#int128type","title":"Int128Type","text":"<p>Syntax:</p> <pre><code>!hl.int128&lt;\n  UCVQualifiersAttr   # quals\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_30","title":"Parameters:","text":"Parameter C++ type Description quals <code>UCVQualifiersAttr</code>"},{"location":"dialects/HighLevel/HighLevel/#inttype","title":"IntType","text":"<p>Syntax:</p> <pre><code>!hl.int&lt;\n  UCVQualifiersAttr   # quals\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_31","title":"Parameters:","text":"Parameter C++ type Description quals <code>UCVQualifiersAttr</code>"},{"location":"dialects/HighLevel/HighLevel/#lvaluetype","title":"LValueType","text":"<p>Syntax:</p> <pre><code>!hl.lvalue&lt;\n  Type   # elementType\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_32","title":"Parameters:","text":"Parameter C++ type Description elementType <code>Type</code>"},{"location":"dialects/HighLevel/HighLevel/#labeltype","title":"LabelType","text":"<p>Syntax: <code>!hl.label</code></p>"},{"location":"dialects/HighLevel/HighLevel/#longdoubletype","title":"LongDoubleType","text":"<p>Syntax:</p> <pre><code>!hl.longdouble&lt;\n  CVQualifiersAttr   # quals\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_33","title":"Parameters:","text":"Parameter C++ type Description quals <code>CVQualifiersAttr</code>"},{"location":"dialects/HighLevel/HighLevel/#longlongtype","title":"LongLongType","text":"<p>Syntax:</p> <pre><code>!hl.longlong&lt;\n  UCVQualifiersAttr   # quals\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_34","title":"Parameters:","text":"Parameter C++ type Description quals <code>UCVQualifiersAttr</code>"},{"location":"dialects/HighLevel/HighLevel/#longtype","title":"LongType","text":"<p>Syntax:</p> <pre><code>!hl.long&lt;\n  UCVQualifiersAttr   # quals\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_35","title":"Parameters:","text":"Parameter C++ type Description quals <code>UCVQualifiersAttr</code>"},{"location":"dialects/HighLevel/HighLevel/#parentype","title":"ParenType","text":"<p>Syntax:</p> <pre><code>!hl.paren&lt;\n  Type   # elementType\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_36","title":"Parameters:","text":"Parameter C++ type Description elementType <code>Type</code>"},{"location":"dialects/HighLevel/HighLevel/#pointertype","title":"PointerType","text":"<p>Syntax:</p> <pre><code>!hl.ptr&lt;\n  Type,   # elementType\n  CVRQualifiersAttr   # quals\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_37","title":"Parameters:","text":"Parameter C++ type Description elementType <code>Type</code> quals <code>CVRQualifiersAttr</code>"},{"location":"dialects/HighLevel/HighLevel/#rvaluetype","title":"RValueType","text":"<p>Syntax:</p> <pre><code>!hl.rvalue&lt;\n  Type   # elementType\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_38","title":"Parameters:","text":"Parameter C++ type Description elementType <code>Type</code>"},{"location":"dialects/HighLevel/HighLevel/#recordtype","title":"RecordType","text":"<p>Syntax:</p> <pre><code>!hl.record&lt;\n  ::llvm::StringRef,   # name\n  CVQualifiersAttr   # quals\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_39","title":"Parameters:","text":"Parameter C++ type Description name <code>::llvm::StringRef</code> quals <code>CVQualifiersAttr</code>"},{"location":"dialects/HighLevel/HighLevel/#referencetype","title":"ReferenceType","text":"<p>Syntax:</p> <pre><code>!hl.reference&lt;\n  Type   # elementType\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_40","title":"Parameters:","text":"Parameter C++ type Description elementType <code>Type</code>"},{"location":"dialects/HighLevel/HighLevel/#shorttype","title":"ShortType","text":"<p>Syntax:</p> <pre><code>!hl.short&lt;\n  UCVQualifiersAttr   # quals\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_41","title":"Parameters:","text":"Parameter C++ type Description quals <code>UCVQualifiersAttr</code>"},{"location":"dialects/HighLevel/HighLevel/#typeofexprtype","title":"TypeOfExprType","text":"<p>Syntax:</p> <pre><code>!hl.typeof.expr&lt;\n  ::llvm::StringRef,   # name\n  CVRQualifiersAttr   # quals\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_42","title":"Parameters:","text":"Parameter C++ type Description name <code>::llvm::StringRef</code> quals <code>CVRQualifiersAttr</code>"},{"location":"dialects/HighLevel/HighLevel/#typeoftypetype","title":"TypeOfTypeType","text":"<p>Syntax:</p> <pre><code>!hl.typeof.type&lt;\n  Type,   # unmodifiedType\n  CVRQualifiersAttr   # quals\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_43","title":"Parameters:","text":"Parameter C++ type Description unmodifiedType <code>Type</code> quals <code>CVRQualifiersAttr</code>"},{"location":"dialects/HighLevel/HighLevel/#typedeftype","title":"TypedefType","text":"<p>Syntax:</p> <pre><code>!hl.typedef&lt;\n  ::llvm::StringRef,   # name\n  CVRQualifiersAttr   # quals\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_44","title":"Parameters:","text":"Parameter C++ type Description name <code>::llvm::StringRef</code> quals <code>CVRQualifiersAttr</code>"},{"location":"dialects/HighLevel/HighLevel/#vectortype","title":"VectorType","text":"<p>Syntax:</p> <pre><code>!hl.vector&lt;\n  SizeParam,   # size\n  Type,   # elementType\n  CVRQualifiersAttr   # quals\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_45","title":"Parameters:","text":"Parameter C++ type Description size <code>SizeParam</code> size parameter for arrays elementType <code>Type</code> quals <code>CVRQualifiersAttr</code>"},{"location":"dialects/HighLevel/HighLevel/#voidtype","title":"VoidType","text":"<p>Syntax:</p> <pre><code>!hl.void&lt;\n  CVQualifiersAttr   # quals\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_46","title":"Parameters:","text":"Parameter C++ type Description quals <code>CVQualifiersAttr</code>"},{"location":"dialects/LowLevel/LowLevel/","title":"Low Level","text":""},{"location":"dialects/LowLevel/LowLevel/#ll-dialect","title":"'ll' Dialect","text":"<p>A vast low-level dialect. This dialect serves as a bottom layer in VAST dialect tower. There should always exist a pass that lowers this dialect into LLVM Dialect.</p> <p>Work in progress - new operations are still being added and existing can be changed or removed.</p> <ul> <li>'ll' Dialect<ul> <li>Operations<ul> <li>ll.alloca (::vast::ll::Alloca)<ul> <li>Results:</li> </ul> </li> <li>ll.arg_alloca (::vast::ll::ArgAlloca)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>ll.br (::vast::ll::Br)<ul> <li>Operands:</li> <li>Successors:</li> </ul> </li> <li>ll.concat (::vast::ll::Concat)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>ll.cond_br (::vast::ll::CondBr)<ul> <li>Operands:</li> <li>Successors:</li> </ul> </li> <li>ll.cond_scope_ret (::vast::ll::CondScopeRet)<ul> <li>Operands:</li> <li>Successors:</li> </ul> </li> <li>ll.extract (::vast::ll::Extract)<ul> <li>Attributes:</li> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>ll.func (::vast::ll::FuncOp)<ul> <li>Attributes:</li> </ul> </li> <li>ll.gep (::vast::ll::StructGEPOp)<ul> <li>Attributes:</li> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>ll.initialize (::vast::ll::InitializeVar)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>ll.inline_scope (::vast::ll::InlineScope)</li> <li>ll.load (::vast::ll::Load)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>ll.return (::vast::ll::ReturnOp)<ul> <li>Operands:</li> </ul> </li> <li>ll.scope (::vast::ll::Scope)</li> <li>ll.scope_recurse (::vast::ll::ScopeRecurse)</li> <li>ll.scope_ret (::vast::ll::ScopeRet)</li> <li>ll.store (::vast::ll::Store)<ul> <li>Operands:</li> </ul> </li> <li>ll.subscript (::vast::ll::Subscript)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>ll.uninitialized_var (::vast::ll::UninitializedVar)<ul> <li>Results:</li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"dialects/LowLevel/LowLevel/#operations","title":"Operations","text":""},{"location":"dialects/LowLevel/LowLevel/#llalloca-vastllalloca","title":"<code>ll.alloca</code> (::vast::ll::Alloca)","text":"<p>Alloca for a piece of memory. For now does not support array types.</p> <p>Syntax:</p> <pre><code>operation ::= `ll.alloca` attr-dict `:` type($result)\n</code></pre>"},{"location":"dialects/LowLevel/LowLevel/#results","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/LowLevel/LowLevel/#llarg_alloca-vastllargalloca","title":"<code>ll.arg_alloca</code> (::vast::ll::ArgAlloca)","text":"<p>Alloca that holds the function argument.</p> <p>Syntax:</p> <pre><code>operation ::= `ll.arg_alloca` operands attr-dict `:` functional-type(operands, results)\n</code></pre>"},{"location":"dialects/LowLevel/LowLevel/#operands","title":"Operands:","text":"Operand Description <code>fn_arg</code> any type"},{"location":"dialects/LowLevel/LowLevel/#results_1","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/LowLevel/LowLevel/#llbr-vastllbr","title":"<code>ll.br</code> (::vast::ll::Br)","text":"<p>Direct branch.</p> <p>Syntax:</p> <pre><code>operation ::= `ll.br` $dest (`(` $operands^ `:` type($operands) `)`)? attr-dict\n</code></pre> <p>Direct branch Traits: <code>Terminator</code></p> <p>Interfaces: <code>BranchOpInterface</code></p>"},{"location":"dialects/LowLevel/LowLevel/#operands_1","title":"Operands:","text":"Operand Description <code>operands</code> variadic of any type"},{"location":"dialects/LowLevel/LowLevel/#successors","title":"Successors:","text":"Successor Description <code>dest</code> any successor"},{"location":"dialects/LowLevel/LowLevel/#llconcat-vastllconcat","title":"<code>ll.concat</code> (::vast::ll::Concat)","text":"<p>Concat integers together</p> <p>Syntax:</p> <pre><code>operation ::= `ll.concat` operands attr-dict `:` functional-type(operands, results)\n</code></pre> <p>Concat operands together, where first argument occupies lsb.</p>"},{"location":"dialects/LowLevel/LowLevel/#operands_2","title":"Operands:","text":"Operand Description <code>args</code> variadic of any type"},{"location":"dialects/LowLevel/LowLevel/#results_2","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/LowLevel/LowLevel/#llcond_br-vastllcondbr","title":"<code>ll.cond_br</code> (::vast::ll::CondBr)","text":"<p>Conditional branch.</p> <p>Syntax:</p> <pre><code>operation ::= `ll.cond_br` $cond `:` type($cond) `,`\n              $trueDest (`(` $trueOperands^ `:` type($trueOperands) `)`)? `,`\n              $falseDest (`(` $falseOperands^ `:` type($falseOperands) `)`)?\n              attr-dict\n</code></pre> <p>Direct branch Traits: <code>AttrSizedOperandSegments</code>, <code>Terminator</code></p>"},{"location":"dialects/LowLevel/LowLevel/#operands_3","title":"Operands:","text":"Operand Description <code>cond</code> any type <code>trueOperands</code> variadic of any type <code>falseOperands</code> variadic of any type"},{"location":"dialects/LowLevel/LowLevel/#successors_1","title":"Successors:","text":"Successor Description <code>trueDest</code> any successor <code>falseDest</code> any successor"},{"location":"dialects/LowLevel/LowLevel/#llcond_scope_ret-vastllcondscoperet","title":"<code>ll.cond_scope_ret</code> (::vast::ll::CondScopeRet)","text":"<p>Terminator of scope if condition is met, otherwise branch.</p> <p>Syntax:</p> <pre><code>operation ::= `ll.cond_scope_ret` $cond `:` type($cond) `,`\n              $dest (`(` $dest_operands^ `:` type($dest_operands) `)`)? attr-dict\n</code></pre> <p>Terminate or branch. Traits: <code>Terminator</code></p>"},{"location":"dialects/LowLevel/LowLevel/#operands_4","title":"Operands:","text":"Operand Description <code>cond</code> any type <code>dest_operands</code> variadic of any type"},{"location":"dialects/LowLevel/LowLevel/#successors_2","title":"Successors:","text":"Successor Description <code>dest</code> any successor"},{"location":"dialects/LowLevel/LowLevel/#llextract-vastllextract","title":"<code>ll.extract</code> (::vast::ll::Extract)","text":"<p>Extracts value</p> <p>Syntax:</p> <pre><code>operation ::= `ll.extract` operands attr-dict `:` functional-type(operands, results)\n</code></pre> <p><code>0</code> is lsb, <code>[inc, exc)</code></p>"},{"location":"dialects/LowLevel/LowLevel/#attributes","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>from</code>::mlir::TypedAttrTypedAttr instance <code>to</code>::mlir::TypedAttrTypedAttr instance"},{"location":"dialects/LowLevel/LowLevel/#operands_5","title":"Operands:","text":"Operand Description <code>arg</code> any type"},{"location":"dialects/LowLevel/LowLevel/#results_3","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/LowLevel/LowLevel/#llfunc-vastllfuncop","title":"<code>ll.func</code> (::vast::ll::FuncOp)","text":"<p>VAST function template</p> <p>Syntax:</p> <pre><code>operation ::= `ll.func` $sym_name custom&lt; FunctionSignatureAndBody &gt;($function_type, attr-dict, $body)\n</code></pre> <p>Inspired by <code>cir::FuncOp</code> and <code>mlir::func::FuncOp</code>:</p> <p>Operations within the function cannot implicitly capture values defined outside of the function, i.e. Functions are <code>IsolatedFromAbove</code>. All external references must use function arguments or attributes that establish a symbolic connection (e.g. symbols referenced by name via a string attribute like SymbolRefAttr). An external function declaration (used when referring to a function declared in some other module) has no body.</p> <p>The function linkage information is specified by <code>linkage</code>, as defined by <code>GlobalLinkageKind</code> attribute.</p> <p>Traits: <code>AutomaticAllocationScope</code>, <code>IsolatedFromAbove</code>, <code>NoTerminator</code></p> <p>Interfaces: <code>CallableOpInterface</code>, <code>FuncSymbol</code>, <code>FunctionOpInterface</code>, <code>RegionKindInterface</code>, <code>Symbol</code>, <code>VastSymbol</code></p>"},{"location":"dialects/LowLevel/LowLevel/#attributes_1","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>sym_name</code>::mlir::StringAttrstring attribute <code>function_type</code>::mlir::TypeAttrtype attribute of function type <code>linkage</code>::vast::core::GlobalLinkageKindAttrglobal linkage kind <code>sym_visibility</code>::mlir::StringAttrstring attribute <code>arg_attrs</code>::mlir::ArrayAttrArray of dictionary attributes <code>res_attrs</code>::mlir::ArrayAttrArray of dictionary attributes"},{"location":"dialects/LowLevel/LowLevel/#llgep-vastllstructgepop","title":"<code>ll.gep</code> (::vast::ll::StructGEPOp)","text":"<p>VAST struct gep  operation</p> <p>VAST struct gep operation</p>"},{"location":"dialects/LowLevel/LowLevel/#attributes_2","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>idx</code>::mlir::IntegerAttr32-bit signless integer attribute <code>name</code>::mlir::StringAttrstring attribute"},{"location":"dialects/LowLevel/LowLevel/#operands_6","title":"Operands:","text":"Operand Description <code>record</code> any type"},{"location":"dialects/LowLevel/LowLevel/#results_4","title":"Results:","text":"Result Description <code>element</code> any type"},{"location":"dialects/LowLevel/LowLevel/#llinitialize-vastllinitializevar","title":"<code>ll.initialize</code> (::vast::ll::InitializeVar)","text":"<p>Initialize a variable.</p> <p>Syntax:</p> <pre><code>operation ::= `ll.initialize` operands attr-dict `:` functional-type(operands, results)\n</code></pre> <p>Initialize a variable - for now this operation is a direct lowering from hl.var initialization section. Later there will be need to discover how this ties to constructors.</p>"},{"location":"dialects/LowLevel/LowLevel/#operands_7","title":"Operands:","text":"Operand Description <code>var</code> any type <code>elements</code> variadic of any type"},{"location":"dialects/LowLevel/LowLevel/#results_5","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/LowLevel/LowLevel/#llinline_scope-vastllinlinescope","title":"<code>ll.inline_scope</code> (::vast::ll::InlineScope)","text":"<p>Scope, that forwards (cond)scope return up.</p> <p>Result of inlined if. Traits: <code>NoRegionArguments</code></p>"},{"location":"dialects/LowLevel/LowLevel/#llload-vastllload","title":"<code>ll.load</code> (::vast::ll::Load)","text":"<p>Load value from memory. Expects <code>hl.ptr</code> as pointer type.</p> <p>Syntax:</p> <pre><code>operation ::= `ll.load` operands attr-dict `:` functional-type(operands, results)\n</code></pre> <p>Interfaces: <code>InferTypeOpInterface</code></p>"},{"location":"dialects/LowLevel/LowLevel/#operands_8","title":"Operands:","text":"Operand Description <code>ptr</code> ElementTypeInterface instance"},{"location":"dialects/LowLevel/LowLevel/#results_6","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/LowLevel/LowLevel/#llreturn-vastllreturnop","title":"<code>ll.return</code> (::vast::ll::ReturnOp)","text":"<p>Syntax:</p> <pre><code>operation ::= `ll.return` ($result^ `:` type($result))? attr-dict\n</code></pre> <p>Traits: <code>ReturnLikeTrait</code>, <code>Terminator</code></p>"},{"location":"dialects/LowLevel/LowLevel/#operands_9","title":"Operands:","text":"Operand Description <code>result</code> variadic of any type"},{"location":"dialects/LowLevel/LowLevel/#llscope-vastllscope","title":"<code>ll.scope</code> (::vast::ll::Scope)","text":"<p>Scope, holds one region.</p> <p>Syntax:</p> <pre><code>operation ::= `ll.scope` $body attr-dict\n</code></pre> <p>Scope that holds one region, each block should be terminated                         with either branch, scope return or their conditional variants. Traits: <code>NoRegionArguments</code>, <code>NoTerminator</code></p>"},{"location":"dialects/LowLevel/LowLevel/#llscope_recurse-vastllscoperecurse","title":"<code>ll.scope_recurse</code> (::vast::ll::ScopeRecurse)","text":"<p>Jump to first block of scope.</p> <p>Syntax:</p> <pre><code>operation ::= `ll.scope_recurse` attr-dict\n</code></pre> <p>Modelling continue. Traits: <code>Terminator</code></p>"},{"location":"dialects/LowLevel/LowLevel/#llscope_ret-vastllscoperet","title":"<code>ll.scope_ret</code> (::vast::ll::ScopeRet)","text":"<p>Terminator of scope.</p> <p>Syntax:</p> <pre><code>operation ::= `ll.scope_ret` attr-dict\n</code></pre> <p>Terminator of scopes (for example during lowering of loops). Traits: <code>Terminator</code></p>"},{"location":"dialects/LowLevel/LowLevel/#llstore-vastllstore","title":"<code>ll.store</code> (::vast::ll::Store)","text":"<p>Store value into memory. Expects <code>hl.ptr</code> as pointer type.</p> <p>Syntax:</p> <pre><code>operation ::= `ll.store` $ptr `,` $val attr-dict `:` type($ptr) `,` type($val)\n</code></pre>"},{"location":"dialects/LowLevel/LowLevel/#operands_10","title":"Operands:","text":"Operand Description <code>val</code> any type <code>ptr</code> ElementTypeInterface instance"},{"location":"dialects/LowLevel/LowLevel/#llsubscript-vastllsubscript","title":"<code>ll.subscript</code> (::vast::ll::Subscript)","text":"<p>VAST array subscript operator</p> <p>Syntax:</p> <pre><code>operation ::= `ll.subscript` $array `at` ` ` `[` $index `:` type($index) `]` attr-dict\n              `:` type($array) `-&gt;` type($result)\n</code></pre> <p>VAST array subscript operator</p>"},{"location":"dialects/LowLevel/LowLevel/#operands_11","title":"Operands:","text":"Operand Description <code>array</code> any type <code>index</code> any type"},{"location":"dialects/LowLevel/LowLevel/#results_7","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/LowLevel/LowLevel/#lluninitialized_var-vastlluninitializedvar","title":"<code>ll.uninitialized_var</code> (::vast::ll::UninitializedVar)","text":"<p>Declaration of variable that have not been initialized yet.</p> <p>Syntax:</p> <pre><code>operation ::= `ll.uninitialized_var` attr-dict `:` type($result)\n</code></pre> <p>Declaration of variable that have not been initialized yet. Interfaces: <code>VarSymbol</code>, <code>VastSymbol</code></p>"},{"location":"dialects/LowLevel/LowLevel/#results_8","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/Meta/Meta/","title":"Meta","text":""},{"location":"dialects/Meta/Meta/#meta-dialect","title":"'meta' Dialect","text":"<p>A vast metadata dialect. This dialect intends capture user metadata that are kept accross transformations.</p> <ul> <li>'meta' Dialect<ul> <li>Attributes<ul> <li>IdentifierAttr<ul> <li>Parameters:</li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"dialects/Meta/Meta/#attributes","title":"Attributes","text":""},{"location":"dialects/Meta/Meta/#identifierattr","title":"IdentifierAttr","text":"<p>A metadata identifier.</p> <p>Syntax:</p> <pre><code>#meta.id&lt;\n  identifier_t   # value\n&gt;\n</code></pre> <p>A metadata identifier can be used to relate operations to external metadata storage.</p> <pre><code>#meta.id&lt;\"0x3A28213A\"&gt;\n</code></pre>"},{"location":"dialects/Meta/Meta/#parameters","title":"Parameters:","text":"Parameter C++ type Description value <code>identifier_t</code>"},{"location":"dialects/Unsupported/Unsupported/","title":"Unsupported","text":""},{"location":"dialects/Unsupported/Unsupported/#unsup-dialect","title":"'unsup' Dialect","text":"<p>A vast unsupported dialect. This dialect defines a set of generic unsupported operation/types that can be used to lower AST Node that are yet not supported and can't be lowered by other dialects.</p> <ul> <li>'unsup' Dialect<ul> <li>Operations<ul> <li>unsup.decl (::vast::unsup::UnsupportedDecl)<ul> <li>Attributes:</li> </ul> </li> <li>unsup.stmt (::vast::unsup::UnsupportedStmt)<ul> <li>Attributes:</li> <li>Results:</li> </ul> </li> </ul> </li> <li>Attributes<ul> <li>UnsupportedAttr<ul> <li>Parameters:</li> </ul> </li> </ul> </li> <li>Types<ul> <li>UnsupportedType<ul> <li>Parameters:</li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"dialects/Unsupported/Unsupported/#operations","title":"Operations","text":""},{"location":"dialects/Unsupported/Unsupported/#unsupdecl-vastunsupunsupporteddecl","title":"<code>unsup.decl</code> (::vast::unsup::UnsupportedDecl)","text":"<p>VAST unsupported decl</p> <p>Syntax:</p> <pre><code>operation ::= `unsup.decl` $name attr-dict `:` $body\n</code></pre> <p>VAST unsupported decl Traits: <code>NoTerminator</code></p>"},{"location":"dialects/Unsupported/Unsupported/#attributes","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>name</code>::mlir::StringAttrstring attribute"},{"location":"dialects/Unsupported/Unsupported/#unsupstmt-vastunsupunsupportedstmt","title":"<code>unsup.stmt</code> (::vast::unsup::UnsupportedStmt)","text":"<p>VAST unsupported statement</p> <p>Syntax:</p> <pre><code>operation ::= `unsup.stmt` $name attr-dict `:` type($result) $children\n</code></pre> <p>VAST unsupported statement Traits: <code>NoTerminator</code></p>"},{"location":"dialects/Unsupported/Unsupported/#attributes_1","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>name</code>::mlir::StringAttrstring attribute"},{"location":"dialects/Unsupported/Unsupported/#results","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/Unsupported/Unsupported/#attributes_2","title":"Attributes","text":""},{"location":"dialects/Unsupported/Unsupported/#unsupportedattr","title":"UnsupportedAttr","text":"<p>Syntax:</p> <pre><code>#unsup.attr&lt;\n  ::mlir::StringAttr   # spelling\n&gt;\n</code></pre>"},{"location":"dialects/Unsupported/Unsupported/#parameters","title":"Parameters:","text":"Parameter C++ type Description spelling <code>::mlir::StringAttr</code>"},{"location":"dialects/Unsupported/Unsupported/#types","title":"Types","text":""},{"location":"dialects/Unsupported/Unsupported/#unsupportedtype","title":"UnsupportedType","text":"<p>Syntax:</p> <pre><code>!unsup.type&lt;\n  ::llvm::StringRef   # originName\n&gt;\n</code></pre>"},{"location":"dialects/Unsupported/Unsupported/#parameters_1","title":"Parameters:","text":"Parameter C++ type Description originName <code>::llvm::StringRef</code>"}]}